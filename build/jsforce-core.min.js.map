{"version":3,"sources":["node_modules/browser-pack/_prelude.js","core.js","jsforce-core.min.js","lib/VERSION.js","lib/_required.js","lib/browser/canvas.js","lib/browser/client.js","lib/browser/jsonp.js","lib/browser/request.js","lib/cache.js","lib/connection.js","lib/core.js","lib/csv.js","lib/date.js","lib/http-api.js","lib/logger.js","lib/oauth2.js","lib/process.js","lib/promise.js","lib/query.js","lib/quick-action.js","lib/record-stream.js","lib/record.js","lib/require.js","lib/soap.js","lib/sobject.js","lib/soql-builder.js","lib/transport.js","node_modules/asap/browser-raw.js","node_modules/base64-js/index.js","node_modules/buffer/index.js","node_modules/core-util-is/lib/util.js","node_modules/csv-parse/lib/index.js","node_modules/csv-parse/lib/sync.js","node_modules/csv-stringify/lib/index.js","node_modules/csv-stringify/lib/sync.js","node_modules/events/events.js","node_modules/ieee754/index.js","node_modules/inherits/inherits_browser.js","node_modules/is-buffer/index.js","node_modules/isarray/index.js","node_modules/lodash.get/index.js","node_modules/lodash/core.js","node_modules/multistream/index.js","node_modules/process-nextick-args/index.js","node_modules/process/browser.js","node_modules/promise/lib/core.js","node_modules/promise/lib/es6-extensions.js","node_modules/querystring-es3/decode.js","node_modules/querystring-es3/encode.js","node_modules/querystring-es3/index.js","node_modules/readable-stream/duplex-browser.js","node_modules/readable-stream/lib/_stream_duplex.js","node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/readable-stream/lib/_stream_readable.js","node_modules/readable-stream/lib/_stream_transform.js","node_modules/readable-stream/lib/_stream_writable.js","node_modules/readable-stream/lib/internal/streams/BufferList.js","node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/readable-stream/passthrough.js","node_modules/readable-stream/readable-browser.js","node_modules/readable-stream/transform.js","node_modules/readable-stream/writable-browser.js","node_modules/safe-buffer/index.js","node_modules/sax/lib/sax.js","node_modules/stream-browserify/index.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/timers-browserify/main.js","node_modules/util-deprecate/browser.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/util.js","node_modules/xml2js/lib/bom.js","node_modules/xml2js/lib/builder.js","node_modules/xml2js/lib/defaults.js","node_modules/xml2js/lib/parser.js","node_modules/xml2js/lib/processors.js","node_modules/xml2js/lib/xml2js.js","node_modules/xmlbuilder/lib/Utility.js","node_modules/xmlbuilder/lib/XMLAttribute.js","node_modules/xmlbuilder/lib/XMLCData.js","node_modules/xmlbuilder/lib/XMLComment.js","node_modules/xmlbuilder/lib/XMLDTDAttList.js","node_modules/xmlbuilder/lib/XMLDTDElement.js","node_modules/xmlbuilder/lib/XMLDTDEntity.js","node_modules/xmlbuilder/lib/XMLDTDNotation.js","node_modules/xmlbuilder/lib/XMLDeclaration.js","node_modules/xmlbuilder/lib/XMLDocType.js","node_modules/xmlbuilder/lib/XMLDocument.js","node_modules/xmlbuilder/lib/XMLDocumentCB.js","node_modules/xmlbuilder/lib/XMLElement.js","node_modules/xmlbuilder/lib/XMLNode.js","node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","node_modules/xmlbuilder/lib/XMLRaw.js","node_modules/xmlbuilder/lib/XMLStreamWriter.js","node_modules/xmlbuilder/lib/XMLStringWriter.js","node_modules/xmlbuilder/lib/XMLStringifier.js","node_modules/xmlbuilder/lib/XMLText.js","node_modules/xmlbuilder/lib/XMLWriterBase.js","node_modules/xmlbuilder/lib/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","jsforce","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","browser","../core","./client","2","3","inherits","util","events","lodash/core","readable-stream","multistream","./VERSION","./cache","./connection","./core","./csv","./date","./http-api","./logger","./oauth2","./process","./promise","./query","./quick-action","./record-stream","./record","./soap","./sobject","./soql-builder","./transport","4","parseHeaders","hs","headers","split","forEach","line","pair","name","toLowerCase","value","Duplex","_","supported","Sfdc","canvas","createRequest","signedRequest","params","callback","send","body","settings","client","method","data","contentType","success","responseHeaders","payload","isString","JSON","stringify","response","statusCode","status","str","end","failure","err","ajax","url","_read","size","push","bufs","sent","_write","chunk","encoding","toString","on","join","test","5","popupWin","w","h","left","screen","width","top","height","open","handleCallbackResponse","res","checkCallbackResponse","state","localStorage","getItem","removeItem","states","prefix","promptType","cli","Client","_storeTokens","location","hash","_storeError","close","qs","parse","substring","access_token","search","error","Connection","OAuth2","clientIdx","_prefix","connection","EventEmitter","prototype","init","config","tokens","_getTokens","initialize","setTimeout","emit","login","options","isFunction","extend","_prompt","oauth2","rand","Math","random","setItem","authzUrl","getAuthorizationUrl","response_type","scope","pw","href","_removeTokens","pid","setInterval","closed","clearInterval","_getError","error_description","isLoggedIn","accessToken","logout","regexp","RegExp","document","cookie","match","issuedAt","Number","Date","now","userInfo","idUrl","ids","id","pop","organizationId","instanceUrl","instance_url","issued_at","../connection","../oauth2","querystring","6","_index","jsonpParam","timeout","toUpperCase","cbFuncName","callbacks","indexOf","script","createElement","type","src","documentElement","appendChild","cleanup","content-type","clearTimeout","removeChild","7","getResponseHeaderNames","xhr","headerLines","getAllResponseHeaders","map","headerLine","XMLHttpRequest","header","setRequestHeader","onreadystatechange","readyState","headerNames","headerName","getResponseHeader","8","createCacheKey","namespace","args","Array","slice","apply","CacheEntry","fetching","get","once","isUndefined","_value","set","clear","Cache","_entries","key","entry","k","makeResponseCacheable","fn","cache","arguments","result","ret","then","undefined","makeCacheable","$fn","9","Buffer","oauthRefreshFn","conn","refreshToken","parseIdUrl","parseSignedRequest","sr","msg","json","formatDate","date","pad","number","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","idUrls","userId","orgId","createUsernamePasswordRefreshFn","username","password","esc","String","replace","Promise","Logger","Query","SObject","QuickAction","HttpApi","Transport","Process","defaults","loginUrl","version","MAX_DML_COUNT","_logger","logLevel","clientId","clientSecret","redirectUri","proxyUrl","httpProxy","maxRequest","_transport","ProxyTransport","HttpProxyTransport","callOptions","process","refreshFn","_refreshDelegate","SessionRefreshDelegate","cacheOptions","describe$","describe","describeSObject$","describeSObject","describeGlobal$","describeGlobal","serverUrl","sessionId","oauthToken","CanvasTransport","limitInfo","sobjects","bind","types","so","sobject","tooling","_sessionType","_baseUrl","_normalizeUrl","request","httpApi","apiUsage","used","parseInt","limit","thenCall","requestGet","requestPost","requestPut","requestPatch","requestDelete","query","soql","run","queryAll","scanAll","queryMore","locator","_ensureVersion","majorVersion","versions","retrieve","isArray","_retrieveMany","_retrieveParallel","_retrieveSingle","reject","fields","all","allOrNone","errorCode","resolve","field","Content-Type","_toRecordResult","message","content","errors","insert","create","records","_createMany","_createParallel","_createSingle","record","sobjectType","attributes","clone","Id","_toSaveResult","allowRecursive","rets1","rets2","concat","update","_updateMany","_updateParallel","_updateSingle","noContentResponse","upsert","extIdField","extId","results","del","destroy","_destroyMany","_destroyParallel","_destroySingle","sosl","encodeURIComponent","identity","transport","JsonpTransport","user_id","organization_id","authorize","logger","requestToken","refresh_token","debug","loginByOAuth2","loginBySoap","authenticate","soapLoginEndpoint","httpRequest","SOAPAction","m","faultstring","revoke","logoutByOAuth2","logoutBySoap","revokeToken","recent","isNumber","recentItems","updated","start","deleted","tabs","limits","theme","quickActions","quickAction","actionName","buffer","10","VERSION","SfDate","RecordStream","./require","11","parseCSV","columns","csvParseSync","toCSV","csvStringifySync","parseCSVStream","csvParse","serializeCSVStream","csvStringify","csv-parse","csv-parse/lib/sync","csv-stringify","csv-stringify/lib/sync","12","zeropad","createLiteralBuilder","literal","num","_literal","toJSON","toDateLiteral","parseDate","yy","getFullYear","mm","getMonth","dd","getDate","dstr","toDateTimeLiteral","hh","mi","ss","dtstr","d","setUTCFullYear","setUTCDate","setUTCMonth","setUTCHours","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","offset","setTime","getTime","setFullYear","setDate","setMonth","setHours","setMinutes","setSeconds","setMilliseconds","SfDateLiterals","YESTERDAY","TODAY","TOMORROW","LAST_WEEK","THIS_WEEK","NEXT_WEEK","LAST_MONTH","THIS_MONTH","NEXT_MONTH","LAST_90_DAYS","NEXT_90_DAYS","LAST_N_DAYS","NEXT_N_DAYS","NEXT_N_WEEKS","LAST_N_WEEKS","NEXT_N_MONTHS","LAST_N_MONTHS","THIS_QUARTER","LAST_QUARTER","NEXT_QUARTER","NEXT_N_QUARTERS","LAST_N_QUARTERS","THIS_YEAR","LAST_YEAR","NEXT_YEAR","NEXT_N_YEARS","LAST_N_YEARS","THIS_FISCAL_QUARTER","LAST_FISCAL_QUARTER","NEXT_FISCAL_QUARTER","NEXT_N_FISCAL_QUARTERS","LAST_N_FISCAL_QUARTERS","THIS_FISCAL_YEAR","LAST_FISCAL_YEAR","NEXT_FISCAL_YEAR","NEXT_N_FISCAL_YEARS","LAST_N_FISCAL_YEARS","13","parseJSON","parseXML","parseString","explicitArray","parseText","_conn","_responseType","responseType","_noContentResponse","refreshDelegate","getRefreshDelegate","lastInstanceUrl","deferred","defer","onResume","_refreshing","promise","beforeSend","requestTime","responseTime","isSessionExpired","refresh","isErrorResponse","getError","getResponseBody","Authorization","getResponseContentType","parseResponseBody","parseBody","hasErrorInResponseBody","parseError","isObject","_refreshFn","since","_lastRefreshedAt","xml2js","14","createLoggerFunction","level","log","LogLevels","INFO","_logLevel","DEBUG","WARN","ERROR","FATAL","console","15","authzServiceUrl","tokenServiceUrl","revokeServiceUrl","client_id","redirect_uri","grant_type","client_secret","_postParams","token","req","jsonpTransport","16","ProcessRule","rule","approval","ApprovalProcess","list","rules","trigger","contextIds","approvals","requests","_request","_createRequest","actionType","contextId","comments","ApprovalProcessRequest","submit","approve","workitemId","_process","onResolve","onReject","_promise","rets","17","nextTick","fail","Deferred","promise/lib/es6-extensions","18","stream","SOQLBuilder","super_","objectMode","_soql","_locator","_config","select","includes","include","sort","_options","maxFetch","autoFetch","responseTarget","ResponseTargets","QueryResult","_executed","_finished","_chaining","_deferred","Readable","_fields","where","conditions","skip","orderby","dir","childRelName","childConfig","table","childQuery","SubQuery","_children","crname","setResponseTarget","exec","execute","promiseCallback","Records","onRecord","removeListener","_execute","toSOQL","totalFetched","totalSize","SingleRecord","Count","numRecords","nextRecordsUrl","done","read","addListener","_expandFields","findRelationTable","rname","ptable","_parent","describeCache","upperRname","childRelation","find","childRelationships","cr","relationshipName","childSObject","expandAsteriskField","fpath","shift","rfield","rtable","referenceTo","fpaths","expandedFields","flatten","explain","createSOQL","Serializable","filter","DEFAULT_BULK_THRESHOLD","thresholdNum","allowBulk","bulkThreshold","batch","handleRecord","rec","write","deleteBulk","handleEnd","mapping","updateStream","recordMapStream","updateBulk","pipe","onResolved","parent","19","path","_path","defaultValues","20","convertRecordForSerialization","Object","keys","reduce","urec","nullValue","precord","prec","pkey","createPipelineStream","s1","s2","pipeline","PassThrough","source","unpipe","dest","Transform","CSV","_transform","enc","_dataStream","converter","DataStreamConverters","serialize","Parsable","_parserStream","highWaterMark","ev","mapStream","noeval","evalMapping","$0","prop","v","isNull","mapped","filterStream","CSVStreamConverter","csv","21","RecordReference","blob","fieldName","22","required","./_required","23","convertType","schema","$","lookupValue","obj","propRegExps","toXML","attrs","elems","startTag","endTag","SOAP","_endpointUrl","endpointUrl","_xmlns","xmlns","invoke","_createEnvelope","faultcode","SessionHeader","CallOptions","24","Record","layouts$","layouts","compactLayouts$","compactLayouts","approvalLayouts$","approvalLayouts","findOne","count","count()","bulkload","operation","input","bulk","load","insertBulk","createBulk","upsertBulk","destroyBulk","deleteHardBulk","destroyHardBulk","layoutName","listviews","listview","ListView","25","createFieldsClause","cond","createConditionClause","createOrderByClause","childQueries","values","cquery","operator","depth","conds","op","createFieldExpression","expr","paren","sfop","opMap","valueExpr","createValueExpression","escapeSOQLString","flag","s","=","$eq","!=","$ne",">","$gt","<","$lt",">=","$gte","<=","$lte","$like","$nlike","$in","$nin","$includes","$excludes","$exists","26","streamify","factory","_then","newPromise","normalizeApiHost","apiHost","jsonp","followAllRedirects","env","HTTP_PROXY","proxy","HTTP_TIMEOUT","baseUrl","LOCATION_BASE_URL","host","_getHttpRequestModule","_jsonpParam","_signedRequest","_proxyUrl","proxyParams","salesforceproxy-endpoint","_httpProxy","./browser/canvas","./browser/jsonp","27","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","toggle","observer","BrowserMutationObserver","node","createTextNode","observe","characterData","makeRequestCallFromTimer","handleTimer","timeoutHandle","intervalHandle","MutationObserver","WebKitMutationObserver","28","getLens","b64","len","validLen","placeHoldersLen","byteLength","lens","_byteLength","toByteArray","tmp","arr","Arr","curByte","revLookup","charCodeAt","tripletToBase64","lookup","encodeChunk","uint8","output","fromByteArray","extraBytes","parts","maxChunkLength","len2","Uint8Array","29","30","typedArraySupport","__proto__","foo","createBuffer","K_MAX_LENGTH","RangeError","buf","arg","encodingOrOffset","allocUnsafe","from","TypeError","isArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","checked","string","isEncoding","actual","fromArrayLike","array","byteOffset","isBuffer","copy","ArrayBuffer","isView","numberIsNaN","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","val","arrayIndexOf","lastIndexOf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","min","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","out","toHex","bytes","checkOffset","ext","checkInt","max","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","base64clean","trim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","byteArray","hi","lo","dst","constructor","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","defineProperty","Symbol","species","configurable","enumerable","writable","poolSize","allocUnsafeSlow","_isBuffer","compare","x","y","pos","swap16","swap32","swap64","toLocaleString","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","_arr","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","base64-js","31","objectToString","isBoolean","isNullOrUndefined","isSymbol","isRegExp","re","isDate","isError","isPrimitive","../../is-buffer/index.js","32","Parser","StringDecoder","isObjLiteral","called","chunks","parser","objname","base","base1","base10","base11","base12","base13","base14","base15","base16","base2","base3","base4","base5","base6","base7","base8","base9","rowDelimiter","delimiter","quote","escape","comment","ltrim","rtrim","auto_parse","auto_parse_date","isNaN","relax","relax_column_count","skip_empty_lines","max_limit_on_data_read","skip_lines_with_empty_values","lines","skipped_line_count","empty_line_count","is_int","is_float","parseFloat","decoder","quoting","commenting","nextChar","closingQuote","rawBuf","rowDelimiterLength","__write","_flush","__push","call_column_udf","lineAsColumns","ref","row","line_length","to","raw","chars","areNextCharsDelimiter","areNextCharsRowDelimiters","char","escapeIsQuote","isDelimiter","isEscape","isNextCharAComment","isQuote","isRowDelimiter","isRowDelimiterLength","l","nextCharPos","ref1","ref2","ref3","ref4","ref5","remainingBuffer","wasCommenting","_this","some","rd","charAt","trimRight","_obj","_test","getPrototypeOf","string_decoder","33","./index","34","Stringifier","stringifier","opts","quoted","quotedEmpty","quotedString","eof","formatters","bool","object","countWriten","label","labels","preserve","_line","column","containsEscape","containsLinebreak","containsQuote","containsdelimiter","newLine","shouldQuote","splice","lodash.get","35","36","_events","hasOwnProperty","objectCreate","_eventsCount","_maxListeners","$getMaxListeners","that","defaultMaxListeners","emitNone","handler","isFn","listeners","arrayClone","emitOne","arg1","emitTwo","arg2","emitThree","arg3","emitMany","_addListener","listener","prepend","existing","newListener","unshift","warned","emitter","warn","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","listenerCount","spliceOne","objectCreatePolyfill","proto","F","objectKeysPolyfill","functionBindPolyfill","context","objectKeys","Function","hasDefineProperty","setMaxListeners","getMaxListeners","er","doError","prependListener","prependOnceListener","position","originalListener","removeAllListeners","rawListeners","eventNames","Reflect","ownKeys","37","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","floor","LN2","38","ctor","superCtor","TempCtor","39","isSlowBuffer","40","41","getValue","isHostObject","Hash","entries","hashClear","__data__","nativeCreate","hashDelete","has","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","lastIndex","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","eq","baseGet","isKey","castPath","toKey","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseToString","symbolToString","INFINITY","stringToPath","isKeyable","getNative","reIsPlainProp","reIsDeepProp","func","maskSrcKey","funcToString","memoize","resolver","FUNC_ERROR_TEXT","memoized","other","tag","funcTag","genTag","isObjectLike","symbolTag","defaultValue","reLeadingDot","rePropName","reRegExpChar","reEscapeChar","freeGlobal","freeSelf","root","arrayProto","funcProto","objectProto","coreJsData","uid","IE_PROTO","symbolProto","42","arrayPush","baseFindIndex","predicate","fromIndex","fromRight","baseProperty","basePropertyOf","baseReduce","collection","iteratee","accumulator","initAccum","eachFunc","baseValues","props","baseMap","overArg","transform","lodash","LodashWrapper","chainAll","__wrapped__","__actions__","__chain__","assignValue","objValue","baseAssignValue","baseDelay","wait","baseEvery","baseEach","baseExtremum","comparator","current","computed","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseFunctions","baseGetTag","baseGt","baseIsDate","dateTag","baseIsEqual","bitmask","customizer","stack","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","argsTag","objectTag","objIsObj","othIsObj","isSameTag","objStack","othStack","equalArrays","equalByTag","COMPARE_PARTIAL_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsRegExp","regexpTag","baseIteratee","baseMatches","baseLt","isArrayLike","nativeKeys","COMPARE_UNORDERED_FLAG","basePick","baseRest","setToString","overRest","baseSlice","copyArray","baseSome","baseWrapperValue","actions","action","thisArg","compareAscending","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","copyObject","isNew","newValue","createAssigner","assigner","sources","createBaseEach","iterable","createBaseFor","keysFunc","createCtor","Ctor","thisBinding","baseCreate","createFind","findIndexFunc","createPartial","partials","wrapper","argsIndex","argsLength","leftIndex","leftLength","isBind","WRAP_BIND_FLAG","isPartial","othLength","seen","compared","arrValue","othValue","othIndex","boolTag","numberTag","errorTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatRest","isArguments","isIndex","MAX_SAFE_INTEGER","reIsUint","isIterateeCall","nativeKeysIn","nativeObjectToString","nativeMax","otherArgs","compact","Boolean","findIndex","toInteger","flattenDeep","head","isReflexive","last","chain","tap","interceptor","thru","wrapperValue","every","guard","sortBy","criteria","before","negate","isLength","isEmpty","isEqual","nativeIsFinite","asyncTag","proxyTag","toArray","properties","assign","reHasUnescapedHtml","reUnescapedHtml","escapeHtmlChar","matches","mixin","methodNames","isFunc","methodName","noConflict","oldDash","noop","uniqueId","idCounter","WRAP_PARTIAL_FLAG","htmlEscapes","&","\"","'","freeExports","nodeType","freeModule","propertyIsEnumerable","baseIsArguments","delay","toNumber","assignIn","keysIn","propsIndex","propsLength","pick","paths","each","first","chainName","retUnwrapped","valueOf","43","MultiStream","streams","destroyed","_drained","_forwarding","_current","_toStreams2","toStreams2Obj","toStreams2Buf","_queue","_attachErrorListener","_next","toStreams2","_readableState","wrap","_forward","_gotNextStream","onReadable","onClose","ended","onEnd","onError","44","45","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","title","argv","off","binding","cwd","chdir","umask","46","getThen","ex","LAST_ERROR","IS_ERROR","tryCallOne","tryCallTwo","_40","_65","_55","_72","doResolve","safeThen","onFulfilled","onRejected","handle","Handler","_37","handleResolved","asap","cb","finale","_87","reason","_61","asap/raw","47","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","race","./core.js","48","sep","maxKeys","kstr","vstr","idx","decodeURIComponent","xs","49","stringifyPrimitive","ks","50","decode","encode","./decode","./encode","51","./lib/_stream_duplex.js","52","Writable","readable","allowHalfOpen","onend","_writableState","pna","onEndNT","_destroy","./_stream_readable","./_stream_writable","core-util-is","process-nextick-args","53","./_stream_transform","54","_uint8ArrayToBuffer","_isUint8Array","OurUint8Array","event","ReadableState","isDuplex","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","BufferList","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","Stream","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","addChunk","maybeReadMore","needMoreData","emitReadable","computeNewHighWaterMark","MAX_HWM","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","EElistenerCount","nReadingNextTick","resume","resume_","fromList","fromListPartial","hasStrings","copyFromBufferString","copyFromBuffer","next","nb","tail","endReadable","endReadableNT","debugUtil","debuglog","destroyImpl","kProxyEvents","_undestroy","undestroy","isPaused","setEncoding","nOrig","doRead","pipeOpts","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","needDrain","increasedAwaitDrain","pause","doEnd","stdout","stderr","endFn","dests","paused","_fromList","./_stream_duplex","./internal/streams/BufferList","./internal/streams/destroy","./internal/streams/stream","isarray","safe-buffer","string_decoder/","55","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","prefinish","_this2","err2","56","setImmediate","CorkedRequest","finish","onCorkedFinish","nop","WritableState","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","ending","finished","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","realHasInstance","writev","_writev","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","asyncWrite","afterWrite","onwriteDrain","holder","allBuffers","callFinal","need","endWritable","corkReq","internalUtil","deprecate","getBuffer","hasInstance","cork","uncork","setDefaultEncoding","timers","util-deprecate","57","_classCallCheck","instance","Constructor","copyBuffer","custom","58","readableDestroyed","writableDestroyed","emitErrorNT","59","60","./readable","61","./lib/_stream_passthrough.js","./lib/_stream_readable.js","./lib/_stream_transform.js","./lib/_stream_writable.js","62","63","64","copyProps","SafeBuffer","65","sax","SAXParser","strict","opt","clearBuffers","q","bufferCheckPosition","MAX_BUFFER_LENGTH","lowercase","lowercasetags","looseCase","tags","closedRoot","sawRoot","noscript","S","BEGIN","strictEntities","ENTITIES","XML_ENTITIES","attribList","ns","rootNS","trackPosition","checkBufferLength","maxAllowed","maxActual","buffers","closeText","emitNode","cdata","flushBuffers","createStream","SAXStream","_parser","me","_decoder","streamWraps","isWhitespace","isAttribEnd","isMatch","regex","notMatch","textNode","textopts","text","normalize","strictFail","BEGIN_WHITESPACE","TEXT","newTag","tagName","qname","attribute","qualName","local","attrib","attribName","attribValue","qn","XML_NAMESPACE","XMLNS_NAMESPACE","openTag","selfClosing","uri","nv","isSelfClosing","SCRIPT","closeTag","closeTo","parseEntity","entity","entityLC","numStr","fromCodePoint","beginWhiteSpace","OPEN_WAKA","startTagPosition","starti","TEXT_ENTITY","SCRIPT_ENDING","CLOSE_TAG","SGML_DECL","sgmlDecl","nameStart","OPEN_TAG","PROC_INST","procInstName","procInstBody","CDATA","COMMENT","DOCTYPE","doctype","SGML_DECL_QUOTED","DOCTYPE_DTD","DOCTYPE_QUOTED","DOCTYPE_DTD_QUOTED","COMMENT_ENDING","COMMENT_ENDED","CDATA_ENDING","CDATA_ENDING_2","PROC_INST_ENDING","PROC_INST_BODY","nameBody","OPEN_TAG_SLASH","ATTRIB","ATTRIB_NAME","ATTRIB_VALUE","ATTRIB_NAME_SAW_WHITE","ATTRIB_VALUE_QUOTED","ATTRIB_VALUE_UNQUOTED","ATTRIB_VALUE_ENTITY_Q","ATTRIB_VALUE_CLOSED","ATTRIB_VALUE_ENTITY_U","CLOSE_TAG_SAW_WHITE","returnState","entityBody","entityStart","EVENTS","newf","SD","xml","STATE","COMMENT_STARTING","amp","gt","lt","quot","apos","AElig","Aacute","Acirc","Agrave","Aring","Atilde","Auml","Ccedil","ETH","Eacute","Ecirc","Egrave","Euml","Iacute","Icirc","Igrave","Iuml","Ntilde","Oacute","Ocirc","Ograve","Oslash","Otilde","Ouml","THORN","Uacute","Ucirc","Ugrave","Uuml","Yacute","aacute","acirc","aelig","agrave","aring","atilde","auml","ccedil","eacute","ecirc","egrave","eth","euml","iacute","icirc","igrave","iuml","ntilde","oacute","ocirc","ograve","oslash","otilde","ouml","szlig","thorn","uacute","ucirc","ugrave","uuml","yacute","yuml","reg","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","macr","deg","plusmn","sup1","sup2","sup3","acute","micro","para","middot","cedil","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","stringFromCharCode","highSurrogate","lowSurrogate","MAX_SIZE","codeUnits","66","EE","didOnEnd","_isStdio","readable-stream/duplex.js","readable-stream/passthrough.js","readable-stream/readable.js","readable-stream/transform.js","readable-stream/writable.js","67","_normalizeEncoding","retried","normalizeEncoding","nenc","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckIncomplete","utf8CheckExtraBytes","utf8Text","total","utf8End","68","clearImmediate","Timeout","clearFn","_id","_clearFn","immediateIds","nextImmediateId","unref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","process/browser.js","69","deprecated","trace","70","71","ctx","stylize","stylizeNoColor","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","arrayToHash","recurseTimes","primitive","formatPrimitive","visibleKeys","getOwnPropertyNames","formatError","braces","toUTCString","formatArray","formatProperty","reduceToSingleString","simple","desc","getOwnPropertyDescriptor","numLinesEst","prev","cur","ar","timestamp","time","getHours","getMinutes","getSeconds","months","formatRegExp","format","objects","throwDeprecation","traceDeprecation","noDeprecation","debugEnviron","debugs","NODE_DEBUG","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","boolean","null","origin","add","./support/isBuffer","72","stripBOM","73","builder","escapeCDATA","requiresCDATA","wrapCDATA","hasProp","Builder","buildObject","rootObj","attrkey","charkey","render","rootElement","rootName","element","attr","child","txt","ele","up","att","xmldec","headless","allowSurrogateChars","renderOpts","./defaults","xmlbuilder","74","0.1","explicitCharkey","normalizeTags","ignoreAttrs","mergeAttrs","explicitRoot","validator","explicitChildren","childkey","charsAsChildren","includeWhiteChars","async","attrNameProcessors","attrValueProcessors","tagNameProcessors","valueProcessors","emptyTag","0.2","preserveChildrenOrder","standalone","pretty","indent","newline","chunkSize","75","bom","processItem","processors","__super__","thing","superClass","reset","assignOrPush","processAsync","xmlnskey","saxParser","error1","errThrown","ontext","resultObject","EXPLICIT_CHARKEY","onopentag","processedKey","onclosetag","emptyStr","nodeName","objClone","old","xpath","charChild","#name","oncdata","./bom","./processors","76","prefixMatch","firstCharLowerCase","stripPrefix","parseNumbers","parseBooleans","77","ValidationError","./builder","./parser","78","isPlainObject","79","XMLAttribute","attName","attValue","writer","80","XMLCData","XMLNode","./XMLNode","81","XMLComment","82","XMLDTDAttList","elementName","attributeName","attributeType","defaultValueType","eleName","dtdAttType","dtdAttDefault","dtdAttList","83","XMLDTDElement","dtdElementValue","dtdElement","84","XMLDTDEntity","pe","pubID","sysID","dtdPubID","dtdSysID","nData","dtdNData","dtdEntityValue","dtdEntity","./Utility","85","XMLDTDNotation","dtdNotation","86","XMLDeclaration","xmlVersion","xmlEncoding","xmlStandalone","declaration","87","XMLDocType","documentObject","children","attList","pEntity","notation","docType","ent","pent","./XMLDTDAttList","./XMLDTDElement","./XMLDTDEntity","./XMLDTDNotation","88","XMLDocument","XMLStringWriter","XMLStringifier","isDocument","writerOptions","./XMLStringWriter","./XMLStringifier","89","XMLDocumentCB","XMLElement","XMLProcessingInstruction","XMLRaw","XMLText","onData","onDataCallback","onEndCallback","currentNode","currentLevel","openTags","documentStarted","documentCompleted","openCurrent","skipNullAttributes","instruction","insTarget","insValue","processingInstruction","rootNodeName","closeNode","openNode","isOpen","isClosed","nod","dat","com","ins","dec","dtd","./XMLAttribute","./XMLCData","./XMLComment","./XMLDeclaration","./XMLDocType","./XMLElement","./XMLProcessingInstruction","./XMLRaw","./XMLText","90","isRoot","rootObject","clonedSelf","clonedChild","removeAttribute","91","childNode","lastChild","len1","ignoreDecorators","convertAttKey","separateArrayItems","convertTextKey","convertCDataKey","convertCommentKey","convertRawKey","convertPIKey","insertBefore","removed","insertAfter","remove","commentBefore","commentAfter","instructionBefore","instructionAfter","doc","importDocument","clonedRoot","importXMLBuilder","92","93","94","XMLStreamWriter","XMLWriterBase","isLastRootNode","space","endline","spacebeforeslash","allowEmpty","./XMLWriterBase","95","textispresent","textispresentwasset","newlinedefault","prettydefault","dontprettytextnodes","96","assertLegalChar","noDoubleEncoding","eleText","elEscape","attEscape","ampregex","97","98","ref6","99","begin","stringWriter","streamWriter","./XMLDocument","./XMLDocumentCB","./XMLStreamWriter"],"mappings":"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AAA,IACAC,OAAA,IACAC,OAAA,IACAC,MAAA,IACAC,OAAA,IACAC,MAAA,IACAC,MAAA,IACAC,OAAA,IACAC,OAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,MAAA,IACAC,QAAA,IACAC,KAAA,IACAC,IAAA,IACAC,MAAA,IACAC,KAAA,IACAC,MAAA,IACAC,OAAA,IACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IACAC,QAAA,IACAC,GAAA,IACAC,IAAA,IACAC,OAAA,IACAC,MAAA,IACAC,IAAA,IACAC,QAAA,IACAC,IAAA,IACAC,IAAA,IACAC,IAAA,IACAC,MAAA,IACAC,SAAA,IACAC,MAAA,IACAC,IAAA,IACAC,KAAA,KACAC,KAAA,KACAC,OAAA,KACAC,KAAA,KACAC,IAAA,KACAC,IAAA,KACAC,IAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,KAAA,KACAC,OAAA,KACAC,OAAA,KACAC,MAAA,KACAC,MAAA,KACAC,OAAA,KACAC,OAAA,KACAC,MAAA,KACAC,MAAA,KACAC,KAAA,KACAC,MAAA,KACAC,OAAA,KACAC,KAAA,KACAC,MAAA,KACAC,QAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,MAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,KAAA,KACAC,OAAA,KACAC,KA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","file":"jsforce-core.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\nvar jsforce = require('../core');\njsforce.browser = require('./client');\nmodule.exports = jsforce;\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.jsforce = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar jsforce = require('../core');\njsforce.browser = require('./client');\nmodule.exports = jsforce;\n\n},{\"../core\":10,\"./client\":5}],2:[function(require,module,exports){\n'use strict';\nmodule.exports = '1.8.5';\n\n},{}],3:[function(require,module,exports){\n// This file content is dynamically created in build script\n\"use strict\";\nmodule.exports = {\n  'inherits': require('inherits'),\n  'util': require('util'),\n  'events': require('events'),\n  'lodash/core': require('lodash/core'),\n  'readable-stream': require('readable-stream'),\n  'multistream': require('multistream'),\n  './VERSION': require('./VERSION'),\n  './cache': require('./cache'),\n  './connection': require('./connection'),\n  './core': require('./core'),\n  './csv': require('./csv'),\n  './date': require('./date'),\n  './http-api': require('./http-api'),\n  './logger': require('./logger'),\n  './oauth2': require('./oauth2'),\n  './process': require('./process'),\n  './promise': require('./promise'),\n  './query': require('./query'),\n  './quick-action': require('./quick-action'),\n  './record-stream': require('./record-stream'),\n  './record': require('./record'),\n  './soap': require('./soap'),\n  './sobject': require('./sobject'),\n  './soql-builder': require('./soql-builder'),\n  './transport': require('./transport')\n};\n},{\"./VERSION\":2,\"./cache\":8,\"./connection\":9,\"./core\":10,\"./csv\":11,\"./date\":12,\"./http-api\":13,\"./logger\":14,\"./oauth2\":15,\"./process\":16,\"./promise\":17,\"./query\":18,\"./quick-action\":19,\"./record\":21,\"./record-stream\":20,\"./soap\":23,\"./sobject\":24,\"./soql-builder\":25,\"./transport\":26,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"multistream\":43,\"readable-stream\":61,\"util\":71}],4:[function(require,module,exports){\n/*global Sfdc */\n'use strict';\n\nvar Duplex = require('readable-stream').Duplex,\n    _ = require('lodash/core');\n\nfunction parseHeaders(hs) {\n  var headers = {};\n  hs.split(/\\n/).forEach(function(line) {\n    var pair = line.split(/\\s*:\\s*/);\n    var name = pair[0].toLowerCase();\n    var value = pair[1];\n    headers[name] = value;\n  });\n  return headers;\n}\n\nmodule.exports = {\n\n  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\n\n  createRequest: function(signedRequest) {\n    return function(params, callback) {\n      var response;\n      var str = new Duplex();\n      str._read = function(size) {\n        if (response) {\n          str.push(response.body);\n        }\n      };\n      var bufs = [];\n      var sent = false;\n      str._write = function(chunk, encoding, callback) {\n        bufs.push(chunk.toString(encoding));\n        callback();\n      };\n      str.on('finish', function() {\n        if (!sent) {\n          send(bufs.join(''));\n          sent = true;\n        }\n      });\n      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n        send(params.body);\n        sent = true;\n      }\n\n      function send(body) {\n        var settings = {\n          client: signedRequest.client,\n          method: params.method,\n          data: body\n        };\n        if (params.headers) {\n          settings.headers = {};\n          for (var name in params.headers) {\n            if (name.toLowerCase() === 'content-type') {\n              settings.contentType = params.headers[name];\n            } else {\n              settings.headers[name] = params.headers[name];\n            }\n          }\n        }\n        settings.success = function(data) {\n          var headers = parseHeaders(data.responseHeaders);\n          var body = data.payload;\n          if (!_.isString(body)) {\n            body = JSON.stringify(body);\n          }\n          response = {\n            statusCode : data.status,\n            headers: headers,\n            body: body\n          };\n          if (callback) {\n            callback(null, response, response.body);\n          }\n          str.end();\n        };\n        settings.failure = function(err) {\n          if (callback) {\n            callback(err);\n          }\n        };\n        Sfdc.canvas.client.ajax(params.url, settings);\n      }\n      return str;\n    };\n  }\n};\n\n},{\"lodash/core\":42,\"readable-stream\":61}],5:[function(require,module,exports){\n/**\n * @file Browser client connection management class\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    qs = require('querystring'),\n    _ = require('lodash/core'),\n    Connection = require('../connection'),\n    OAuth2 = require('../oauth2');\n\n/**\n * @private\n */\nfunction popupWin(url, w, h) {\n  var left = (screen.width/2)-(w/2);\n  var top = (screen.height/2)-(h/2);\n  return window.open(url, null, 'location=yes,toolbar=no,status=no,menubar=no,width='+w+',height='+h+',top='+top+',left='+left);\n}\n\nfunction handleCallbackResponse() {\n  var res = checkCallbackResponse();\n  var state = localStorage.getItem('jsforce_state');\n  if (res && state && res.body.state === state) {\n    localStorage.removeItem('jsforce_state');\n    var states = state.split('.');\n    var prefix = states[0], promptType = states[1];\n    var cli = new Client(prefix);\n    if (res.success) {\n      cli._storeTokens(res.body);\n      location.hash = '';\n    } else {\n      cli._storeError(res.body);\n    }\n    if (promptType === 'popup') { window.close(); }\n    return true;\n  }\n}\n\n/**\n * @private\n */\nfunction checkCallbackResponse() {\n  var params;\n  if (window.location.hash) {\n    params = qs.parse(window.location.hash.substring(1));\n    if (params.access_token) {\n      return { success: true, body: params };\n    }\n  } else if (window.location.search) {\n    params = qs.parse(window.location.search.substring(1));\n    if (params.error) {\n      return { success: false, body: params };\n    }\n  }\n}\n\n/** @private **/\nvar clientIdx = 0;\n\n\n/**\n * @class\n * @todo add document\n */\nvar Client = function(prefix) {\n  this._prefix = prefix || 'jsforce' + clientIdx++;\n  this.connection = null;\n};\n\ninherits(Client, events.EventEmitter);\n\n/**\n *\n */\nClient.prototype.init = function(config) {\n  if (handleCallbackResponse()) { return; }\n  this.config = config;\n  this.connection = new Connection(config);\n  var tokens = this._getTokens();\n  if (tokens) {\n    this.connection.initialize(tokens);\n    var self = this;\n    setTimeout(function() {\n      self.emit('connect', self.connection);\n    }, 10);\n  }\n};\n\n/**\n *\n */\nClient.prototype.login = function(options, callback) {\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  callback = callback || function(){ };\n  _.extend(options, this.config);\n  var self = this;\n  this._prompt(options, callback);\n};\n\n\nClient.prototype._prompt = function(options, callback) {\n  var self = this;\n  var oauth2 = new OAuth2(options);\n  var rand = Math.random().toString(36).substring(2);\n  var state = [ this._prefix, \"popup\", rand ].join('.');\n  localStorage.setItem(\"jsforce_state\", state);\n  var authzUrl = oauth2.getAuthorizationUrl({\n    response_type: 'token',\n    scope : options.scope,\n    state: state\n  });\n  var size = options.size || {};\n  var pw = popupWin(authzUrl, size.width || 912, size.height || 513);\n  if (!pw) {\n    state = [ this._prefix, \"redirect\", rand ].join('.');\n    localStorage.setItem(\"jsforce_state\", state);\n    authzUrl = oauth2.getAuthorizationUrl({\n      response_type: 'token',\n      scope : options.scope,\n      state: state\n    });\n    location.href = authzUrl;\n    return;\n  }\n  self._removeTokens();\n  var pid = setInterval(function() {\n    try {\n      if (!pw || pw.closed) {\n        clearInterval(pid);\n        var tokens = self._getTokens();\n        if (tokens) {\n          self.connection.initialize(tokens);\n          self.emit('connect', self.connection);\n          callback(null, { status: 'connect' });\n        } else {\n          var err = self._getError();\n          if (err) {\n            callback(new Error(err.error + \": \" + err.error_description));\n          } else {\n            callback(null, { status: 'cancel' });\n          }\n        }\n      }\n    } catch(e) {}\n  }, 1000);\n};\n\n/**\n *\n */\nClient.prototype.isLoggedIn = function() {\n  return !!(this.connection && this.connection.accessToken);\n};\n\n/**\n *\n */\nClient.prototype.logout = function() {\n  this.connection.logout();\n  this._removeTokens();\n  this.emit('disconnect');\n};\n\n/**\n * @private\n */\nClient.prototype._getTokens = function() {\n  var regexp = new RegExp(\"(^|;\\\\s*)\"+this._prefix+\"_loggedin=true(;|$)\");\n  if (document.cookie.match(regexp)) {\n    var issuedAt = Number(localStorage.getItem(this._prefix+'_issued_at'));\n    if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) { // 2 hours\n      var userInfo;\n      var idUrl = localStorage.getItem(this._prefix + '_id');\n      if (idUrl) {\n        var ids = idUrl.split('/');\n        userInfo = { id: ids.pop(), organizationId: ids.pop(), url: idUrl };\n      }\n      return {\n        accessToken: localStorage.getItem(this._prefix + '_access_token'),\n        instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\n        userInfo: userInfo\n      };\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n */\nClient.prototype._storeTokens = function(params) {\n  localStorage.setItem(this._prefix + '_access_token', params.access_token);\n  localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\n  localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\n  localStorage.setItem(this._prefix + '_id', params.id);\n  document.cookie = this._prefix + '_loggedin=true;';\n};\n\n/**\n * @private\n */\nClient.prototype._removeTokens = function() {\n  localStorage.removeItem(this._prefix + '_access_token');\n  localStorage.removeItem(this._prefix + '_instance_url');\n  localStorage.removeItem(this._prefix + '_issued_at');\n  localStorage.removeItem(this._prefix + '_id');\n  document.cookie = this._prefix + '_loggedin=';\n};\n\n/**\n * @private\n */\nClient.prototype._getError = function() {\n  try {\n    var err = JSON.parse(localStorage.getItem(this._prefix + '_error'));\n    localStorage.removeItem(this._prefix + '_error');\n    return err;\n  } catch(e) {}\n};\n\n/**\n * @private\n */\nClient.prototype._storeError = function(err) {\n  localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\n};\n\n/**\n *\n */\nmodule.exports = new Client();\n\nmodule.exports.Client = Client;\n\n},{\"../connection\":9,\"../oauth2\":15,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"querystring\":50}],6:[function(require,module,exports){\n/*global window, document */\n'use strict';\n\nvar _index = 0;\n\nmodule.exports = {\n\n  supported: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n  createRequest: function(jsonpParam, timeout) {\n    jsonpParam = jsonpParam || 'callback';\n    timeout = timeout || 10000;\n\n    return function(params, callback) {\n      if (params.method.toUpperCase() !== 'GET') {\n        return callback(new Error('JSONP only supports GET request.'));\n      }\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\n      var callbacks = window;\n      var url = params.url;\n      url += url.indexOf('?')>0 ? '&' : '?';\n      url += jsonpParam + '=' + cbFuncName;\n\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n      document.documentElement.appendChild(script);\n\n      var pid = setTimeout(function() {\n        cleanup();\n        callback(new Error(\"JSONP call time out.\"));\n      }, timeout);\n\n      callbacks[cbFuncName] = function(res) {\n        cleanup();\n        callback(null, {\n          statusCode: 200,\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify(res)\n        });\n      };\n\n      var cleanup = function() {\n        clearTimeout(pid);\n        document.documentElement.removeChild(script);\n        delete callbacks[cbFuncName];\n      };\n    };\n\n  }\n\n};\n},{}],7:[function(require,module,exports){\n'use strict';\n\nvar Duplex = require('readable-stream').Duplex;\nvar _ = require('lodash/core');\n\nmodule.exports = function(params, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(params.method, params.url);\n  if (params.headers) {\n    for (var header in params.headers) {\n      xhr.setRequestHeader(header, params.headers[header]);\n    }\n  }\n  xhr.setRequestHeader(\"Accept\", \"*/*\");\n  var response;\n  var str = new Duplex();\n  str._read = function(size) {\n    if (response) {\n      str.push(response.body);\n    }\n  };\n  var bufs = [];\n  var sent = false;\n  str._write = function(chunk, encoding, callback) {\n    bufs.push(chunk.toString(encoding === \"buffer\" ? \"binary\" : encoding));\n    callback();\n  };\n  str.on('finish', function() {\n    if (!sent) {\n      xhr.send(bufs.join(''));\n      sent = true;\n    }\n  });\n  if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n    xhr.send(params.body);\n    sent = true;\n  }\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState === 4) {\n      var headerNames = getResponseHeaderNames(xhr);\n      var headers = {};\n      _.forEach(headerNames, function(headerName) {\n        if (headerName) {\n          headers[headerName] = xhr.getResponseHeader(headerName);\n        }\n      });\n      response = {\n        statusCode: xhr.status,\n        headers: headers,\n        body: xhr.response\n      };\n      if (!response.statusCode) {\n        response.statusCode = 400;\n        response.body = \"Access Declined\";\n      }\n      if (callback) {\n        callback(null, response, response.body);\n      }\n      str.end();\n    }\n  };\n  return str;\n};\n\nfunction getResponseHeaderNames(xhr) {\n  var headerLines = (xhr.getAllResponseHeaders() || \"\").split(/[\\r\\n]+/);\n  return _.map(headerLines, function(headerLine) {\n    return headerLine.split(/\\s*:/)[0].toLowerCase();\n  });\n}\n\n},{\"lodash/core\":42,\"readable-stream\":61}],8:[function(require,module,exports){\n/**\n * @file Manages asynchronous method response cache\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    _      = require('lodash/core');\n\n/**\n * Class for managing cache entry\n *\n * @private\n * @class\n * @constructor\n * @template T\n */\nvar CacheEntry = function() {\n  this.fetching = false;\n};\n\ninherits(CacheEntry, events.EventEmitter);\n\n/**\n * Get value in the cache entry\n *\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\n * @returns {T|undefined}\n */\nCacheEntry.prototype.get = function(callback) {\n  if (!callback) {\n    return this._value;\n  } else {\n    this.once('value', callback);\n    if (!_.isUndefined(this._value)) {\n      this.emit('value', this._value);\n    }\n  }\n};\n\n/**\n * Set value in the cache entry\n *\n * @param {T} [value] - A value for caching\n */\nCacheEntry.prototype.set = function(value) {\n  this._value = value;\n  this.emit('value', this._value);\n};\n\n/**\n * Clear cached value\n */\nCacheEntry.prototype.clear = function() {\n  this.fetching = false;\n  delete this._value;\n};\n\n\n/**\n * Caching manager for async methods\n *\n * @class\n * @constructor\n */\nvar Cache = function() {\n  this._entries = {};\n};\n\n/**\n * retrive cache entry, or create if not exists.\n *\n * @param {String} [key] - Key of cache entry\n * @returns {CacheEntry}\n */\nCache.prototype.get = function(key) {\n  if (key && this._entries[key]) {\n    return this._entries[key];\n  } else {\n    var entry = new CacheEntry();\n    this._entries[key] = entry;\n    return entry;\n  }\n};\n\n/**\n * clear cache entries prefix matching given key\n * @param {String} [key] - Key prefix of cache entry to clear\n */\nCache.prototype.clear = function(key) {\n  for (var k in this._entries) {\n    if (!key || k.indexOf(key) === 0) {\n      this._entries[k].clear();\n    }\n  }\n};\n\n/**\n * create and return cache key from namespace and serialized arguments.\n * @private\n */\nfunction createCacheKey(namespace, args) {\n  args = Array.prototype.slice.apply(args);\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\n}\n\n/**\n * Enable caching for async call fn to intercept the response and store it to cache.\n * The original async calll fn is always invoked.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  return function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n      callback = null;\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    entry.fetching = true;\n    if (callback) {\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n        callback(err, result);\n      });\n    }\n    var ret, error;\n    try {\n      ret = fn.apply(scope || this, args);\n    } catch(e) {\n      error = e;\n    }\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\n      if (!callback) {\n        return ret.then(function(result) {\n          entry.set({ error: undefined, result: result });\n          return result;\n        }, function(err) {\n          entry.set({ error: err, result: undefined });\n          throw err;\n        });\n      } else {\n        return ret;\n      }\n    } else {\n      entry.set({ error: error, result: ret });\n      if (error) { throw error; }\n      return ret;\n    }\n  };\n};\n\n/**\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  var $fn = function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\n      var value = entry.get();\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\n      if (value.error) { throw value.error; }\n      return value.result;\n    }\n    entry.get(function(value) {\n      callback(value.error, value.result);\n    });\n    if (!entry.fetching) { // only when no other client is calling function\n      entry.fetching = true;\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n      });\n      fn.apply(scope || this, args);\n    }\n  };\n  $fn.clear = function() {\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\n              createCacheKey(options.namespace, arguments);\n    cache.clear(key);\n  };\n  return $fn;\n};\n\n\nmodule.exports = Cache;\n\n},{\"events\":36,\"inherits\":38,\"lodash/core\":42}],9:[function(require,module,exports){\n(function (Buffer){\n/*global Buffer */\n/**\n * @file Connection class to keep the API session information and manage requests\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events  = require('events'),\n    inherits = require('inherits'),\n    _       = require('lodash/core'),\n    Promise = require('./promise'),\n    Logger  = require('./logger'),\n    OAuth2  = require('./oauth2'),\n    Query   = require('./query'),\n    SObject = require('./sobject'),\n    QuickAction = require('./quick-action'),\n    HttpApi = require('./http-api'),\n    Transport = require('./transport'),\n    Process = require('./process'),\n    Cache   = require('./cache');\n\nvar defaults = {\n  loginUrl: \"https://login.salesforce.com\",\n  instanceUrl: \"\",\n  version: \"42.0\"\n};\n\n/*\n * Constant of maximum records num in DML operation (update/delete)\n */\nvar MAX_DML_COUNT = 200;\n\n\n/**\n * Connection class to keep the API session information and manage requests\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Object} [options] - Connection options\n * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor\n * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)\n * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)\n * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call\n * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app.\n * @param {String} [options.httpProxy] - URL of HTTP proxy server, used in server client.\n * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual.\n */\nvar Connection = module.exports = function(options) {\n  options = options || {};\n\n  this._logger = new Logger(options.logLevel);\n\n  var oauth2 = options.oauth2 || {\n    loginUrl : options.loginUrl,\n    clientId : options.clientId,\n    clientSecret : options.clientSecret,\n    redirectUri : options.redirectUri,\n    proxyUrl: options.proxyUrl,\n    httpProxy: options.httpProxy\n  };\n\n  /**\n   * OAuth2 object\n   * @member {OAuth2} Connection#oauth2\n   */\n  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);\n\n  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;\n  this.version = options.version || defaults.version;\n  this.maxRequest = options.maxRequest || this.maxRequest || 10;\n\n  /** @private */\n  if (options.proxyUrl) {\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\n  } else if (options.httpProxy) {\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\n  } else {\n    this._transport = new Transport();\n  }\n\n  this.callOptions = options.callOptions;\n\n  /*\n   * Fire connection:new event to notify jsforce plugin modules\n   */\n  var jsforce = require('./core');\n  jsforce.emit('connection:new', this);\n\n  /**\n   * Streaming API object\n   * @member {Streaming} Connection#streaming\n   */\n  // this.streaming = new Streaming(this);\n  /**\n   * Bulk API object\n   * @member {Bulk} Connection#bulk\n   */\n  // this.bulk = new Bulk(this);\n  /**\n   * Tooling API object\n   * @member {Tooling} Connection#tooling\n   */\n  // this.tooling = new Tooling(this);\n  /**\n   * Analytics API object\n   * @member {Analytics} Connection#analytics\n   */\n  // this.analytics = new Analytics(this);\n  /**\n   * Chatter API object\n   * @member {Chatter} Connection#chatter\n   */\n  // this.chatter = new Chatter(this);\n  /**\n   * Metadata API object\n   * @member {Metadata} Connection#metadata\n   */\n  // this.metadata = new Metadata(this);\n\n  /**\n   * SOAP API object\n   * @member {SoapApi} Connection#soap\n   */\n  // this.soap = new SoapApi(this);\n\n  /**\n   * Apex REST API object\n   * @member {Apex} Connection#apex\n   */\n  // this.apex = new Apex(this);\n\n  /**\n   * @member {Process} Connection#process\n   */\n  this.process = new Process(this);\n\n  /**\n   * Cache object for result\n   * @member {Cache} Connection#cache\n   */\n  this.cache = new Cache();\n\n  // Allow to delegate connection refresh to outer function\n  var self = this;\n  var refreshFn = options.refreshFn;\n  if (!refreshFn && this.oauth2.clientId) {\n    refreshFn = oauthRefreshFn;\n  }\n  if (refreshFn) {\n    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);\n  }\n\n  var cacheOptions = {\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\n  };\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n  this.describeSObject$ = this.describe$;\n  this.describeSObject = this.describe;\n\n  cacheOptions = { key: 'describeGlobal' };\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\n\n  this.initialize(options);\n};\n\ninherits(Connection, events.EventEmitter);\n\n/**\n * Initialize connection.\n *\n * @protected\n * @param {Object} options - Initialization options\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {UserInfo} [options.userInfo] - Logged in user information\n */\nConnection.prototype.initialize = function(options) {\n  if (!options.instanceUrl && options.serverUrl) {\n    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');\n  }\n  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;\n\n  this.accessToken = options.sessionId || options.accessToken || this.accessToken;\n  this.refreshToken = options.refreshToken || this.refreshToken;\n  if (this.refreshToken && !this._refreshDelegate) {\n    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");\n  }\n\n  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);\n  if (this.signedRequest) {\n    this.accessToken = this.signedRequest.client.oauthToken;\n    if (Transport.CanvasTransport.supported) {\n      this._transport = new Transport.CanvasTransport(this.signedRequest);\n    }\n  }\n\n  if (options.userInfo) {\n    this.userInfo = options.userInfo;\n  }\n\n  this.limitInfo = {};\n\n  this.sobjects = {};\n  this.cache.clear();\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\n    if (res.result) {\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\n      types.forEach(this.sobject, this);\n    }\n  }, this));\n\n  if (this.tooling) {\n    this.tooling.initialize();\n  }\n\n  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";\n\n};\n\n/** @private **/\nfunction oauthRefreshFn(conn, callback) {\n  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {\n    if (err) { return callback(err); }\n    var userInfo = parseIdUrl(res.id);\n    conn.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo : userInfo\n    });\n    callback(null, res.access_token, res);\n  });\n}\n\n/** @private **/\nfunction parseSignedRequest(sr) {\n  if (_.isString(sr)) {\n    if (sr[0] === '{') { // might be JSON\n      return JSON.parse(sr);\n    } else { // might be original base64-encoded signed request\n      var msg = sr.split('.').pop(); // retrieve latter part\n      var json = new Buffer(msg, 'base64').toString('utf-8');\n      return JSON.parse(json);\n    }\n    return null;\n  }\n  return sr;\n}\n\n\n/** @private **/\nConnection.prototype._baseUrl = function() {\n  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');\n};\n\n/**\n * Convert path to absolute url\n * @private\n */\nConnection.prototype._normalizeUrl = function(url) {\n  if (url[0] === '/') {\n    if (url.indexOf('/services/') === 0) {\n      return this.instanceUrl + url;\n    } else {\n      return this._baseUrl() + url;\n    }\n  } else {\n    return url;\n  }\n};\n\n/**\n * Send REST API request with given HTTP request info, with connected session information.\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String|Object} request - HTTP request object or URL to GET request\n * @param {String} request.method - HTTP method URL to send HTTP request\n * @param {String} request.url - URL to send HTTP request\n * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.request = function(request, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var self = this;\n\n  // if request is simple string, regard it as url in GET method\n  if (_.isString(request)) {\n    request = { method: 'GET', url: request };\n  }\n  // if url is given in relative path, prepend base url or instance url before.\n  request.url = this._normalizeUrl(request.url);\n\n  var httpApi = new HttpApi(this, options);\n\n  // log api usage and its quota\n  httpApi.on('response', function(response) {\n    if (response.headers && response.headers[\"sforce-limit-info\"]) {\n      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);\n      if (apiUsage) {\n        self.limitInfo = {\n          apiUsage: {\n            used: parseInt(apiUsage[1], 10),\n            limit: parseInt(apiUsage[2], 10)\n          }\n        };\n      }\n    }\n  });\n  return httpApi.request(request).thenCall(callback);\n};\n\n/**\n * Send HTTP GET request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP GET\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestGet = function(url, options, callback) {\n  var request = {\n    method: \"GET\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/**\n * Send HTTP POST request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP POST\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPost = function(url, body, options, callback) {\n  var request = {\n    method: \"POST\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PUT request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PUT\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPut = function(url, body, options, callback) {\n  var request = {\n    method: \"PUT\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PATCH request with JSON body\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PATCH\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPatch = function(url, body, options, callback) {\n  var request = {\n    method: \"PATCH\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP DELETE request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP DELETE\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestDelete = function(url, options, callback) {\n  var request = {\n    method: \"DELETE\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/** @private */\nfunction formatDate(date) {\n  function pad(number) {\n    if (number < 10) {\n      return '0' + number;\n    }\n    return number;\n  }\n\n  return date.getUTCFullYear() +\n    '-' + pad(date.getUTCMonth() + 1) +\n    '-' + pad(date.getUTCDate()) +\n    'T' + pad(date.getUTCHours()) +\n    ':' + pad(date.getUTCMinutes()) +\n    ':' + pad(date.getUTCSeconds()) +\n    '+00:00';\n}\n\n\n/** @private **/\nfunction parseIdUrl(idUrl) {\n  var idUrls = idUrl.split(\"/\");\n  var userId = idUrls.pop(), orgId = idUrls.pop();\n  return {\n    id: userId,\n    organizationId: orgId,\n    url: idUrl\n  };\n}\n\n/**\n * @callback Callback\n * @type {Function}\n * @param {Error} err - Callback error\n * @param {T} response - Callback response\n * @template T\n */\n\n/**\n * @typedef {Object} QueryResult\n * @prop {Boolean} done - Flag if the query is fetched all records or not\n * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)\n * @prop {Number} totalSize - Total size for query\n * @prop {Array.<Record>} [records] - Array of records fetched\n */\n\n/**\n * Execute query by using SOQL\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.query = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Execute query by using SOQL, including deleted records\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryAll = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  query.scanAll(true);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Query next record set by using query locator\n *\n * @param {String} locator - Next record set locator\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryMore = function(locator, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, { locator: locator }, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/** @private */\nConnection.prototype._ensureVersion = function(majorVersion) {\n  var versions = this.version.split('.');\n  return parseInt(versions[0], 10) >= majorVersion;\n}\n\n/**\n * Retrieve specified records\n *\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Array.<String>} [options.fields] - Fetching field names in retrieving record\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nConnection.prototype.retrieve = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(ids) ?\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\n        this._retrieveMany(type, ids, options) :\n        this._retrieveParallel(type, ids, options)) :\n      this._retrieveSingle(type, ids, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._retrieveSingle = function(type, id, options) {\n  if (!id) {\n    return Promise.reject(new Error('Invalid record ID. Specify valid record ID value'));\n  }\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\n  if (options.fields) {\n    url += '?fields=' + options.fields.join(',');\n  }\n  return this.request({\n    method: 'GET',\n    url: url,\n    headers: options.headers,\n  });\n};\n\n/** @private */\nConnection.prototype._retrieveParallel = function(type, ids, options) {\n  if (ids.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    ids.map(function(id) {\n      return self._retrieveSingle(type, id, options).catch(function(err) {\n        if (options.allOrNone || err.errorCode !== 'NOT_FOUND') {\n          throw err;\n        }\n        return null;\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._retrieveMany = function(type, ids, options) {\n  if (ids.length === 0) {\n    return Promise.resolve([]);\n  }\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\", type ].join('/');\n  var self = this;\n  return (\n    options.fields ?\n      Promise.resolve(options.fields) :\n      new Promise(function(resolve, reject) {\n        self.describe$(type, function(err, so) {\n          if (err) {\n            reject(err);\n          } else {\n            var fields = so.fields.map(function(field) {\n              return field.name;\n            });\n            resolve(fields);\n          }\n        });\n      })\n  ).then(function(fields) {\n    return self.request({\n      method : 'POST',\n      url : url,\n      body : JSON.stringify({\n        ids : ids,\n        fields : fields\n      }),\n      headers : _.defaults(options.headers || {}, {\n        \"Content-Type\" : \"application/json\"\n      })\n    });\n  });\n};\n\n\n/**\n * @typedef RecordResult\n * @prop {Boolean} success - The result is succeessful or not\n * @prop {String} [id] - Record ID\n * @prop {Array.<String>} [errors] - Errors (available when success = false)\n */\n\n/** @private */\nConnection.prototype._toRecordResult = function(id, err) {\n  var error = {\n    statusCode: err.errorCode,\n    message: err.message\n  };\n  if (err.content) { error.content = err.content; } // preserve External id duplication message\n  if (err.fields) { error.fields = err.fields; } // preserve DML exception occurred fields\n  var result = {\n    success: false,\n    errors: [error]\n  };\n  if (id) { result.id = id; }\n  return result;\n};\n\n/**\n * Synonym of Connection#create()\n *\n * @method Connection#insert\n * @param {String} type - SObject Type\n * @param {Object|Array.<Object>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method Connection#create\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.insert =\nConnection.prototype.create = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(records) ?\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\n        this._createMany(type, records, options) :\n        this._createParallel(type, records, options)) :\n      this._createSingle(type, records, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._createSingle = function(type, record, options) {\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n  if (!sobjectType) {\n    return Promise.reject(new Error('No SObject Type defined in record'));\n  }\n  record = _.clone(record);\n  delete record.Id;\n  delete record.type;\n  delete record.attributes;\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType ].join('/');\n  return this.request({\n    method : 'POST',\n    url : url,\n    body : JSON.stringify(record),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/** @private */\nConnection.prototype._createParallel = function(type, records, options) {\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    records.map(function(record) {\n      return self._createSingle(type, record, options).catch(function(err) {\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toSaveResult(null, err);\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._createMany = function(type, records, options) {\n  if (records.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._createMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._createMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  records = _.map(records, function(record) {\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n    if (!sobjectType) {\n      return Promise.reject(new Error('No SObject Type defined in record'));\n    }\n    record = _.clone(record);\n    delete record.Id;\n    delete record.type;\n    record.attributes = { type : sobjectType };\n    return record;\n  });\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\n  return this.request({\n    method : 'POST',\n    url : url,\n    body : JSON.stringify({\n      allOrNone : options.allOrNone || false,\n      records : records\n    }),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/**\n * Update records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.update = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(records) ?\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\n        this._updateMany(type, records, options) :\n        this._updateParallel(type, records, options)) :\n      this._updateSingle(type, records, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._updateSingle = function(type, record, options) {\n  var id = record.Id;\n  if (!id) {\n    return Promise.reject(new Error('Record id is not found in record.'));\n  }\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n  if (!sobjectType) {\n    return Promise.reject(new Error('No SObject Type defined in record'));\n  }\n  record = _.clone(record);\n  delete record.Id;\n  delete record.type;\n  delete record.attributes;\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType, id ].join('/');\n  return this.request({\n    method : 'PATCH',\n    url : url,\n    body : JSON.stringify(record),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  }, {\n    noContentResponse: { id : id, success : true, errors : [] }\n  });\n};\n\n/** @private */\nConnection.prototype._updateParallel = function(type, records, options) {\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    records.map(function(record) {\n      return self._updateSingle(type, record, options).catch(function(err) {\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toSaveResult(record.Id, err);\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._updateMany = function(type, records, options) {\n  if (records.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._updateMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._updateMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  records = _.map(records, function(record) {\n    var id = record.Id;\n    if (!id) {\n      throw new Error('Record id is not found in record.');\n    }\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n    if (!sobjectType) {\n      throw new Error('No SObject Type defined in record');\n    }\n    record = _.clone(record);\n    delete record.Id;\n    record.id = id;\n    delete record.type;\n    record.attributes = { type : sobjectType };\n    return record;\n  });\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\n  return this.request({\n    method : 'PATCH',\n    url : url,\n    body : JSON.stringify({\n      allOrNone : options.allOrNone || false,\n      records : records\n    }),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/**\n * Upsert records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.upsert = function(type, records, extIdField, options, callback) {\n  // You can omit \"type\" argument, when the record includes type information.\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = extIdField;\n    extIdField = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      var extId = record[extIdField];\n      record = _.clone(record);\n      delete record[extIdField];\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');\n      return self.request({\n        method : 'PATCH',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      }, {\n        noContentResponse: { success : true, errors : [] }\n      })\n      .catch(function(err) {\n        // be aware that `allOrNone` option in upsert method will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (!isArray || options.allOrNone || !err.errorCode) { throw err; }\n        return this._toSaveResult(null, err);\n      })\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#delete\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#del\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method Connection#destroy\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype[\"delete\"] =\nConnection.prototype.del =\nConnection.prototype.destroy = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(ids) ?\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\n        this._destroyMany(type, ids, options) :\n        this._destroyParallel(type, ids, options)) :\n      this._destroySingle(type, ids, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._destroySingle = function(type, id, options) {\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\n  return this.request({\n    method : 'DELETE',\n    url : url,\n    headers: options.headers || null\n  }, {\n    noContentResponse: { id : id, success : true, errors : [] }\n  });\n};\n\n/** @private */\nConnection.prototype._destroyParallel = function(type, ids, options) {\n  if (ids.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    ids.map(function(id) {\n      return self._destroySingle(type, id, options).catch(function(err) {\n        // be aware that `allOrNone` option in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toSaveResult(id, err);\n      });\n    })\n  );\n};\n\n\n/** @private */\nConnection.prototype._destroyMany = function(type, ids, options) {\n  if (ids.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (ids.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._destroyMany(type, ids.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._destroyMany(type, ids.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  var url = [ this._baseUrl(), \"composite\", \"sobjects?ids=\" ].join('/') + ids.join(',');\n  if (options.allOrNone) {\n    url += '&allOrNone=true';\n  }\n  return this.request({\n    method : 'DELETE',\n    url : url,\n    headers: options.headers || null\n  });\n};\n\n/**\n * Execute search by SOSL\n *\n * @param {String} sosl - SOSL string\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.search = function(sosl, callback) {\n  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Result returned by describeSObject call\n *\n * @typedef {Object} DescribeSObjectResult\n */\n/**\n * Synonym of Connection#describe()\n *\n * @method Connection#describeSObject\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\n/**\n * Describe SObject metadata\n *\n * @method Connection#describe\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nConnection.prototype.describe =\nConnection.prototype.describeSObject = function(type, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Result returned by describeGlobal call\n *\n * @typedef {Object} DescribeGlobalResult\n */\n/**\n * Describe global SObjects\n *\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\n * @returns {Promise.<DescribeGlobalResult>}\n */\nConnection.prototype.describeGlobal = function(callback) {\n  var url = this._baseUrl() + \"/sobjects\";\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Get SObject instance\n *\n * @param {String} type - SObject Type\n * @returns {SObject}\n */\nConnection.prototype.sobject = function(type) {\n  this.sobjects = this.sobjects || {};\n  var sobject = this.sobjects[type] =\n    this.sobjects[type] || new SObject(this, type);\n  return sobject;\n};\n\n/**\n * Get identity information of current user\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<IdentityInfo>} [callback] - Callback function\n * @returns {Promise.<IdentityInfo>}\n */\nConnection.prototype.identity = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var idUrl = this.userInfo && this.userInfo.url;\n  return Promise.resolve(\n    idUrl ?\n    { identity: idUrl } :\n    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })\n  ).then(function(res) {\n    var url = res.identity;\n    url += '?format=json&oauth_token=' + encodeURIComponent(self.accessToken);\n    var transport = Transport.JsonpTransport.supported ?\n      new Transport.JsonpTransport('callback') :\n      undefined;\n    return self.request({ method: 'GET', url: url }, { transport: transport });\n  }).then(function(res) {\n    self.userInfo = {\n      id: res.user_id,\n      organizationId: res.organization_id,\n      url: res.id\n    };\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef UserInfo\n * @prop {String} id - User ID\n * @prop {String} organizationId - Organization ID\n * @prop {String} url - Identity URL of the user\n */\n\n/**\n * Authorize (using oauth2 web server flow)\n *\n * @param {String} code - Authorization code\n * @param {Object} [params] - Optional parameters to send in token retrieval\n * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.authorize = function(code, params, callback) {\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.requestToken(code, params).then(function(res) {\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      refreshToken : res.refresh_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n\n/**\n * Login to Salesforce\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.login = function(username, password, callback) {\n  // register refreshDelegate for session expiration\n  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));\n  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {\n    return this.loginByOAuth2(username, password, callback);\n  } else {\n    return this.loginBySoap(username, password, callback);\n  }\n};\n\n/** @private **/\nfunction createUsernamePasswordRefreshFn(username, password) {\n  return function(conn, callback) {\n    conn.login(username, password, function(err) {\n      if (err) { return callback(err); }\n      callback(null, conn.accessToken);\n    });\n  };\n}\n\n/**\n * Login by OAuth2 username & password flow\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginByOAuth2 = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  return this.oauth2.authenticate(username, password).then(function(res) {\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * @private\n */\nfunction esc(str) {\n  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\n                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * Login by SOAP web service API\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginBySoap = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header/>',\n      '<se:Body>',\n        '<login xmlns=\"urn:partner.soap.sforce.com\">',\n          '<username>' + esc(username) + '</username>',\n          '<password>' + esc(password) + '</password>',\n        '</login>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : soapLoginEndpoint,\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    var m;\n    if (response.statusCode >= 400) {\n      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n    logger.debug(\"SOAP response = \" + response.body);\n    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\n    var serverUrl = m && m[1];\n    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\n    var sessionId = m && m[1];\n    m = response.body.match(/<userId>([^<]+)<\\/userId>/);\n    var userId = m && m[1];\n    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\n    var orgId = m && m[1];\n    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');\n    idUrl += \"/id/\" + orgId + \"/\" + userId;\n    var userInfo = {\n      id: userId,\n      organizationId: orgId,\n      url: idUrl\n    };\n    self.initialize({\n      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\n      sessionId: sessionId,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * Logout the current session \n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logout = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n\n  if (this._sessionType === \"oauth2\") {\n    return this.logoutByOAuth2(revoke, callback);\n  } else {\n    return this.logoutBySoap(revoke, callback);\n  }\n};\n\n/**\n * Logout the current session by revoking access token via OAuth2 session revoke\n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutByOAuth2 = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.revokeToken(revoke ? this.refreshToken : this.accessToken).then(function() {\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n  }).thenCall(callback);\n};\n\n\n/**\n * Logout the session by using SOAP web service API\n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutBySoap = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n  var self = this;\n  var logger = this._logger;\n\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header>',\n        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\n          '<sessionId>' + esc(revoke ? this.refreshToken : this.accessToken) + '</sessionId>',\n        '</SessionHeader>',\n      '</se:Header>',\n      '<se:Body>',\n        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);\n    if (response.statusCode >= 400) {\n      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n\n  }).thenCall(callback);\n};\n\n/**\n * List recently viewed records\n *\n * @param {String} [type] - SObject type\n * @param {Number} [limit] - Limit num to fetch\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.recent = function(type, limit, callback) {\n  if (!_.isString(type)) {\n    callback = limit;\n    limit = type;\n    type = undefined;\n  }\n  if (!_.isNumber(limit)) {\n    callback = limit;\n    limit = undefined;\n  }\n  var url;\n  if (type) {\n    url = [ this._baseUrl(), \"sobjects\", type ].join('/');\n    return this.request(url).then(function(res) {\n      return limit ? res.recentItems.slice(0, limit) : res.recentItems;\n    }).thenCall(callback);\n  } else {\n    url = this._baseUrl() + \"/recent\";\n    if (limit) {\n      url += \"?limit=\" + limit;\n    }\n    return this.request(url).thenCall(callback);\n  }\n\n};\n\n/**\n * @typedef {Object} UpdatedRecordsInfo\n * @prop {String} latestDateCovered - The timestamp of the last date covered.\n * @prop {Array.<String>} ids - Updated record IDs.\n */\n\n/**\n * Retrieve updated records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nConnection.prototype.updated = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} DeletedRecordsInfo\n * @prop {String} earliestDateAvailable - The timestamp of the earliest date available\n * @prop {String} latestDateCovered - The timestamp of the last date covered\n * @prop {Array.<Object>} deletedRecords - Updated records\n * @prop {String} deletedRecords.id - Record ID\n * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted\n */\n\n/**\n * Retrieve deleted records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nConnection.prototype.deleted = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} TabsInfo - See the API document for detail structure\n */\n\n/**\n * Returns a list of all tabs\n *\n * @param {Callback.<TabsInfo>} [callback] - Callback function\n * @returns {Promise.<TabsInfo>}\n */\nConnection.prototype.tabs = function(callback) {\n  var url = [ this._baseUrl(), \"tabs\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} LimitsInfo - See the API document for detail structure\n */\n\n/**\n * Returns curren system limit in the organization\n *\n * @param {Callback.<LimitsInfo>} [callback] - Callback function\n * @returns {Promise.<LimitsInfo>}\n */\nConnection.prototype.limits = function(callback) {\n  var url = [ this._baseUrl(), \"limits\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} ThemeInfo - See the API document for detail structure\n */\n\n/**\n * Returns a theme info\n *\n * @param {Callback.<ThemeInfo>} [callback] - Callback function\n * @returns {Promise.<ThemeInfo>}\n */\nConnection.prototype.theme = function(callback) {\n  var url = [ this._baseUrl(), \"theme\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Returns all registered global quick actions\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nConnection.prototype.quickActions = function(callback) {\n  return this.request(\"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified global quick aciton\n *\n * @param {String} actionName - Name of the global quick action\n * @returns {QuickAction}\n */\nConnection.prototype.quickAction = function(actionName) {\n  return new QuickAction(this, \"/quickActions/\" + actionName);\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./cache\":8,\"./core\":10,\"./http-api\":13,\"./logger\":14,\"./oauth2\":15,\"./process\":16,\"./promise\":17,\"./query\":18,\"./quick-action\":19,\"./sobject\":24,\"./transport\":26,\"buffer\":30,\"events\":36,\"inherits\":38,\"lodash/core\":42}],10:[function(require,module,exports){\n/**\n * @file JSforce Core\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar jsforce = module.exports = new EventEmitter();\njsforce.VERSION = require('./VERSION');\njsforce.Connection = require('./connection');\njsforce.OAuth2 = require('./oauth2');\njsforce.Date = jsforce.SfDate = require(\"./date\");\njsforce.RecordStream = require('./record-stream');\njsforce.Promise = require('./promise');\njsforce.require = require('./require');\n\n},{\"./VERSION\":2,\"./connection\":9,\"./date\":12,\"./oauth2\":15,\"./promise\":17,\"./record-stream\":20,\"./require\":22,\"events\":36}],11:[function(require,module,exports){\n'use strict';\n\nvar _ = require('lodash/core'),\n    csvParse = require('csv-parse'),\n    csvParseSync = require('csv-parse/lib/sync'),\n    csvStringify = require('csv-stringify'),\n    csvStringifySync = require('csv-stringify/lib/sync');\n\n/**\n * @private\n */\nfunction parseCSV(str, options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParseSync(str, options);\n}\n\n/**\n * @private\n */\nfunction toCSV(records, options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringifySync(records, options);\n}\n\n/**\n * @private\n */\nfunction parseCSVStream(options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParse(options);\n}\n\n/**\n * @private\n */\nfunction serializeCSVStream(options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringify(options);\n}\n\n\n/**\n * @protected\n */\nmodule.exports = {\n  parseCSV: parseCSV,\n  toCSV: toCSV,\n  parseCSVStream: parseCSVStream,\n  serializeCSVStream: serializeCSVStream\n};\n\n},{\"csv-parse\":32,\"csv-parse/lib/sync\":33,\"csv-stringify\":34,\"csv-stringify/lib/sync\":35,\"lodash/core\":42}],12:[function(require,module,exports){\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A date object to keep Salesforce date literal\n *\n * @class\n * @constructor\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\n */\nvar SfDate = module.exports = function(literal) {\n  this._literal = literal;\n};\n\n/**\n * Returns literal when converted to string\n *\n * @override\n */\nSfDate.prototype.toString =\nSfDate.prototype.toJSON = function() { return this._literal; };\n\n\n/** @private **/\nfunction zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }\n\n/**\n * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 date format\n */\nSfDate.toDateLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getFullYear();\n  var mm = date.getMonth()+1;\n  var dd = date.getDate();\n  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");\n  return new SfDate(dstr);\n};\n\n/**\n * Convert JavaScript date object to ISO8601 DateTime format\n * (e.g. 2012-10-31T12:34:56Z)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format\n */\nSfDate.toDateTimeLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getUTCFullYear();\n  var mm = date.getUTCMonth()+1;\n  var dd = date.getUTCDate();\n  var hh = date.getUTCHours();\n  var mi = date.getUTCMinutes();\n  var ss = date.getUTCSeconds();\n  var dtstr =\n    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +\n    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";\n  return new SfDate(dtstr);\n};\n\n/**\n * Parse IS08601 date(time) formatted string and return date instance\n *\n * @param {String} str\n * @returns {Date}\n */\nSfDate.parseDate = function(str) {\n  var d = new Date();\n  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;\n  var m = str.match(regexp);\n  if (m) {\n    d = new Date(0);\n    if (!m[4]) {\n      d.setFullYear(parseInt(m[1], 10));\n      d.setDate(parseInt(m[3], 10));\n      d.setMonth(parseInt(m[2], 10) - 1);\n      d.setHours(0);\n      d.setMinutes(0);\n      d.setSeconds(0);\n      d.setMilliseconds(0);\n    } else {\n      d.setUTCFullYear(parseInt(m[1], 10));\n      d.setUTCDate(parseInt(m[3], 10));\n      d.setUTCMonth(parseInt(m[2], 10) - 1);\n      d.setUTCHours(parseInt(m[5], 10));\n      d.setUTCMinutes(parseInt(m[6], 10));\n      d.setUTCSeconds(parseInt(m[7], 10));\n      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\n      if (m[10] && m[10] !== 'Z') {\n        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);\n        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());\n      }\n    }\n    return d;\n  } else {\n    throw new Error(\"Invalid date format is specified : \" + str);\n  }\n};\n\n/*\n * Pre-defined Salesforce Date Literals\n */\nvar SfDateLiterals = {\n  YESTERDAY: 1,\n  TODAY: 1,\n  TOMORROW: 1,\n  LAST_WEEK: 1,\n  THIS_WEEK: 1,\n  NEXT_WEEK: 1,\n  LAST_MONTH: 1,\n  THIS_MONTH: 1,\n  NEXT_MONTH: 1,\n  LAST_90_DAYS: 1,\n  NEXT_90_DAYS: 1,\n  LAST_N_DAYS: 2,\n  NEXT_N_DAYS: 2,\n  NEXT_N_WEEKS: 2,\n  LAST_N_WEEKS: 2,\n  NEXT_N_MONTHS: 2,\n  LAST_N_MONTHS: 2,\n  THIS_QUARTER: 1,\n  LAST_QUARTER: 1,\n  NEXT_QUARTER: 1,\n  NEXT_N_QUARTERS: 2,\n  LAST_N_QUARTERS: 2,\n  THIS_YEAR: 1,\n  LAST_YEAR: 1,\n  NEXT_YEAR: 1,\n  NEXT_N_YEARS: 2,\n  LAST_N_YEARS: 2,\n  THIS_FISCAL_QUARTER: 1,\n  LAST_FISCAL_QUARTER: 1,\n  NEXT_FISCAL_QUARTER: 1,\n  NEXT_N_FISCAL_QUARTERS:2,\n  LAST_N_FISCAL_QUARTERS:2,\n  THIS_FISCAL_YEAR:1,\n  LAST_FISCAL_YEAR:1,\n  NEXT_FISCAL_YEAR:1,\n  NEXT_N_FISCAL_YEARS: 2,\n  LAST_N_FISCAL_YEARS: 2\n};\n\nfor (var literal in SfDateLiterals) {\n  var type = SfDateLiterals[literal];\n  SfDate[literal] =\n   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);\n}\n\n/** @private **/\nfunction createLiteralBuilder(literal) {\n  return function(num) { return new SfDate(literal + \":\" + num); };\n}\n\n},{\"lodash/core\":42}],13:[function(require,module,exports){\n'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    _ = require('lodash/core'),\n    Promise = require('./promise');\n\n/**\n * HTTP based API class with authorization hook\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Connection} conn - Connection object\n * @param {Object} [options] - Http API Options\n * @param {String} [options.responseType] - Overriding content mime-type in response\n * @param {Transport} [options.transport] - Transport for http api\n * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)\n */\nvar HttpApi = function(conn, options) {\n  options = options || {};\n  this._conn = conn;\n  this.on('resume', function(err) { conn.emit('resume', err); });\n  this._responseType = options.responseType;\n  this._transport = options.transport || conn._transport;\n  this._noContentResponse = options.noContentResponse;\n};\n\ninherits(HttpApi, events.EventEmitter);\n\n/**\n * Callout to API endpoint using http\n *\n * @param {Object} request - Http Request object\n * @param {String} request.url - Endpoint URL to request\n * @param {String} request.method - Http method for request\n * @param {Object} [request.headers] - Http request headers in hash object\n * @param {Callback.<Object>} callback - Callback function\n * @returns {Promise.<Object>} -\n */\nHttpApi.prototype.request = function(request, callback) {\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  var refreshDelegate = this.getRefreshDelegate();\n  // remember previous instance url in case it changes after a refresh\n  var lastInstanceUrl = conn.instanceUrl;\n\n  var deferred = Promise.defer();\n\n  var onResume = function(err) {\n    if (err) {\n      deferred.reject(err);\n      return;\n    }\n    // check to see if the token refresh has changed the instance url\n    if(lastInstanceUrl !== conn.instanceUrl){\n      // if the instance url has changed\n      // then replace the current request urls instance url fragment\n      // with the updated instance url\n      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\n    }\n\n    self.request(request).then(function(response) {\n      deferred.resolve(response);\n    }, function(err) {\n      deferred.reject(err);\n    });\n  };\n\n  if (refreshDelegate && refreshDelegate._refreshing) {\n    refreshDelegate.once('resume', onResume);\n    return deferred.promise.thenCall(callback);\n  }\n\n  // hook before sending\n  self.beforeSend(request);\n\n  self.emit('request', request);\n  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);\n  var requestTime = Date.now();\n\n  return this._transport.httpRequest(request).then(function(response) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);\n\n    self.emit('response', response);\n    // Refresh token if session has been expired and requires authentication\n    // when session refresh delegate is available\n    if (self.isSessionExpired(response) && refreshDelegate) {\n      refreshDelegate.refresh(requestTime, onResume);\n      return deferred.promise;\n    }\n    if (self.isErrorResponse(response)) {\n      var err = self.getError(response);\n      throw err;\n    }\n    return self.getResponseBody(response);\n  }, function(err) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.error(err);\n    throw err;\n  })\n  .thenCall(callback);\n};\n\n/**\n * @protected\n */\nHttpApi.prototype.getRefreshDelegate = function() {\n  return this._conn._refreshDelegate;\n};\n\n/**\n *\n * @protected\n */\nHttpApi.prototype.beforeSend = function(request) {\n  request.headers = request.headers || {};\n  if (this._conn.accessToken) {\n    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;\n  }\n  if (this._conn.callOptions) {\n    var callOptions = [];\n    for (var name in this._conn.callOptions) {\n      callOptions.push(name + \"=\" + this._conn.callOptions[name]);\n    }\n    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');\n  }\n};\n\n/**\n * Detect response content mime-type\n * @protected\n */\nHttpApi.prototype.getResponseContentType = function(response) {\n  return this._responseType || response.headers && response.headers[\"content-type\"];\n};\n\n/**\n *\n */\nHttpApi.prototype.parseResponseBody = function(response) {\n  var contentType = this.getResponseContentType(response);\n  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :\n         /^application\\/json(;|$)/.test(contentType) ? parseJSON :\n         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :\n         parseText;\n  try {\n    return parseBody(response.body);\n  } catch(e) {\n    return response.body;\n  }\n};\n\n/**\n * Get response body\n * @protected\n */\nHttpApi.prototype.getResponseBody = function(response) {\n  if (response.statusCode === 204) { // No Content\n    return this._noContentResponse;\n  }\n  var body = this.parseResponseBody(response);\n  var err;\n  if (this.hasErrorInResponseBody(body)) {\n    err = this.getError(response, body);\n    throw err;\n  }\n  if (response.statusCode === 300) { // Multiple Choices\n    err = new Error('Multiple records found');\n    err.name = \"MULTIPLE_CHOICES\";\n    err.content = body;\n    throw err;\n  }\n  return body;\n};\n\n/** @private */\nfunction parseJSON(str) {\n  return JSON.parse(str);\n}\n\n/** @private */\nfunction parseXML(str) {\n  var ret = {};\n  require('xml2js').parseString(str, { explicitArray: false }, function(err, result) {\n    ret = { error: err, result : result };\n  });\n  if (ret.error) { throw ret.error; }\n  return ret.result;\n}\n\n/** @private */\nfunction parseCSV(str) {\n  return require('./csv').parseCSV(str);\n}\n\n/** @private */\nfunction parseText(str) { return str; }\n\n\n/**\n * Detect session expiry\n * @protected\n */\nHttpApi.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 401;\n};\n\n/**\n * Detect error response\n * @protected\n */\nHttpApi.prototype.isErrorResponse = function(response) {\n  return response.statusCode >= 400;\n};\n\n/**\n * Detect error in response body\n * @protected\n */\nHttpApi.prototype.hasErrorInResponseBody = function(body) {\n  return false;\n};\n\n/**\n * Parsing error message in response\n * @protected\n */\nHttpApi.prototype.parseError = function(body) {\n  var errors = body;\n  return _.isArray(errors) ? errors[0] : errors;\n};\n\n/**\n * Get error message in response\n * @protected\n */\nHttpApi.prototype.getError = function(response, body) {\n  var error;\n  try {\n    error = this.parseError(body || this.parseResponseBody(response));\n  } catch(e) {}\n  error = _.isObject(error) && _.isString(error.message) ? error : {\n    errorCode: 'ERROR_HTTP_' + response.statusCode,\n    message : response.body\n  };\n  var err = new Error(error.message);\n  err.name = error.errorCode;\n  for (var key in error) { err[key] = error[key]; }\n  return err;\n};\n\n/*-------------------------------------------------------------------------*/\n\n/**\n * @protected\n */\nvar SessionRefreshDelegate = function(conn, refreshFn) {\n  this._conn = conn;\n  this._refreshFn = refreshFn;\n  this._refreshing = false;\n};\n\ninherits(SessionRefreshDelegate, events.EventEmitter);\n\n/**\n * Refresh access token\n * @private\n */\nSessionRefreshDelegate.prototype.refresh = function(since, callback) {\n  // Callback immediately When refreshed after designated time\n  if (this._lastRefreshedAt > since) { return callback(); }\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  self.once('resume', callback);\n  if (self._refreshing) { return; }\n  logger.debug(\"<refresh token>\");\n  self._refreshing = true;\n  return self._refreshFn(conn, function(err, accessToken, res) {\n    if (!err) {\n      logger.debug(\"Connection refresh completed.\");\n      conn.accessToken = accessToken;\n      conn.emit(\"refresh\", accessToken, res);\n    }\n    self._lastRefreshedAt = Date.now();\n    self._refreshing = false;\n    self.emit('resume', err);\n  });\n};\n\n\n/**\n *\n */\nHttpApi.SessionRefreshDelegate = SessionRefreshDelegate;\nmodule.exports = HttpApi;\n\n},{\"./csv\":11,\"./promise\":17,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"xml2js\":77}],14:[function(require,module,exports){\n'use strict';\n\n/**\n * @protected\n * @class\n * @constructor\n * @param {String|Number} logLevel - Log level\n */\nvar Logger = module.exports = function(logLevel) {\n  if (typeof logLevel === 'string') {\n    logLevel = LogLevels[logLevel];\n  }\n  if (!logLevel) {\n    logLevel = LogLevels.INFO;\n  }\n  this._logLevel = logLevel;\n};\n\n/**\n * @memberof Logger\n */\nvar LogLevels = Logger.LogLevels = {\n  \"DEBUG\" : 1,\n  \"INFO\" : 2,\n  \"WARN\" : 3,\n  \"ERROR\" : 4,\n  \"FATAL\" : 5\n};\n\n/**\n * Output log\n *\n * @param {String} level - Logging target level\n * @param {String} message - Message to log\n */\nLogger.prototype.log = function(level, message) {\n  if (this._logLevel <= level) {\n    if (level < LogLevels.ERROR) {\n      console.log(message);\n    } else {\n      console.error(message);\n    }\n  }\n};\n\nfor (var level in LogLevels) {\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\n}\n\nfunction createLoggerFunction(level) {\n  return function(message) { this.log(level, message); };\n}\n\n},{}],15:[function(require,module,exports){\n/**\n * @file Manages Salesforce OAuth2 operations\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar querystring = require('querystring'),\n    _ = require('lodash/core'),\n    Transport = require('./transport');\n\nvar defaults = {\n  loginUrl : \"https://login.salesforce.com\"\n};\n\n/**\n * OAuth2 class\n *\n * @class\n * @constructor\n * @param {Object} options - OAuth2 config options\n * @param {String} [options.loginUrl] - Salesforce login server URL\n * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL.\n * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL.\n * @param {String} options.clientId - OAuth2 client ID.\n * @param {String} [options.clientSecret] - OAuth2 client secret (This is optional for public client).\n * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service.\n */\nvar OAuth2 = module.exports = function(options) {\n  if (options.authzServiceUrl && options.tokenServiceUrl) {\n    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');\n    this.authzServiceUrl = options.authzServiceUrl;\n    this.tokenServiceUrl = options.tokenServiceUrl;\n    this.revokeServiceUrl = options.revokeServiceUrl;\n  } else {\n    this.loginUrl = options.loginUrl || defaults.loginUrl;\n    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";\n    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";\n    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";\n  }\n  this.clientId = options.clientId;\n  this.clientSecret = options.clientSecret;\n  this.redirectUri = options.redirectUri;\n  if (options.proxyUrl) {\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\n  } else if (options.httpProxy) {\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\n  } else {\n    this._transport = new Transport();\n  }\n};\n\n\n\n/**\n *\n */\n_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {\n\n  /**\n   * Get Salesforce OAuth2 authorization page URL to redirect user agent.\n   *\n   * @param {Object} params - Parameters\n   * @param {String} [params.scope] - Scope values in space-separated string\n   * @param {String} [params.state] - State parameter\n   * @param {String} [params.code_challenge] - Code challenge value (RFC 7636 - Proof Key of Code Exchange)\n   * @returns {String} Authorization page URL\n   */\n  getAuthorizationUrl : function(params) {\n    params = _.extend({\n      response_type : \"code\",\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    return this.authzServiceUrl +\n      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +\n      querystring.stringify(params);\n  },\n\n  /**\n   * @typedef TokenResponse\n   * @type {Object}\n   * @property {String} access_token\n   * @property {String} refresh_token\n   */\n\n  /**\n   * OAuth2 Refresh Token Flow\n   *\n   * @param {String} refreshToken - Refresh token\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  refreshToken : function(refreshToken, callback) {\n    var params = {\n      grant_type : \"refresh_token\",\n      refresh_token : refreshToken,\n      client_id : this.clientId\n    };\n    if (this.clientSecret) {\n      params.client_secret = this.clientSecret;\n    }\n    return this._postParams(params, callback);\n  },\n\n  /**\n   * OAuth2 Web Server Authentication Flow (Authorization Code)\n   * Access Token Request\n   *\n   * @param {String} code - Authorization code\n   * @param {Object} [params] - Optional parameters to send in token retrieval\n   * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  requestToken : function(code, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n    params = _.extend({\n      grant_type : \"authorization_code\",\n      code : code,\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    if (this.clientSecret) {\n      params.client_secret = this.clientSecret;\n    }\n    return this._postParams(params, callback);\n  },\n\n  /**\n   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\n   *\n   * @param {String} username - Salesforce username\n   * @param {String} password - Salesforce password\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  authenticate : function(username, password, callback) {\n    return this._postParams({\n      grant_type : \"password\",\n      username : username,\n      password : password,\n      client_id : this.clientId,\n      client_secret : this.clientSecret,\n      redirect_uri : this.redirectUri\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Revoke Session or API Token\n   *\n   * @param {String} token - Access or Refresh token to revoke. Passing in the Access token revokes the session. Passing in the Refresh token revokes API Access.\n   * @param {Callback.<undefined>} [callback] - Callback function\n   * @returns {Promise.<undefined>}\n   */\n  revokeToken : function(token, callback) {\n    var req;\n    if (Transport.JsonpTransport.supported) {\n      var jsonpTransport = new Transport.JsonpTransport('callback');\n      req = jsonpTransport.httpRequest({\n        method: 'GET',\n        url : this.revokeServiceUrl + '?' + querystring.stringify({ token: token })\n      });\n    } else {\n      req = this._transport.httpRequest({\n        method : 'POST',\n        url : this.revokeServiceUrl,\n        body: querystring.stringify({ token: token }),\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n    }\n    return req.then(function(response) {\n      if (response.statusCode >= 400) {\n        var res = querystring.parse(response.body);\n        if (!res || !res.error) {\n          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        }\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n    }).thenCall(callback);\n  },\n\n  /**\n   * @private\n   */\n  _postParams : function(params, callback) {\n    return this._transport.httpRequest({\n      method : 'POST',\n      url : this.tokenServiceUrl,\n      body : querystring.stringify(params),\n      headers : {\n        \"content-type\" : \"application/x-www-form-urlencoded\"\n      }\n    }).then(function(response) {\n      var res;\n      try {\n        res = JSON.parse(response.body);\n      } catch(e) {}\n      if (response.statusCode >= 400) {\n        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n      return res;\n    }).thenCall(callback);\n  }\n\n});\n\n},{\"./transport\":26,\"lodash/core\":42,\"querystring\":50}],16:[function(require,module,exports){\n/**\n * @file Process class to manage/run workflow rule and approval process\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core'),\n    Promise = require('./promise'),\n    Conneciton = require('./connection');\n\n/**\n * A class which manages process rules and approval processes\n *\n * @class\n * @param {Connection} conn - Connection object\n */\nvar Process = module.exports = function(conn) {\n  /**\n   * Object which mangages process rules\n   * @member {Process~ProcessRule} Process#rule\n   */\n  this.rule = new ProcessRule(conn);\n  /**\n   * Object which mangages approval process\n   * @member {Process~ApprovalProcess} Process#approval\n   */\n  this.approval = new ApprovalProcess(conn);\n};\n\n/**\n * A class which manages process (workflow) rules\n *\n * @class Process~ProcessRule\n * @param {Connection} conn - Connection object\n */\nvar ProcessRule = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ProcessRuleDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of process rule definition\n * @prop {String} object - SObject name which process rule is defined\n */\n\n/**\n * Get all process rule definitions registered to sobjects\n *\n * @method Process~ProcessRule#list\n * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}\n */\nProcessRule.prototype.list = function(callback) {\n  return this._conn.request(\"/process/rules\").then(function(res) {\n    return res.rules;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} Process~ProcessRuleTriggerResult\n * @prop {Boolean} success - Is process rule trigger succeeded or not\n * @prop {Array.<Object>} errors - Array of errors returned if the request failed\n */\n\n/**\n * Trigger process rule for given entities\n *\n * @method Process~ProcessRule#trigger\n * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process\n * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function\n * @returns {Promise.<Process~ProcessRuleTriggerResult>}\n */\nProcessRule.prototype.trigger = function(contextIds, callback) {\n  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];\n  return this._conn.request({\n    method: \"POST\",\n    url: \"/process/rules/\",\n    body: JSON.stringify({\n      contextIds: contextIds\n    }),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).thenCall(callback);\n};\n\n/**\n * A class which manages approval processes\n *\n * @class Process~ApprovalProcess\n * @param {Connection} conn - Connection object\n */\nvar ApprovalProcess = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of approval process definition\n * @prop {String} object - SObject name which approval process is defined\n * @prop {Number} sortOrder - Processing order of approval in SObject\n */\n/**\n * Get all approval process definitions registered to sobjects\n *\n * @method Process~ApprovalProcess#list\n * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}\n */\nApprovalProcess.prototype.list = function(callback) {\n  return this._conn.request(\"/process/approvals\").then(function(res) {\n    return res.approvals;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessRequestResult\n * @prop {Boolean} success - True if processing or approval completed successfully\n * @prop {Array.<Object>} errors - The set of errors returned if the request failed\n * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step\n * @prop {String} entityId - Object being processed\n * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing\n * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)\n * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)\n */\n\n/**\n * Send bulk requests for approval process\n *\n * @method Process~ApprovalProcess#request\n * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send\n * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function\n * @param {Promise.<Array.<ApprovalProcessRequestResult>>}\n */\nApprovalProcess.prototype.request = function(requests, callback) {\n  requests = requests.map(function(req) {\n    return req._request ? req._request : req;\n  });\n  return this._conn.request({\n    method: 'POST',\n    url: '/process/approvals',\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({ requests: requests })\n  }).thenCall(callback);\n};\n\n/**\n * Create approval process request\n *\n * @private\n */\nApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {\n  if (typeof comments === \"function\") {\n    callback = comments;\n    options = null;\n    comments = null;\n  }\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var request = {\n    actionType: actionType,\n    contextId: contextId,\n    comments: comments\n  };\n  _.extend(request, options);\n  return new ApprovalProcessRequest(this, request).thenCall(callback);\n};\n\n/**\n * Submit approval request for an item\n *\n * @method Process~ApprovalProcess#submit\n * @param {String} contextId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {\n  return this._createRequest(\"Submit\", contextId, comments, options, callback);\n};\n\n/**\n * Approve approval request for an item\n *\n * @method Process~ApprovalProcess#approve\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Approve\", workitemId, comments, options, callback);\n};\n\n/**\n * Reject approval request for an item\n *\n * @method Process~ApprovalProcess#reject\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Reject\", workitemId, comments, options, callback);\n};\n\n/**\n * A class representing approval process request\n *\n * @protected\n * @class Process~ApprovalProcessRequest\n * @implements {Promise.<Process~ApprovalProcessRequestResult>}\n * @param {Process~ApprovalProcess} process - ApprovalProcess\n * @param {Object} request - Request parameters\n * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject\n * @param {String} request.contextId - ID of the item that is being acted upon\n * @param {String} request.comments - Comment to add to the history step associated with this request\n * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n */\nvar ApprovalProcessRequest = function(process, request) {\n  this._process = process;\n  this._request = request;\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * @method Process~ApprovalProcessRequest#then\n */\nApprovalProcessRequest.prototype.then = function(onResolve, onReject) {\n  if (!this._promise) {\n    this._promise = this._process.request([ this ]).then(function(rets) {\n      return rets[0];\n    });\n  }\n  this._promise.then(onResolve, onReject);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @method Process~ApprovalProcessRequest#thenCall\n */\nApprovalProcessRequest.prototype.thenCall = function(callback) {\n  return callback ? this.then(function(res) {\n    callback(null, res);\n  }, function(err) {\n    callback(err);\n  }) :\n  this;\n};\n\n},{\"./connection\":9,\"./promise\":17,\"lodash/core\":42}],17:[function(require,module,exports){\n(function (process){\n/*global process*/\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * @callback ResolvedCallback\n * @param {T} result - Resolved value\n * @returns {S}\n * @template T,S\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback ResolveCallback\n * @param {T} result\n * @template T\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback PromiseCallback\n * @param {ResolveCallback.<T>} resolve\n * @param {RejectCallback} reject\n * @template T\n */\n\n/**\n * Promise class with a little extension\n *\n * @class Promise\n * @constructor\n * @param {PromiseCallback.<T>}\n * @template T\n */\nvar Promise = require('promise/lib/es6-extensions');\n\n/**\n * The \"then\" method from the Promises/A+ specification\n *\n * @method Promise#then\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\n\n/**\n * Call \"then\" using given node-style callback function.\n * This is basically same as \"nodeify\" except that it always return the original promise\n *\n * @method Promise#thenCall\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Promise}\n */\nPromise.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/**\n * A sugar method, equivalent to promise.then(undefined, onRejected).\n *\n * @method Promise#catch\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\n\n/**\n * Synonym of Promise#catch\n *\n * @method Promise#fail\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\nPromise.prototype.fail = Promise.prototype['catch'];\n\n/**\n * Returns resolving promise with given reason\n *\n * @method Promise.resolve\n * @param {*} result - Resolved value\n * @returns {Promise}\n */\n\n/**\n * Returns rejecting promise with given reason\n *\n * @method Promise.reject\n * @param {Error} reason - Rejecting reason\n * @returns {Promise}\n */\n\n/**\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,\n * or is rejected with the same rejection reason as the first promise to be rejected.\n *\n * @method Promise.all\n * @param {Array.<Promise.<*>|*>} promises\n * @returns {Promise.<Array.<*>>}\n */\n\n/**\n * Returns a deferred object\n *\n * @method Promise.defer\n * @returns {Deferred}\n */\nPromise.defer = function() {\n  return new Deferred();\n};\n\n/**\n * Deferred object\n *\n * @protected\n * @constructor\n */\nvar Deferred = function() {\n  var self = this;\n  this.promise = new Promise(function(resolve, reject) {\n    self.resolve = resolve;\n    self.reject = reject;\n  });\n};\n\n/**\n * Resolve promise\n * @method Deferred#resolve\n * @param {*} result - Resolving result\n */\n\n/**\n * Reject promise\n * @method Deferred#reject\n * @param {Error} error - Rejecting reason\n */\n\n/**\n *\n */\nmodule.exports = Promise;\n\n}).call(this,require('_process'))\n\n},{\"_process\":45,\"lodash/core\":42,\"promise/lib/es6-extensions\":47}],18:[function(require,module,exports){\n(function (process){\n/*global process*/\n/**\n * @file Manages query for records in Salesforce\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    stream = require('readable-stream'),\n    _      = require('lodash/core'),\n    Promise = require('./promise'),\n    SfDate = require(\"./date\"),\n    SOQLBuilder = require(\"./soql-builder\"),\n    RecordStream = require(\"./record-stream\");\n\n/**\n * Query\n *\n * @protected\n * @class\n * @extends {stream.Readable}\n * @implements Promise.<T>\n * @template T\n * @param {Connection} conn - Connection object\n * @param {Object|String} config - Query config object or SOQL string\n * @param {Object} [options] - Default query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n */\nvar Query = module.exports = function(conn, config, options) {\n  Query.super_.call(this, { objectMode: true });\n\n  this._conn = conn;\n  if (_.isString(config)) { // if query config is string, it is given in SOQL.\n    this._soql = config;\n  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records\n    this._locator = config.locator.split(\"/\").pop();\n  } else {\n    this._config = config;\n    this.select(config.fields);\n    if (config.includes) {\n      this.include(config.includes);\n    }\n    if (config.sort) {\n      this.sort(config.sort);\n    }\n  }\n  this._options = _.defaults(options || {}, {\n    maxFetch: 10000,\n    autoFetch: false,\n    scanAll: false,\n    responseTarget: ResponseTargets.QueryResult\n  });\n  this._executed = false;\n  this._finished = false;\n  this._chaining = false;\n\n  this._deferred = Promise.defer();\n\n  var self = this;\n};\n\ninherits(Query, stream.Readable);\n\n/**\n * Select fields to include in the returning result\n *\n * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @returns {Query.<T>}\n */\nQuery.prototype.select = function(fields) {\n  if (this._soql) {\n    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");\n  }\n  fields = fields || '*';\n  if (_.isString(fields)) {\n    fields = fields.split(/\\s*,\\s*/);\n  } else if (_.isObject(fields) && !_.isArray(fields)) {\n    var _fields =  [];\n    for (var k in fields) {\n      if (fields[k]) { _fields.push(k); }\n    }\n    fields = _fields;\n  }\n  this._config.fields = fields;\n  return this;\n};\n\n/**\n * Set query conditions to filter the result records\n *\n * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @returns {Query.<T>}\n */\nQuery.prototype.where = function(conditions) {\n  if (this._soql) {\n    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");\n  }\n  this._config.conditions = conditions;\n  return this;\n};\n\n/**\n * Limit the returning result\n *\n * @param {Number} limit - Maximum number of records the query will return.\n * @returns {Query.<T>}\n */\nQuery.prototype.limit = function(limit) {\n  if (this._soql) {\n    throw Error(\"Cannot set limit for the query which has already built SOQL.\");\n  }\n  this._config.limit = limit;\n  return this;\n};\n\n/**\n * Synonym of Query#offset()\n *\n * @method Query#skip\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\n/**\n * Skip records\n *\n * @method Query#offset\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\nQuery.prototype.skip =\nQuery.prototype.offset = function(offset) {\n  if (this._soql) {\n    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");\n  }\n  this._config.offset = offset;\n  return this;\n};\n\n/**\n * Synonym of Query#sort()\n *\n * @memthod Query#orderby\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\n/**\n * Set query sort with direction\n *\n * @method Query#sort\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\nQuery.prototype.sort =\nQuery.prototype.orderby = function(sort, dir) {\n  if (this._soql) {\n    throw Error(\"Cannot set sort for the query which has already built SOQL.\");\n  }\n  if (_.isString(sort) && _.isString(dir)) {\n    sort = [ [ sort, dir ] ];\n  }\n  this._config.sort = sort;\n  return this;\n};\n\n/**\n * Include child relationship query\n *\n * @param {String} childRelName - Child relationship name to include in query result\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Optional query configulations.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @returns {Query~SubQuery}\n */\nQuery.prototype.include = function(childRelName, conditions, fields, options) {\n  if (this._soql) {\n    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");\n  }\n  if (_.isObject(childRelName)) {\n    var includes = childRelName;\n    for (var crname in includes) {\n      var config = includes[crname];\n      this.include(crname, config.conditions, config.fields, config);\n    }\n    return;\n  }\n  var childConfig = {\n    table: childRelName,\n    conditions: conditions,\n    fields: fields,\n    limit: options && options.limit,\n    offset: options && (options.offset || options.skip),\n    sort: options && options.sort\n  };\n  if (!_.isArray(this._config.includes)) this._config.includes = [];\n  this._config.includes.push(childConfig);\n  var childQuery = new SubQuery(this._conn, this, childConfig);\n  this._children = this._children || [];\n  this._children.push(childQuery);\n  return childQuery;\n};\n\n\n/**\n * Setting maxFetch query option\n *\n * @param {Number} maxFetch - Max fetching records in auto fetch mode\n * @returns {Query.<T>}\n */\nQuery.prototype.maxFetch = function(maxFetch) {\n  this._options.maxFetch = maxFetch;\n  return this;\n};\n\n/**\n * Switching auto fetch mode\n *\n * @param {Boolean} autoFetch - Using auto fetch mode or not\n * @returns {Query.<T>}\n */\nQuery.prototype.autoFetch = function(autoFetch) {\n  this._options.autoFetch = autoFetch;\n  return this;\n};\n\n/**\n * Set flag to scan all records including deleted and archived.\n *\n * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false.\n * @returns {Query.<T>}\n */\nQuery.prototype.scanAll = function(scanAll) {\n  this._options.scanAll = scanAll;\n  return this;\n};\n\n/**\n * @private\n */\nvar ResponseTargets = Query.ResponseTargets = {};\n[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {\n  ResponseTargets[f] = f;\n});\n\n/**\n * @protected\n * @param {String} responseTarget - Query response target\n * @returns {Query.<S>}\n */\nQuery.prototype.setResponseTarget = function(responseTarget) {\n  if (responseTarget in ResponseTargets) {\n    this._options.responseTarget = responseTarget;\n  }\n  return this;\n};\n\n\n/**\n * Synonym of Query#execute()\n *\n * @method Query#run\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.run =\n/**\n * Synonym of Query#execute()\n *\n * @method Query#exec\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.exec =\n/**\n * Execute query and fetch records from server.\n *\n * @method Query#execute\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.execute = function(options, callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  var deferred = this._deferred;\n\n  if (this._executed) {\n    deferred.reject(new Error(\"re-executing already executed query\"));\n    return this;\n  }\n\n  if (this._finished) {\n    deferred.reject(new Error(\"executing already closed query\"));\n    return this;\n  }\n\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  options = {\n    headers: options.headers || self._options.headers,\n    responseTarget: options.responseTarget || self._options.responseTarget,\n    autoFetch: options.autoFetch || self._options.autoFetch,\n    maxFetch: options.maxFetch || self._options.maxFetch,\n    scanAll: options.scanAll || self._options.scanAll\n  };\n\n  // callback and promise resolution;\n  var promiseCallback = function(err, res) {\n    if (_.isFunction(callback)) {\n      try {\n        res = callback(err, res);\n        err = null;\n      } catch(e) {\n        err = e;\n      }\n    }\n    if (err) {\n      deferred.reject(err);\n    } else {\n      deferred.resolve(res);\n    }\n  };\n  this.once('response', function(res) {\n    promiseCallback(null, res);\n  });\n  this.once('error', function(err) {\n    promiseCallback(err);\n  });\n\n  // collect fetched records in array\n  // only when response target is Records and\n  // either callback or chaining promises are available to this query.\n  this.once('fetch', function() {\n    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {\n      logger.debug('--- collecting all fetched records ---');\n      var records = [];\n      var onRecord = function(record) {\n        records.push(record);\n      };\n      self.on('record', onRecord);\n      self.once('end', function() {\n        self.removeListener('record', onRecord);\n        self.emit('response', records, self);\n      });\n    }\n  });\n\n  // flag to prevent re-execution\n  this._executed = true;\n\n  // start actual query\n  logger.debug('>>> Query start >>>');\n  this._execute(options).then(function() {\n    logger.debug('*** Query finished ***');\n  }).fail(function(err) {\n    logger.debug('--- Query error ---');\n    self.emit('error', err);\n  });\n\n  // return Query instance for chaining\n  return this;\n};\n\n/**\n * @private\n */\nQuery.prototype._execute = function(options) {\n  var self = this;\n  var logger = this._conn._logger;\n  var responseTarget = options.responseTarget;\n  var autoFetch = options.autoFetch;\n  var maxFetch = options.maxFetch;\n  var scanAll = options.scanAll;\n\n  return Promise.resolve(\n    self._locator ?\n    self._conn._baseUrl() + \"/query/\" + self._locator :\n    self.toSOQL().then(function(soql) {\n      self.totalFetched = 0;\n      logger.debug(\"SOQL = \" + soql);\n      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);\n    })\n  ).then(function(url) {\n    return self._conn.request({\n      method: 'GET',\n      url: url,\n      headers: options.headers\n    });\n  }).then(function(data) {\n    self.emit(\"fetch\");\n    self.totalSize = data.totalSize;\n    var res;\n    switch(responseTarget) {\n      case ResponseTargets.SingleRecord:\n        res = data.records && data.records.length > 0 ? data.records[0] : null;\n        break;\n      case ResponseTargets.Records:\n        res = data.records;\n        break;\n      case ResponseTargets.Count:\n        res = data.totalSize;\n        break;\n      default:\n        res = data;\n    }\n    // only fire response event when it should be notified per fetch\n    if (responseTarget !== ResponseTargets.Records) {\n      self.emit(\"response\", res, self);\n    }\n\n    // streaming record instances\n    var numRecords = (data.records && data.records.length) || 0;\n    for (var i=0; i<numRecords; i++) {\n      if (self.totalFetched >= maxFetch) {\n        self._finished = true;\n        break;\n      }\n      var record = data.records[i];\n      self.push(record);\n      self.emit('record', record, self.totalFetched++, self);\n    }\n    if (data.nextRecordsUrl) {\n      self._locator = data.nextRecordsUrl.split('/').pop();\n    }\n    self._finished = self._finished || data.done || !autoFetch;\n    if (self._finished) {\n      self.push(null);\n    } else {\n      self._execute(options);\n    }\n    return res;\n  });\n};\n\n/**\n * Readable stream implementation\n *\n * @override\n * @private\n */\nQuery.prototype._read = function(size) {\n  if (!this._finished && !this._executed) {\n    this.execute({ autoFetch: true });\n  }\n};\n\n/** @override **/\nQuery.prototype.on = function(e, fn) {\n  if (e === 'record') {\n    var self = this;\n    this.on('readable', function() {\n      while(self.read() !== null) {} // discard buffered records\n    });\n  }\n  return Query.super_.prototype.on.call(this, e, fn);\n};\n\n/** @override **/\nQuery.prototype.addListener = Query.prototype.on;\n\n\n/**\n * @private\n */\nQuery.prototype._expandFields = function() {\n  if (this._soql) {\n    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));\n  }\n  var self = this;\n  var logger = self._conn._logger;\n  var conn = this._conn;\n  var table = this._config.table;\n  var fields = this._config.fields || [];\n\n  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));\n\n  return Promise.all([\n    Promise.resolve(self._parent ? findRelationTable(table) : table)\n      .then(function(table) {\n        return Promise.all(\n          _.map(fields, function(field) { return expandAsteriskField(table, field); })\n        ).then(function(expandedFields) {\n          self._config.fields = _.flatten(expandedFields);\n        });\n      }),\n    Promise.all(\n      _.map(self._children || [], function(childQuery) {\n        return childQuery._expandFields();\n      })\n    )\n  ]);\n\n  function findRelationTable(rname) {\n    var ptable = self._parent._config.table;\n    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');\n    return describeCache(ptable).then(function(sobject) {\n      var upperRname = rname.toUpperCase();\n      var childRelation = _.find(sobject.childRelationships, function(cr) {\n        return (cr.relationshipName || '').toUpperCase() === upperRname;\n      });\n      return childRelation ? childRelation.childSObject :\n        Promise.reject(new Error(\"No child relationship found: \" + rname ));\n    });\n  }\n\n  function describeCache(table) {\n    logger.debug('describe cache: '+table);\n    var deferred = Promise.defer();\n    conn.describe$(table, function(err, sobject) {\n      logger.debug('... done.');\n      if (err) { deferred.reject(err); }\n      else { deferred.resolve(sobject); }\n    });\n    return deferred.promise;\n  }\n\n  function expandAsteriskField(table, field) {\n    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');\n    var fpath = field.split('.');\n    return fpath[fpath.length - 1] === '*' ?\n      describeCache(table).then(function(sobject) {\n        logger.debug('table '+table+'has been described');\n        if (fpath.length > 1) {\n          var rname = fpath.shift();\n          var rfield = _.find(sobject.fields, function(f) {\n            return f.relationshipName &&\n                   f.relationshipName.toUpperCase() === rname.toUpperCase();\n          });\n          if (rfield) {\n            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';\n            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {\n              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });\n            });\n          } else {\n            return [];\n          }\n        } else {\n          return _.map(sobject.fields, function(f) { return f.name; });\n        }\n      }) :\n      Promise.resolve([ field ]);\n  }\n};\n\n/**\n * Explain plan for executing query\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nQuery.prototype.explain = function(callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  return self.toSOQL().then(function(soql) {\n    logger.debug(\"SOQL = \" + soql);\n    var url = \"/query/?explain=\" + encodeURIComponent(soql);\n    return self._conn.request(url);\n  }).thenCall(callback);\n};\n\n/**\n * Return SOQL expression for the query\n *\n * @param {Callback.<String>} [callback] - Callback function\n * @returns {Promise.<String>}\n */\nQuery.prototype.toSOQL = function(callback) {\n  var self = this;\n  return Promise.resolve(self._soql ||\n    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })\n  ).thenCall(callback);\n};\n\n/**\n * Create data stream of queried records.\n * Automatically resume query if paused.\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n */\nQuery.prototype.stream = RecordStream.Serializable.prototype.stream;\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.map = RecordStream.prototype.map;\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.filter = RecordStream.prototype.map;\n\n/*\n * Default threshold num of bulk API switching\n */\nvar DEFAULT_BULK_THRESHOLD = 200;\n\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#delete\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#del\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\n/**\n * Delete queried records\n *\n * @method Query#destroy\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Object} [options] - Mass delete operation options\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype[\"delete\"] =\nQuery.prototype.del =\nQuery.prototype.destroy = function(type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = {};\n    type = null;\n  } else if (typeof type === 'object' && type !== null) {\n    callback = options;\n    options = type;\n    type = null;\n  }\n  options = options || {};\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");\n  }\n  // Set the threshold number to pass to bulk API\n  var thresholdNum =\n    options.allowBulk === false ?\n      -1 :\n    typeof options.bulkThreshold === 'number' ?\n      options.bulkThreshold :\n      // determine threshold if the connection version supports SObject collection API or not\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var records = [];\n    var batch = null;\n    var handleRecord = function(rec) {\n      if (!rec.Id) {\n        self.emit('error', new Error('Queried record does not include Salesforce record ID.'))\n        return;\n      }\n      var record = { Id: rec.Id };\n      if (batch) {\n        batch.write(record);\n      } else {\n        records.push(record);\n        if (thresholdNum < 0 || records.length > thresholdNum) {\n          // Use bulk delete instead of SObject REST API\n          batch =\n            self._conn.sobject(type).deleteBulk()\n              .on('response', resolve)\n              .on('error', reject);\n          records.forEach(function(record) {\n            batch.write(record);\n          });\n          records = [];\n        }\n      }\n    };\n    var handleEnd = function() {\n      if (batch) {\n        batch.end();\n      } else {\n        var ids = records.map(function (record) { return record.Id; });\n        self._conn.sobject(type).destroy(ids, { allowRecursive: true }).then(resolve, reject);\n      }\n    };\n    self.on('data', handleRecord)\n      .on('end', handleEnd)\n      .on('error', reject);\n  }).thenCall(callback);\n};\n\n/**\n * Update queried records, using given mapping function/object\n *\n * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Object} [options] - Mass update operation options\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype.update = function(mapping, type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = {};\n    type = null;\n  } else if (typeof type === 'object' && type !== null) {\n    callback = options;\n    options = type;\n    type = null;\n  }\n  options = options || {};\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");\n  }\n  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);\n  // Set the threshold number to pass to bulk API\n  var thresholdNum =\n    options.allowBulk === false ?\n      -1 :\n    typeof options.bulkThreshold === 'number' ?\n      options.bulkThreshold :\n      // determine threshold if the connection version supports SObject collection API or not\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var records = [];\n    var batch = null;\n    var handleRecord = function(record) {\n      if (batch) {\n        batch.write(record);\n      } else {\n        records.push(record);\n        if (thresholdNum < 0 || records.length > thresholdNum) {\n          // Use bulk update instead of SObject REST API\n          batch =\n            self._conn.sobject(type).updateBulk()\n              .on('response', resolve)\n              .on('error', reject);\n          records.forEach(function(record) {\n            batch.write(record);\n          });\n          records = [];\n        }\n      }\n    };\n    var handleEnd = function() {\n      if (batch) {\n        batch.end();\n      } else {\n        self._conn.sobject(type).update(records, { allowRecursive: true }).then(resolve, reject);\n      }\n    };\n    self.on('error', reject)\n      .pipe(updateStream)\n      .on('data', handleRecord)\n      .on('end', handleEnd)\n      .on('error', reject);\n  }).thenCall(callback);\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * Delegate to deferred promise, return promise instance for query result\n *\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\nQuery.prototype.then = function(onResolved, onReject) {\n  this._chaining = true;\n  if (!this._finished && !this._executed) { this.execute(); }\n  return this._deferred.promise.then.apply(this._deferred.promise, arguments);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query}\n */\nQuery.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/*--------------------------------------------*/\n\n/**\n * SubQuery object for representing child relationship query\n *\n * @protected\n * @class Query~SubQuery\n * @extends Query\n * @param {Connection} conn - Connection object\n * @param {Query} parent - Parent query object\n * @param {Object} config - Sub query configuration\n */\nvar SubQuery = function(conn, parent, config) {\n  SubQuery.super_.call(this, conn, config);\n  this._parent = parent;\n};\n\ninherits(SubQuery, Query);\n\n/**\n * @method Query~SubQuery#include\n * @override\n */\nSubQuery.prototype.include = function() {\n  throw new Error(\"Not allowed to include another subquery in subquery.\");\n};\n\n/**\n * Back the context to parent query object\n *\n * @method Query~SubQuery#end\n * @returns {Query}\n */\nSubQuery.prototype.end = function() {\n  return this._parent;\n};\n\n/**\n * If execute is called in subquery context, delegate it to parent query object\n *\n * @method Query~SubQuery#execute\n * @override\n */\nSubQuery.prototype.run =\nSubQuery.prototype.exec =\nSubQuery.prototype.execute = function() {\n  return this._parent.execute.apply(this._parent, arguments);\n};\n\n}).call(this,require('_process'))\n\n},{\"./date\":12,\"./promise\":17,\"./record-stream\":20,\"./soql-builder\":25,\"_process\":45,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"readable-stream\":61}],19:[function(require,module,exports){\n/**\n * @file Represents Salesforce QuickAction\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\n\n/**\n * A class for quick action\n *\n * @protected\n * @constructor\n */\nvar QuickAction = module.exports = function(conn, path) {\n  this._conn = conn;\n  this._path = path;\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionInfo\n * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)\n * @prop {String} name - Name of the action\n * @prop {String} label - Label of the action\n * @prop {Object} urls - Endpoint URL information of the action\n */\n/**\n * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo\n * @prop {String} contextSobjectType - Object type used for the action\n * @prop {String} targetSobjectType - Object type of the action to target\n * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID.\n * @prop {String} targetRecordTypeId - Record type of the targeted record\n * @prop {Object} layout - Layout sections that comprise an action\n */\n\n/**\n * Describe the action's information (including layout, etc.)\n *\n * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}\n */\nQuickAction.prototype.describe = function(callback) {\n  var url = this._path + \"/describe\";\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Retrieve default field values in the action (for given record, if specified)\n *\n * @param {String} [contextId] - ID of record to get default values specific to the record\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nQuickAction.prototype.defaultValues = function(contextId, callback) {\n  if (typeof contextId === 'function') {\n    callback = contextId;\n    contextId = null;\n  }\n  var url = this._path + \"/defaultValues\";\n  if (contextId) {\n    url += \"/\" + contextId;\n  }\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionResult\n * @param {String} id - Record id of the action result\n * @param {Array.<String>} feedItemIds - List of IDs for feed item\n * @param {Boolean} success - True if the action successfully completed\n * @param {Boolean} created - True if the action yields a new record\n * @param {String} contextId - Context record ID of the action\n * @param {Array.<Object>} errors - Errors if the action failed\n */\n\n/**\n * Execute the action for given context Id and record information\n * \n * @param {String} contextId - Context record ID of the action\n * @param {Record} record - Input record information for the action\n * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionResult>}\n */\nQuickAction.prototype.execute = function(contextId, record, callback) {\n  var body = {\n    contextId: contextId,\n    record: record\n  };\n  return this._conn.requestPost(this._path, body).thenCall(callback);\n};\n\n},{}],20:[function(require,module,exports){\n/**\n * @file Represents stream that handles Salesforce record as stream data\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    stream = require('readable-stream'),\n    Duplex = stream.Duplex,\n    Transform = stream.Transform,\n    PassThrough = stream.PassThrough,\n    inherits = require('inherits'),\n    _      = require('lodash/core'),\n    CSV    = require('./csv');\n\n\n/**\n * Class for Record Stream\n *\n * @class\n * @constructor\n * @extends stream.Transform\n */\nvar RecordStream = module.exports = function() {\n  RecordStream.super_.call(this, { objectMode: true });\n};\n\ninherits(RecordStream, Transform);\n\n\n/*\n * @override\n */\nRecordStream.prototype._transform = function(record, enc, callback) {\n  this.emit('record', record);\n  this.push(record);\n  callback();\n};\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream}\n */\nRecordStream.prototype.map = function(fn) {\n  return this.pipe(RecordStream.map(fn));\n};\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream}\n */\nRecordStream.prototype.filter = function(fn) {\n  return this.pipe(RecordStream.filter(fn));\n};\n\n\n/**\n * @class RecordStream.Serializable\n * @extends {RecordStream}\n */\nvar Serializable = RecordStream.Serializable = function() {\n  Serializable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Serializable, RecordStream);\n\n/**\n * Create readable data stream which emits serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nSerializable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this.pipe(converter.serialize(options))\n      .pipe(this._dataStream);\n  }\n  return this._dataStream;\n};\n\n\n/**\n * @class RecordStream.Parsable\n * @extends {RecordStream}\n */\nvar Parsable = RecordStream.Parsable = function() {\n  Parsable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Parsable, RecordStream);\n\n/**\n * Create writable data stream which accepts serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nParsable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this._parserStream = converter.parse(options).on('error', function(error) { this.emit('error', error); });\n    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));\n  }\n  return this._dataStream;\n};\n\n\n/* @override */\nParsable.prototype.on = function(ev, fn) {\n  if (ev === 'readable' || ev === 'record') {\n    this._dataStream.pipe(this._parserStream);\n  }\n  return Parsable.super_.prototype.on.call(this, ev, fn);\n};\n\n/* @override */\nParsable.prototype.addListener = Parsable.prototype.on;\n\n/* --------------------------------------------------- */\n\n/**\n * @callback RecordMapFunction\n * @param {Record} record - Source record to map\n * @returns {Record}\n */\n\n/**\n * Create a record stream which maps records and pass them to downstream\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.map = function(fn) {\n  var mapStream = new RecordStream.Serializable();\n  mapStream._transform = function(record, enc, callback) {\n    var rec = fn(record) || record; // if not returned record, use same record\n    this.push(rec);\n    callback();\n  };\n  return mapStream;\n};\n\n/**\n * Create mapping stream using given record template\n *\n * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true.\n * @param {Boolean} [noeval] - Disable template evaluation in mapping record.\n * @returns {RecordStream.Serializable}\n */\nRecordStream.recordMapStream = function(record, noeval) {\n  return RecordStream.map(function(rec) {\n    var mapped = { Id: rec.Id };\n    for (var prop in record) {\n      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\n    }\n    return mapped;\n  });\n\n  function evalMapping(value, mapping) {\n    if (_.isString(value)) {\n      var m = /^\\$\\{(\\w+)\\}$/.exec(value);\n      if (m) { return mapping[m[1]]; }\n      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {\n        var v = mapping[prop];\n        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);\n      });\n    } else {\n      return value;\n    }\n  }\n};\n\n/**\n * @callback RecordFilterFunction\n * @param {Record} record - Source record to filter\n * @returns {Boolean}\n */\n\n/**\n * Create a record stream which filters records and pass them to downstream\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.filter = function(fn) {\n  var filterStream = new RecordStream.Serializable();\n  filterStream._transform = function(record, enc, callback) {\n    if (fn(record)) { this.push(record); }\n    callback();\n  };\n  return filterStream;\n};\n\n/**\n * @private\n */\nfunction convertRecordForSerialization(record, options) {\n  return Object.keys(record).reduce(function(rec, key) {\n    var value = rec[key];\n    var t = typeof value;\n    var urec = {};\n    if (key === 'attributes') { // 'attributes' prop will be ignored\n      rec = _.extend({}, rec);\n      delete rec[key];\n    } else if (options.nullValue && value === null) {\n      urec[key] = options.nullValue;\n      rec = _.extend({}, rec, urec);\n    } else if (value !== null && typeof value === 'object') {\n      var precord = convertRecordForSerialization(value, options);\n      rec = Object.keys(precord).reduce(function(prec, pkey) {\n        prec[key + '.' + pkey] = precord[pkey];\n        return prec;\n      }, _.extend({}, rec));\n    }\n    return rec;\n  }, record);\n}\n\n/**\n * @private\n */\nfunction createPipelineStream(s1, s2) {\n  var pipeline = new PassThrough();\n  pipeline.on('pipe', function(source) {\n    source.unpipe(pipeline);\n    source.pipe(s1).pipe(s2);\n  });\n  pipeline.pipe = function(dest, options) {\n    return s2.pipe(dest, options);\n  };\n  return pipeline;\n}\n\n/** ---------------------------------------------------------------------- **/\n\n/**\n * @private\n */\nvar CSVStreamConverter = {\n  serialize: function(options) {\n    options = options || {};\n    return createPipelineStream(\n      RecordStream.map(function(record) {\n        return convertRecordForSerialization(record, options);\n      }),\n      CSV.serializeCSVStream(options)\n    );\n  },\n  parse: function(options) {\n    return CSV.parseCSVStream(options);\n  }\n};\n\n/**\n * @private\n */\nvar DataStreamConverters = RecordStream.DataStreamConverters = {\n  csv: CSVStreamConverter\n};\n\n},{\"./csv\":11,\"events\":36,\"inherits\":38,\"lodash/core\":42,\"readable-stream\":61}],21:[function(require,module,exports){\n/**\n * @file Represents Salesforce record information\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A simple hash object including record field information\n *\n * @typedef {Object} Record\n */\n\n/**\n * Remote reference to record information\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection object\n * @param {String} type - SObject type\n * @param {String} id - Record ID\n */\nvar RecordReference = module.exports = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Retrieve record field information\n *\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nRecordReference.prototype.retrieve = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, this.id, options, callback);\n};\n\n/**\n * Update record field information\n *\n * @param {Record} record - A Record which includes fields to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.update = function(record, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  record = _.clone(record);\n  record.Id = this.id;\n  return this._conn.update(this.type, record, options, callback);\n};\n\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype[\"delete\"] =\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#del\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.del =\n/**\n * Delete record field\n *\n * @method RecordReference#destroy\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.destroy = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, this.id, options, callback);\n};\n\n/**\n * Get blob field as stream\n *\n * @param {String} fieldName - Blob field name\n * @returns {stream.Stream}\n */\nRecordReference.prototype.blob = function(fieldName) {\n  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');\n  return this._conn.request(url).stream();\n};\n\n},{\"lodash/core\":42}],22:[function(require,module,exports){\n'use strict';\n\nvar required = require('./_required');\n\nmodule.exports = function(name) {\n  if (name === './jsforce' || name === 'jsforce') {\n    name = './core';\n  }\n  var m = required[name];\n  if (typeof m === 'undefined') {\n    throw new Error(\"Cannot find module '\" + name + \"'\");\n  }\n  return m;\n};\n\n},{\"./_required\":3}],23:[function(require,module,exports){\n/**\n * @file Manages method call to SOAP endpoint\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    _ = require('lodash/core'),\n    xml2js = require('xml2js'),\n    HttpApi = require('./http-api');\n\n\n/**\n * Class for SOAP endpoint of Salesforce\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection instance\n * @param {Object} options - SOAP endpoint setting options\n * @param {String} options.endpointUrl - SOAP endpoint URL\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\n */\nvar SOAP = module.exports = function(conn, options) {\n  SOAP.super_.apply(this, arguments);\n  this._endpointUrl = options.endpointUrl;\n  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\n};\n\ninherits(SOAP, HttpApi);\n\n/**\n * Invoke SOAP call using method and arguments\n *\n * @param {String} method - Method name\n * @param {Object} args - Arguments for the method call\n * @param {Object} [schema] - Schema definition of response message\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nSOAP.prototype.invoke = function(method, args, schema, callback) {\n  if (typeof schema === 'function') {\n    callback = schema;\n    schema = null;\n  }\n  var message = {};\n  message[method] = args;\n  return this.request({\n    method: 'POST',\n    url: this._endpointUrl,\n    headers: {\n      'Content-Type': 'text/xml',\n      'SOAPAction': '\"\"'\n    },\n    message: message\n  }).then(function(res) {\n    return schema ? convertType(res, schema) : res;\n  }).thenCall(callback);\n};\n\n/* @private */\nfunction convertType(value, schema) {\n  if (_.isArray(value)) {\n    return value.map(function(v) {\n      return convertType(v, schema && schema[0])\n    });\n  } else if (_.isObject(value)) {\n    if (value.$ && value.$['xsi:nil'] === 'true') {\n      return null;\n    } else if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else {\n      var o = {};\n      for (var key in value) {\n        o[key] = convertType(value[key], schema && schema[key]);\n      }\n      return o;\n    }\n  } else {\n    if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else if (_.isObject(schema)) {\n      return {};\n    } else {\n      switch(schema) {\n        case 'string':\n          return String(value);\n        case 'number':\n          return Number(value);\n        case 'boolean':\n          return value === 'true';\n        default:\n          return value;\n      }\n    }\n  }\n}\n\n/** @override **/\nSOAP.prototype.beforeSend = function(request) {\n  request.body = this._createEnvelope(request.message);\n};\n\n/** @override **/\nSOAP.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 500 &&\n    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);\n};\n\n/** @override **/\nSOAP.prototype.parseError = function(body) {\n  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);\n  return {\n    errorCode: error.faultcode,\n    message: error.faultstring\n  };\n};\n\n/** @override **/\nSOAP.prototype.getResponseBody = function(response) {\n  var body = SOAP.super_.prototype.getResponseBody.call(this, response);\n  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);\n};\n\n/**\n * @private\n */\nfunction lookupValue(obj, propRegExps) {\n  var regexp = propRegExps.shift();\n  if (!regexp) {\n    return obj;\n  }\n  else {\n    for (var prop in obj) {\n      if (regexp.test(prop)) {\n        return lookupValue(obj[prop], propRegExps);\n      }\n    }\n    return null;\n  }\n}\n\n/**\n * @private\n */\nfunction toXML(name, value) {\n  if (_.isObject(name)) {\n    value = name;\n    name = null;\n  }\n  if (_.isArray(value)) {\n    return _.map(value, function(v) { return toXML(name, v); }).join('');\n  } else {\n    var attrs = [];\n    var elems = [];\n    if (_.isObject(value)) {\n      for (var k in value) {\n        var v = value[k];\n        if (k[0] === '@') {\n          k = k.substring(1);\n          attrs.push(k + '=\"' + v + '\"');\n        } else {\n          elems.push(toXML(k, v));\n        }\n      }\n      value = elems.join('');\n    } else {\n      value = String(value)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n    }\n    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';\n    var endTag = name ? '</' + name + '>' : '';\n    return  startTag + value + endTag;\n  }\n}\n\n/**\n * @private\n */\nSOAP.prototype._createEnvelope = function(message) {\n  var header = {};\n  var conn = this._conn;\n  if (conn.accessToken) {\n    header.SessionHeader = { sessionId: this._conn.accessToken };\n  }\n  if (conn.callOptions) {\n    header.CallOptions = conn.callOptions;\n  }\n  return [\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\n    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\n    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\n    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\n    toXML(header),\n    '</soapenv:Header>',\n    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\n    toXML(message),\n    '</soapenv:Body>',\n    '</soapenv:Envelope>'\n  ].join('');\n};\n\n},{\"./http-api\":13,\"inherits\":38,\"lodash/core\":42,\"xml2js\":77}],24:[function(require,module,exports){\n/**\n * @file Represents Salesforce SObject\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    Record = require('./record'),\n    Query  = require('./query'),\n    Cache  = require('./cache'),\n    QuickAction = require('./quick-action');\n\n/**\n * A class for organizing all SObject access\n *\n * @constructor\n */\nvar SObject = module.exports = function(conn, type) {\n  this._conn = conn;\n  this.type = type;\n  var cacheOptions = { key: \"describe.\" + this.type };\n  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n\n  cacheOptions = { key: \"layouts.\" + this.type };\n  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);\n  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);\n\n  cacheOptions = { key: \"compactLayouts.\" + this.type };\n  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);\n  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);\n\n  cacheOptions = { key: \"approvalLayouts.\" + this.type };\n  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);\n  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);\n};\n\n/**\n * Synonym of SObject#create()\n *\n * @method SObject#insert\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method SObject#create\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.insert =\nSObject.prototype.create = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.create(this.type, records, options, callback);\n};\n\n/**\n * Retrieve specified records\n *\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nSObject.prototype.retrieve = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, ids, options, callback);\n};\n\n/**\n * Update records\n *\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.update = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.update(this.type, records, options, callback);\n};\n\n/**\n * Upsert records\n *\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.upsert = function(records, extIdField, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.upsert(this.type, records, extIdField, options, callback);\n};\n\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#delete\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#del\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method SObject#destroy\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype[\"delete\"] =\nSObject.prototype.del =\nSObject.prototype.destroy = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, ids, options, callback);\n};\n\n/**\n * Describe SObject metadata\n *\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nSObject.prototype.describe = function(callback) {\n  return this._conn.describe(this.type, callback);\n};\n\n/**\n * Get record representation instance by given id\n *\n * @param {String} id - A record ID\n * @returns {RecordReference}\n */\nSObject.prototype.record = function(id) {\n  return new Record(this._conn, this.type, id);\n};\n\n/**\n * Find and fetch records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.find = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var config = {\n    fields: fields,\n    includes: options.includes,\n    table: this.type,\n    conditions: conditions,\n    limit: options.limit,\n    sort: options.sort,\n    offset: options.offset || options.skip\n  };\n  var query = new Query(this._conn, config, options);\n  query.setResponseTarget(Query.ResponseTargets.Records);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Fetch one record which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Query.<Record>}\n */\nSObject.prototype.findOne = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = _.extend(options || {}, { limit: 1 });\n  var query = this.find(conditions, fields, options);\n  query.setResponseTarget(Query.ResponseTargets.SingleRecord);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Find and fetch records only by specifying fields to fetch.\n *\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.select = function(fields, callback) {\n  return this.find(null, fields, null, callback);\n};\n\n/**\n * Count num of records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Callback.<Number>} [callback] - Callback function\n * @returns {Query.<Number>}\n */\nSObject.prototype.count = function(conditions, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n  }\n  var query = this.find(conditions, { \"count()\" : true });\n  query.setResponseTarget(\"Count\");\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n\n/**\n * Call Bulk#load() to execute bulkload, returning batch object\n *\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\n * @param {Object} [options] - Options for bulk loading operation\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.bulkload = function(operation, options, input, callback) {\n  return this._conn.bulk.load(this.type, operation, options, input, callback);\n};\n\n/**\n * Synonym of SObject#createBulk()\n *\n * @method SObject#insertBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly insert input data using bulk API\n *\n * @method SObject#createBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.insertBulk =\nSObject.prototype.createBulk = function(input, callback) {\n  return this.bulkload(\"insert\", input, callback);\n};\n\n/**\n * Bulkly update records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.updateBulk = function(input, callback) {\n  return this.bulkload(\"update\", input, callback);\n};\n\n/**\n * Bulkly upsert records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {String} [options.extIdField] - External ID field name\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.upsertBulk = function(input, extIdField, callback) {\n  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);\n};\n\n/**\n * Synonym of SObject#destroyBulk()\n *\n * @method SObject#deleteBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly delete records specified by input data using bulk API\n *\n * @method SObject#destroyBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteBulk =\nSObject.prototype.destroyBulk = function(input, callback) {\n  return this.bulkload(\"delete\", input, callback);\n};\n\n/**\n * Synonym of SObject#destroyHardBulk()\n *\n * @method SObject#deleteHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly hard delete records specified in input data using bulk API\n *\n * @method SObject#destroyHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteHardBulk =\nSObject.prototype.destroyHardBulk = function(input, callback) {\n  return this.bulkload(\"hardDelete\", input, callback);\n};\n\n/**\n * Retrieve recently accessed records\n *\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nSObject.prototype.recent = function (callback) {\n  return this._conn.recent(this.type, callback);\n};\n\n/**\n * Retrieve the updated records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nSObject.prototype.updated = function (start, end, callback) {\n  return this._conn.updated(this.type, start, end, callback);\n};\n\n/**\n * Retrieve the deleted records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nSObject.prototype.deleted = function (start, end, callback) {\n  return this._conn.deleted(this.type, start, end, callback);\n};\n\n/**\n * @typedef {Object} LayoutInfo\n * @prop {Array.<Object>} layouts - Array of layouts\n * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings\n */\n/**\n * Describe layout information for SObject\n *\n * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)\n * @param {Callback.<LayoutInfo>} [callback] - Callback function\n * @returns {Promise.<LayoutInfo>}\n */\nSObject.prototype.layouts = function(layoutName, callback) {\n  if (typeof layoutName === 'function') {\n    callback = layoutName;\n    layoutName = null;\n  }\n  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");\n  return this._conn.request(url, callback);\n};\n\n/**\n * @typedef {Object} CompactLayoutInfo\n * @prop {Array.<Object>} compactLayouts - Array of compact layouts\n * @prop {String} defaultCompactLayoutId - ID of default compact layout\n * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<CompactLayoutInfo>}\n */\nSObject.prototype.compactLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * @typedef {Object} ApprovalLayoutInfo\n * @prop {Array.<Object>} approvalLayouts - Array of approval layouts\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<ApprovalLayoutInfo>}\n */\nSObject.prototype.approvalLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list of list views for the SObject\n *\n * @param {Callback.<ListViewsInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewsInfo>}\n */\nSObject.prototype.listviews = function(callback) {\n  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list view info in specifed view id\n *\n * @param {String} id - List view ID\n * @returns {ListView}\n */\nSObject.prototype.listview = function(id) {\n  return new ListView(this._conn, this.type, id);\n};\n\n/**\n * Returns all registered quick actions for the SObject\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nSObject.prototype.quickActions = function(callback) {\n  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified quick aciton in the SObject\n *\n * @param {String} actionName - Name of the quick action\n * @returns {QuickAction}\n */\nSObject.prototype.quickAction = function(actionName) {\n  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);\n};\n\n\n/**\n * A class for organizing list view information\n *\n * @protected\n * @class ListView\n * @param {Connection} conn - Connection instance\n * @param {SObject} type - SObject type\n * @param {String} id - List view ID\n */\nvar ListView = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Executes query for the list view and returns the resulting data and presentation information.\n *\n * @param {Callback.<ListViewResultInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewResultInfo>}\n */\nListView.prototype.results = function(callback) {\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * Returns detailed information about a list view\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewDescribeInfo>}\n */\nListView.prototype.describe = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';\n  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);\n};\n\n/**\n * Explain plan for executing list view\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nListView.prototype.explain = function(callback) {\n  var url = \"/query/?explain=\" + this.id;\n  return this._conn.request(url, callback);\n};\n\n},{\"./cache\":8,\"./query\":18,\"./quick-action\":19,\"./record\":21,\"lodash/core\":42}],25:[function(require,module,exports){\n/**\n * @file Create and build SOQL string from configuration\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    SfDate = require(\"./date\");\n\n\n/**\n * Create SOQL\n * @private\n */\nfunction createSOQL(query) {\n  var soql = [\n    \"SELECT \",\n    createFieldsClause(query.fields, query.includes),\n    \" FROM \",\n    query.table\n  ].join(\"\");\n  var cond = createConditionClause(query.conditions);\n  if (cond) {\n    soql += \" WHERE \" + cond;\n  }\n  var orderby = createOrderByClause(query.sort);\n  if (orderby) {\n    soql += \" ORDER BY \" + orderby;\n  }\n  if (query.limit) {\n    soql += \" LIMIT \" + query.limit;\n  }\n  if (query.offset) {\n    soql += \" OFFSET \" + query.offset;\n  }\n  return soql;\n}\n\n/** @private **/\nfunction createFieldsClause(fields, childQueries) {\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\n    return '(' + createSOQL(cquery) + ')';\n  });\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\n}\n\n/** @private **/\nfunction createConditionClause(conditions, operator, depth) {\n  if (_.isString(conditions)) {\n    return conditions;\n  }\n  conditions = conditions || [];\n  operator = operator || \"AND\";\n  depth = depth || 0;\n  if (!isArray(conditions)) { // if passed in hash object\n    conditions = _.keys(conditions).map(function(key) {\n      return {\n        key: key,\n        value: conditions[key]\n      };\n    });\n  } else {\n    conditions = conditions.map(function(cond) {\n      var conds = [];\n      for (var key in cond) {\n        conds.push({\n          key: key,\n          value: cond[key]\n        });\n      }\n      return conds.length>1 ? conds : conds[0];\n    });\n  }\n  conditions = conditions.map(function(cond) {\n    var d = depth+1, op;\n    switch (cond.key) {\n      case \"$or\" :\n      case \"$and\" :\n      case \"$not\" :\n        if (operator !== \"NOT\" && conditions.length === 1) {\n          d = depth; // not change tree depth\n        }\n        op = cond.key === \"$or\" ? \"OR\" :\n             cond.key === \"$and\" ? \"AND\" :\n             \"NOT\";\n        return createConditionClause(cond.value, op, d);\n      default:\n        return createFieldExpression(cond.key, cond.value);\n    }\n  }).filter(function(expr) { return expr; });\n\n  var paren;\n  if (operator === 'NOT') {\n    paren = depth > 0;\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\n  } else {\n    paren = depth > 0 && conditions.length > 1;\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\n  }\n}\n\nvar opMap = {\n  \"=\"     : \"=\",\n  \"$eq\"   : \"=\",\n  \"!=\"    : \"!=\",\n  \"$ne\"   : \"!=\",\n  \">\"     : \">\",\n  \"$gt\"   : \">\",\n  \"<\"     : \"<\",\n  \"$lt\"   : \"<\",\n  \">=\"    : \">=\",\n  \"$gte\"  : \">=\",\n  \"<=\"    : \"<=\",\n  \"$lte\"  : \"<=\",\n  \"$like\" : \"LIKE\",\n  \"$nlike\" : \"NOT LIKE\",\n  \"$in\"   : \"IN\",\n  \"$nin\"  : \"NOT IN\",\n  \"$includes\" : \"INCLUDES\",\n  \"$excludes\" : \"EXCLUDES\",\n  \"$exists\" : \"EXISTS\"\n};\n\n/** @private **/\nfunction createFieldExpression(field, value) {\n  var op = \"$eq\";\n\n  // Assume the `$in` operator if value is an array and none was supplied.\n  if (_.isArray(value)) { op = \"$in\"; }\n  // Otherwise, if an object was passed then process the supplied ops.\n  else if (_.isObject(value)) {\n    var _value;\n    for (var k in value) {\n      if (k[0] === \"$\") {\n        op = k;\n        value = value[k];\n        break;\n      }\n    }\n  }\n  var sfop = opMap[op];\n  if (!sfop || _.isUndefined(value)) { return null; }\n  var valueExpr = createValueExpression(value);\n  if (_.isUndefined(valueExpr)) { return null; }\n  switch (sfop) {\n    case \"NOT LIKE\":\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\n    case \"EXISTS\":\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\n    default:\n      return [ field, sfop, valueExpr ].join(\" \");\n  }\n}\n\n/** @private **/\nfunction createValueExpression(value) {\n  if (isArray(value)) {\n    return value.length > 0 ?\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\n           undefined;\n  }\n  if (value instanceof SfDate) {\n    return value.toString();\n  }\n  if (_.isString(value)) {\n    return \"'\" + escapeSOQLString(value) + \"'\";\n  }\n  if (_.isNumber(value)) {\n    return (value).toString();\n  }\n  if (_.isNull(value)) {\n    return \"null\";\n  }\n  return value;\n}\n\n/** @private **/\nfunction escapeSOQLString(str) {\n  return String(str || '').replace(/'/g, \"\\\\'\");\n}\n\n/** @private **/\nfunction isArray(a) {\n  return _.isObject(a) && _.isFunction(a.pop);\n}\n\n\n/** @private **/\nfunction createOrderByClause(sort) {\n  sort = sort || [];\n  if (_.isString(sort)) {\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\n      // must be specified in pure \"order by\" clause. Return raw config.\n      return sort;\n    }\n    // sort order in mongoose-style expression.\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\n    sort = sort.split(/\\s+/).map(function(field) {\n      var dir = \"ASC\"; // ascending\n      var flag = field[0];\n      if (flag === '-') {\n        dir = \"DESC\";\n        field = field.substring(1);\n      } else if (flag === '+') {\n        field = field.substring(1);\n      }\n      return [ field, dir ];\n    });\n  } else if (!isArray(sort)) {\n    sort = _.keys(sort).map(function(field) {\n      var dir = sort[field];\n      return [ field, dir ];\n    });\n  }\n  return sort.map(function(s) {\n    var field = s[0], dir = s[1];\n    switch (String(dir)) {\n      case \"DESC\":\n      case \"desc\":\n      case \"descending\":\n      case \"-\":\n      case \"-1\":\n        dir = \"DESC\";\n        break;\n      default:\n        dir = \"ASC\";\n    }\n    return field + \" \" + dir;\n  }).join(\", \");\n}\n\n\nexports.createSOQL = createSOQL;\n\n},{\"./date\":12,\"lodash/core\":42}],26:[function(require,module,exports){\n(function (process){\n/*global process, Sfdc */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    Promise = require('./promise');\n\n/* */\n\nvar request = require('request'),\n    canvas = require('./browser/canvas'),\n    jsonp = require('./browser/jsonp');\n\n// set options if defaults setting is available in request, which is not available in xhr module.\nif (request.defaults) {\n  var defaults = {\n    followAllRedirects: true\n  };\n  if (process.env.HTTP_PROXY) {\n    defaults.proxy = process.env.HTTP_PROXY;\n  }\n  if (parseInt(process.env.HTTP_TIMEOUT)) {\n    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);\n  }\n  request = request.defaults(defaults);\n}\n\nvar baseUrl;\nif (typeof window === 'undefined') {\n  baseUrl = process.env.LOCATION_BASE_URL || \"\";\n} else {\n  var apiHost = normalizeApiHost(window.location.host);\n  baseUrl = apiHost ? \"https://\" + apiHost : \"\";\n}\n\n/**\n * Add stream() method to promise (and following promise chain), to access original request stream.\n * @private\n */\nfunction streamify(promise, factory) {\n  var _then = promise.then;\n  promise.then = function() {\n    factory();\n    var newPromise = _then.apply(promise, arguments);\n    return streamify(newPromise, factory);\n  };\n  promise.stream = factory;\n  return promise;\n}\n\n/**\n * Normarize Salesforce API host name\n * @private\n */\nfunction normalizeApiHost(apiHost) {\n  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\n  if (m) {\n    apiHost = m[1] + \".salesforce.com\";\n  }\n  return apiHost;\n}\n\n/**\n * Class for HTTP request transport\n *\n * @class\n * @protected\n */\nvar Transport = module.exports = function() {};\n\n/**\n * Make HTTP request, returns promise instead of stream\n *\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nTransport.prototype.httpRequest = function(params, callback) {\n  var deferred = Promise.defer();\n  var req;\n  var httpRequest = this._getHttpRequestModule();\n  var createRequest = function() {\n    if (!req) {\n      req = httpRequest(params, function(err, response) {\n        if (err) {\n          deferred.reject(err);\n        } else {\n          deferred.resolve(response);\n        }\n      });\n    }\n    return req;\n  };\n  return streamify(deferred.promise, createRequest).thenCall(callback);\n};\n\n/** @protected **/\nTransport.prototype._getHttpRequestModule = function() {\n  return request;\n};\n\n\n/**\n * Class for JSONP request transport\n * @class Transport~JsonpTransport\n * @protected\n * @extends Transport\n * @param {String} jsonpParam - Callback parameter name for JSONP invokation.\n */\nvar JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {\n  this._jsonpParam = jsonpParam;\n};\n\ninherits(JsonpTransport, Transport);\n\n/** @protected **/\nJsonpTransport.prototype._getHttpRequestModule = function() {\n  return jsonp.createRequest(this._jsonpParam);\n};\n\nJsonpTransport.supported = jsonp.supported;\n\n\n/**\n * Class for Sfdc Canvas request transport\n * @class Transport~CanvasTransport\n * @protected\n * @extends Transport\n * @param {Object} signedRequest - Parsed signed request object\n */\nvar CanvasTransport = Transport.CanvasTransport = function(signedRequest) {\n  this._signedRequest = signedRequest;\n};\n\ninherits(CanvasTransport, Transport);\n\n/** @protected **/\nCanvasTransport.prototype._getHttpRequestModule = function() {\n  return canvas.createRequest(this._signedRequest);\n};\n\nCanvasTransport.supported = canvas.supported;\n\n\n/**\n * Class for HTTP request transport using AJAX proxy service\n *\n * @class Transport~ProxyTransport\n * @protected\n * @extends Transport\n * @param {String} proxyUrl - AJAX Proxy server URL\n */\nvar ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {\n  this._proxyUrl = proxyUrl;\n};\n\ninherits(ProxyTransport, Transport);\n\n/**\n * Make HTTP request via AJAX proxy\n *\n * @method Transport~ProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),\n    headers: {\n      'salesforceproxy-endpoint': url\n    }\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n\n\n/**\n * Class for HTTP request transport using a proxy server\n *\n * @class Transport~HttpProxyTransport\n * @protected\n * @extends Transport\n * @param {String} httpProxy - URL of the HTTP proxy server\n */\nvar HttpProxyTransport = Transport.HttpProxyTransport = function(httpProxy) {\n  this._httpProxy = httpProxy;\n};\n\ninherits(HttpProxyTransport, Transport);\n\n/**\n * Make HTTP request via proxy server\n *\n * @method Transport~HttpProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Callback Function\n * @returns {Promise.<Object>}\n */\nHttpProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: params.url,\n    proxy: this._httpProxy,\n    headers: {}\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return HttpProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n\n}).call(this,require('_process'))\n\n},{\"./browser/canvas\":4,\"./browser/jsonp\":6,\"./promise\":17,\"_process\":45,\"inherits\":38,\"request\":7}],27:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],28:[function(require,module,exports){\n'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n},{}],29:[function(require,module,exports){\n\n},{}],30:[function(require,module,exports){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (ArrayBuffer.isView(buf)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n},{\"base64-js\":28,\"ieee754\":37}],31:[function(require,module,exports){\n(function (Buffer){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n}).call(this,{\"isBuffer\":require(\"../../is-buffer/index.js\")})\n\n},{\"../../is-buffer/index.js\":39}],32:[function(require,module,exports){\n(function (process,Buffer){\n// Generated by CoffeeScript 1.12.7\nvar Parser, StringDecoder, isObjLiteral, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nmodule.exports = function() {\n  var callback, called, chunks, data, err, options, parser;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n    if (typeof callback !== 'function') {\n      throw Error(\"Invalid callback argument: \" + (JSON.stringify(callback)));\n    }\n    if (!(typeof data === 'string' || Buffer.isBuffer(arguments[0]))) {\n      return callback(Error(\"Invalid data argument: \" + (JSON.stringify(data))));\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'string' || Buffer.isBuffer(arguments[0])) {\n      data = arguments[0];\n    } else if (isObjLiteral(arguments[0])) {\n      options = arguments[0];\n    } else {\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[0]));\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else if (isObjLiteral(arguments[1])) {\n      if (options) {\n        err = 'Invalid arguments: got options twice as first and second arguments';\n      } else {\n        options = arguments[1];\n      }\n    } else {\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[1]));\n    }\n    if (err) {\n      if (!callback) {\n        throw Error(err);\n      } else {\n        return callback(Error(err));\n      }\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  parser = new Parser(options);\n  if (data != null) {\n    process.nextTick(function() {\n      parser.write(data);\n      return parser.end();\n    });\n  }\n  if (callback) {\n    called = false;\n    chunks = options.objname ? {} : [];\n    parser.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = parser.read()) {\n        if (options.objname) {\n          results.push(chunks[chunk[0]] = chunk[1]);\n        } else {\n          results.push(chunks.push(chunk));\n        }\n      }\n      return results;\n    });\n    parser.on('error', function(err) {\n      called = true;\n      return callback(err);\n    });\n    parser.on('end', function() {\n      if (!called) {\n        return callback(null, chunks);\n      }\n    });\n  }\n  return parser;\n};\n\nParser = function(options) {\n  var base, base1, base10, base11, base12, base13, base14, base15, base16, base2, base3, base4, base5, base6, base7, base8, base9, k, v;\n  if (options == null) {\n    options = {};\n  }\n  this.options = {};\n  for (k in options) {\n    v = options[k];\n    this.options[k] = v;\n  }\n  this.options.objectMode = true;\n  stream.Transform.call(this, this.options);\n  if ((base = this.options).rowDelimiter == null) {\n    base.rowDelimiter = null;\n  }\n  if (typeof this.options.rowDelimiter === 'string') {\n    this.options.rowDelimiter = [this.options.rowDelimiter];\n  }\n  if ((base1 = this.options).delimiter == null) {\n    base1.delimiter = ',';\n  }\n  if (this.options.quote !== void 0 && !this.options.quote) {\n    this.options.quote = '';\n  }\n  if ((base2 = this.options).quote == null) {\n    base2.quote = '\"';\n  }\n  if ((base3 = this.options).escape == null) {\n    base3.escape = '\"';\n  }\n  if ((base4 = this.options).columns == null) {\n    base4.columns = null;\n  }\n  if ((base5 = this.options).comment == null) {\n    base5.comment = '';\n  }\n  if ((base6 = this.options).objname == null) {\n    base6.objname = false;\n  }\n  if ((base7 = this.options).trim == null) {\n    base7.trim = false;\n  }\n  if ((base8 = this.options).ltrim == null) {\n    base8.ltrim = false;\n  }\n  if ((base9 = this.options).rtrim == null) {\n    base9.rtrim = false;\n  }\n  if ((base10 = this.options).auto_parse == null) {\n    base10.auto_parse = false;\n  }\n  if ((base11 = this.options).auto_parse_date == null) {\n    base11.auto_parse_date = false;\n  }\n  if (this.options.auto_parse_date === true) {\n    this.options.auto_parse_date = function(value) {\n      var m;\n      m = Date.parse(value);\n      if (!isNaN(m)) {\n        value = new Date(m);\n      }\n      return value;\n    };\n  }\n  if ((base12 = this.options).relax == null) {\n    base12.relax = false;\n  }\n  if ((base13 = this.options).relax_column_count == null) {\n    base13.relax_column_count = false;\n  }\n  if ((base14 = this.options).skip_empty_lines == null) {\n    base14.skip_empty_lines = false;\n  }\n  if ((base15 = this.options).max_limit_on_data_read == null) {\n    base15.max_limit_on_data_read = 128000;\n  }\n  if ((base16 = this.options).skip_lines_with_empty_values == null) {\n    base16.skip_lines_with_empty_values = false;\n  }\n  this.lines = 0;\n  this.count = 0;\n  this.skipped_line_count = 0;\n  this.empty_line_count = 0;\n  this.is_int = /^(\\-|\\+)?([1-9]+[0-9]*)$/;\n  this.is_float = function(value) {\n    return (value - parseFloat(value) + 1) >= 0;\n  };\n  this._ = {\n    decoder: new StringDecoder(),\n    quoting: false,\n    commenting: false,\n    field: null,\n    nextChar: null,\n    closingQuote: 0,\n    line: [],\n    chunks: [],\n    rawBuf: '',\n    buf: '',\n    rowDelimiterLength: this.options.rowDelimiter ? Math.max.apply(Math, this.options.rowDelimiter.map(function(v) {\n      return v.length;\n    })) : void 0\n  };\n  return this;\n};\n\nutil.inherits(Parser, stream.Transform);\n\nmodule.exports.Parser = Parser;\n\nParser.prototype._transform = function(chunk, encoding, callback) {\n  var err;\n  if (chunk instanceof Buffer) {\n    chunk = this._.decoder.write(chunk);\n  }\n  err = this.__write(chunk, false);\n  if (err) {\n    return this.emit('error', err);\n  }\n  return callback();\n};\n\nParser.prototype._flush = function(callback) {\n  var err;\n  err = this.__write(this._.decoder.end(), true);\n  if (err) {\n    return this.emit('error', err);\n  }\n  if (this._.quoting) {\n    this.emit('error', new Error(\"Quoted field not terminated at line \" + (this.lines + 1)));\n    return;\n  }\n  if (this._.line.length > 0) {\n    err = this.__push(this._.line);\n    if (err) {\n      return callback(err);\n    }\n  }\n  return callback();\n};\n\nParser.prototype.__push = function(line) {\n  var call_column_udf, columns, err, field, i, j, len, lineAsColumns, rawBuf, ref, row;\n  if (this.options.skip_lines_with_empty_values && line.join('').trim() === '') {\n    return;\n  }\n  row = null;\n  if (this.options.columns === true) {\n    this.options.columns = line;\n    rawBuf = '';\n    return;\n  } else if (typeof this.options.columns === 'function') {\n    call_column_udf = function(fn, line) {\n      var columns, err;\n      try {\n        columns = fn.call(null, line);\n        return [null, columns];\n      } catch (error) {\n        err = error;\n        return [err];\n      }\n    };\n    ref = call_column_udf(this.options.columns, line), err = ref[0], columns = ref[1];\n    if (err) {\n      return err;\n    }\n    this.options.columns = columns;\n    rawBuf = '';\n    return;\n  }\n  if (!this._.line_length && line.length > 0) {\n    this._.line_length = this.options.columns ? this.options.columns.length : line.length;\n  }\n  if (line.length === 1 && line[0] === '') {\n    this.empty_line_count++;\n  } else if (line.length !== this._.line_length) {\n    if (this.options.relax_column_count) {\n      this.count++;\n      this.skipped_line_count++;\n    } else if (this.options.columns != null) {\n      return Error(\"Number of columns on line \" + this.lines + \" does not match header\");\n    } else {\n      return Error(\"Number of columns is inconsistent on line \" + this.lines);\n    }\n  } else {\n    this.count++;\n  }\n  if (this.options.columns != null) {\n    lineAsColumns = {};\n    for (i = j = 0, len = line.length; j < len; i = ++j) {\n      field = line[i];\n      if (this.options.columns[i] === false) {\n        continue;\n      }\n      lineAsColumns[this.options.columns[i]] = field;\n    }\n    if (this.options.objname) {\n      row = [lineAsColumns[this.options.objname], lineAsColumns];\n    } else {\n      row = lineAsColumns;\n    }\n  } else {\n    row = line;\n  }\n  if (this.count < this.options.from) {\n    return;\n  }\n  if (this.count > this.options.to) {\n    return;\n  }\n  if (this.options.raw) {\n    this.push({\n      raw: this._.rawBuf,\n      row: row\n    });\n    this._.rawBuf = '';\n  } else {\n    this.push(row);\n  }\n  return null;\n};\n\nParser.prototype.__write = function(chars, end) {\n  var areNextCharsDelimiter, areNextCharsRowDelimiters, auto_parse, char, err, escapeIsQuote, i, isDelimiter, isEscape, isNextCharAComment, isQuote, isRowDelimiter, isRowDelimiterLength, is_float, is_int, l, ltrim, nextCharPos, ref, ref1, ref2, ref3, ref4, ref5, remainingBuffer, rowDelimiter, rtrim, wasCommenting;\n  is_int = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_int === 'function') {\n        return _this.is_int(value);\n      } else {\n        return _this.is_int.test(value);\n      }\n    };\n  })(this);\n  is_float = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_float === 'function') {\n        return _this.is_float(value);\n      } else {\n        return _this.is_float.test(value);\n      }\n    };\n  })(this);\n  auto_parse = (function(_this) {\n    return function(value) {\n      if (!_this.options.auto_parse) {\n        return value;\n      }\n      if (typeof _this.options.auto_parse === 'function') {\n        return _this.options.auto_parse(value);\n      }\n      if (is_int(value)) {\n        value = parseInt(value);\n      } else if (is_float(value)) {\n        value = parseFloat(value);\n      } else if (_this.options.auto_parse_date) {\n        value = _this.options.auto_parse_date(value);\n      }\n      return value;\n    };\n  })(this);\n  ltrim = this.options.trim || this.options.ltrim;\n  rtrim = this.options.trim || this.options.rtrim;\n  chars = this._.buf + chars;\n  l = chars.length;\n  i = 0;\n  if (this.lines === 0 && 0xFEFF === chars.charCodeAt(0)) {\n    i++;\n  }\n  while (i < l) {\n    if (!end) {\n      remainingBuffer = chars.substr(i, l - i);\n      if ((!this.options.rowDelimiter && i + 3 > l) || (!this._.commenting && l - i < this.options.comment.length && this.options.comment.substr(0, l - i) === remainingBuffer) || (this.options.rowDelimiter && l - i < this._.rowDelimiterLength && this.options.rowDelimiter.some(function(rd) {\n        return rd.substr(0, l - i) === remainingBuffer;\n      })) || (this.options.rowDelimiter && this._.quoting && l - i < (this.options.quote.length + this._.rowDelimiterLength) && this.options.rowDelimiter.some((function(_this) {\n        return function(rd) {\n          return (_this.options.quote + rd).substr(0, l - i) === remainingBuffer;\n        };\n      })(this))) || (l - i <= this.options.delimiter.length && this.options.delimiter.substr(0, l - i) === remainingBuffer) || (l - i <= this.options.escape.length && this.options.escape.substr(0, l - i) === remainingBuffer)) {\n        break;\n      }\n    }\n    char = this._.nextChar ? this._.nextChar : chars.charAt(i);\n    this._.nextChar = l > i + 1 ? chars.charAt(i + 1) : '';\n    if (this.options.raw) {\n      this._.rawBuf += char;\n    }\n    if (this.options.rowDelimiter == null) {\n      nextCharPos = i;\n      rowDelimiter = null;\n      if (!this._.quoting && (char === '\\n' || char === '\\r')) {\n        rowDelimiter = char;\n        nextCharPos += 1;\n      } else if (this._.quoting && char === this.options.quote && ((ref = this._.nextChar) === '\\n' || ref === '\\r')) {\n        rowDelimiter = this._.nextChar;\n        nextCharPos += 2;\n        if (this.raw) {\n          rawBuf += this._.nextChar;\n        }\n      }\n      if (rowDelimiter) {\n        if (rowDelimiter === '\\r' && chars.charAt(nextCharPos) === '\\n') {\n          rowDelimiter += '\\n';\n        }\n        this.options.rowDelimiter = [rowDelimiter];\n        this._.rowDelimiterLength = rowDelimiter.length;\n      }\n    }\n    if (!this._.commenting && char === this.options.escape) {\n      escapeIsQuote = this.options.escape === this.options.quote;\n      isEscape = this._.nextChar === this.options.escape;\n      isQuote = this._.nextChar === this.options.quote;\n      if (!(escapeIsQuote && (this._.field == null) && !this._.quoting) && (isEscape || isQuote)) {\n        i++;\n        char = this._.nextChar;\n        this._.nextChar = chars.charAt(i + 1);\n        if (this._.field == null) {\n          this._.field = '';\n        }\n        this._.field += char;\n        if (this.options.raw) {\n          this._.rawBuf += char;\n        }\n        i++;\n        continue;\n      }\n    }\n    if (!this._.commenting && char === this.options.quote) {\n      if (this._.quoting) {\n        areNextCharsRowDelimiters = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\n          return chars.substr(i + 1, rd.length) === rd;\n        });\n        areNextCharsDelimiter = chars.substr(i + 1, this.options.delimiter.length) === this.options.delimiter;\n        isNextCharAComment = this._.nextChar === this.options.comment;\n        if (this._.nextChar && !areNextCharsRowDelimiters && !areNextCharsDelimiter && !isNextCharAComment) {\n          if (this.options.relax) {\n            this._.quoting = false;\n            if (this._.field) {\n              this._.field = \"\" + this.options.quote + this._.field;\n            }\n          } else {\n            return Error(\"Invalid closing quote at line \" + (this.lines + 1) + \"; found \" + (JSON.stringify(this._.nextChar)) + \" instead of delimiter \" + (JSON.stringify(this.options.delimiter)));\n          }\n        } else {\n          this._.quoting = false;\n          this._.closingQuote = this.options.quote.length;\n          i++;\n          if (end && i === l) {\n            this._.line.push(auto_parse(this._.field || ''));\n            this._.field = null;\n          }\n          continue;\n        }\n      } else if (!this._.field) {\n        this._.quoting = true;\n        i++;\n        continue;\n      } else if ((this._.field != null) && !this.options.relax) {\n        return Error(\"Invalid opening quote at line \" + (this.lines + 1));\n      }\n    }\n    isRowDelimiter = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\n      return chars.substr(i, rd.length) === rd;\n    });\n    if (isRowDelimiter || (end && i === l - 1)) {\n      this.lines++;\n    }\n    wasCommenting = false;\n    if (!this._.commenting && !this._.quoting && this.options.comment && chars.substr(i, this.options.comment.length) === this.options.comment) {\n      this._.commenting = true;\n    } else if (this._.commenting && isRowDelimiter) {\n      wasCommenting = true;\n      this._.commenting = false;\n    }\n    isDelimiter = chars.substr(i, this.options.delimiter.length) === this.options.delimiter;\n    if (!this._.commenting && !this._.quoting && (isDelimiter || isRowDelimiter)) {\n      if (isRowDelimiter) {\n        isRowDelimiterLength = this.options.rowDelimiter.filter(function(rd) {\n          return chars.substr(i, rd.length) === rd;\n        })[0].length;\n      }\n      if (isRowDelimiter && this._.line.length === 0 && (this._.field == null)) {\n        if (wasCommenting || this.options.skip_empty_lines) {\n          i += isRowDelimiterLength;\n          this._.nextChar = chars.charAt(i);\n          continue;\n        }\n      }\n      if (rtrim) {\n        if (!this._.closingQuote) {\n          this._.field = (ref1 = this._.field) != null ? ref1.trimRight() : void 0;\n        }\n      }\n      this._.line.push(auto_parse(this._.field || ''));\n      this._.closingQuote = 0;\n      this._.field = null;\n      if (isDelimiter) {\n        i += this.options.delimiter.length;\n        this._.nextChar = chars.charAt(i);\n        if (end && !this._.nextChar) {\n          isRowDelimiter = true;\n          this._.line.push('');\n        }\n      }\n      if (isRowDelimiter) {\n        err = this.__push(this._.line);\n        if (err) {\n          return err;\n        }\n        this._.line = [];\n        i += isRowDelimiterLength;\n        this._.nextChar = chars.charAt(i);\n        continue;\n      }\n    } else if (!this._.commenting && !this._.quoting && (char === ' ' || char === '\\t')) {\n      if (this._.field == null) {\n        this._.field = '';\n      }\n      if (!(ltrim && !this._.field)) {\n        this._.field += char;\n      }\n      i++;\n    } else if (!this._.commenting) {\n      if (this._.field == null) {\n        this._.field = '';\n      }\n      this._.field += char;\n      i++;\n    } else {\n      i++;\n    }\n    if (!this._.commenting && ((ref2 = this._.field) != null ? ref2.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Field exceeds max_limit_on_data_read setting (\" + this.options.max_limit_on_data_read + \") \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (!this._.commenting && ((ref3 = this._.line) != null ? ref3.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  if (end) {\n    if (this._.field != null) {\n      if (rtrim) {\n        if (!this._.closingQuote) {\n          this._.field = (ref4 = this._.field) != null ? ref4.trimRight() : void 0;\n        }\n      }\n      this._.line.push(auto_parse(this._.field || ''));\n      this._.field = null;\n    }\n    if (((ref5 = this._.field) != null ? ref5.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Delimiter not found in the file \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (l === 0) {\n      this.lines++;\n    }\n    if (this._.line.length > this.options.max_limit_on_data_read) {\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  this._.buf = chars.substr(i);\n  return null;\n};\n\nisObjLiteral = function(_obj) {\n  var _test;\n  _test = _obj;\n  if (typeof _obj !== 'object' || _obj === null || Array.isArray(_obj)) {\n    return false;\n  } else {\n    return (function() {\n      while (!false) {\n        if (Object.getPrototypeOf(_test = Object.getPrototypeOf(_test)) === null) {\n          break;\n        }\n      }\n      return Object.getPrototypeOf(_obj === _test);\n    })();\n  }\n};\n\n}).call(this,require('_process'),require(\"buffer\").Buffer)\n\n},{\"_process\":45,\"buffer\":30,\"stream\":66,\"string_decoder\":67,\"util\":71}],33:[function(require,module,exports){\n(function (Buffer){\n// Generated by CoffeeScript 1.12.7\nvar StringDecoder, parse;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nparse = require('./index');\n\nmodule.exports = function(data, options) {\n  var decoder, err, parser, records;\n  if (options == null) {\n    options = {};\n  }\n  records = options.objname ? {} : [];\n  if (data instanceof Buffer) {\n    decoder = new StringDecoder();\n    data = decoder.write(data);\n  }\n  parser = new parse.Parser(options);\n  parser.push = function(record) {\n    if (options.objname) {\n      return records[record[0]] = record[1];\n    } else {\n      return records.push(record);\n    }\n  };\n  err = parser.__write(data, false);\n  if (err) {\n    throw err;\n  }\n  if (data instanceof Buffer) {\n    err = parser.__write(data.end(), true);\n    if (err) {\n      throw err;\n    }\n  }\n  parser._flush((function() {}));\n  return records;\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./index\":32,\"buffer\":30,\"string_decoder\":67}],34:[function(require,module,exports){\n(function (process){\n// Generated by CoffeeScript 1.12.7\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n  if ((base7 = this.options).columns == null) {\n    base7.columns = null;\n  }\n  if ((base8 = this.options).header == null) {\n    base8.header = false;\n  }\n  if ((base9 = this.options).formatters == null) {\n    base9.formatters = {};\n  }\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base11 = this.options.formatters).bool == null) {\n    base11.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base12 = this.options.formatters).object == null) {\n    base12.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base13 = this.options).rowDelimiter == null) {\n    base13.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = (typeof value === 'undefined' || value === null) ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n\n}).call(this,require('_process'))\n\n},{\"_process\":45,\"lodash.get\":41,\"stream\":66,\"util\":71}],35:[function(require,module,exports){\n(function (Buffer){\n// Generated by CoffeeScript 1.12.7\nvar StringDecoder, stringify;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nstringify = require('./index');\n\nmodule.exports = function(records, options) {\n  var data, decoder, i, len, record, stringifier;\n  if (options == null) {\n    options = {};\n  }\n  data = [];\n  if (records instanceof Buffer) {\n    decoder = new StringDecoder();\n    records = decoder.write(records);\n  }\n  stringifier = new stringify.Stringifier(options);\n  stringifier.push = function(record) {\n    if (record) {\n      return data.push(record.toString());\n    }\n  };\n  for (i = 0, len = records.length; i < len; i++) {\n    record = records[i];\n    stringifier.write(record);\n  }\n  stringifier.end();\n  return data.join('');\n};\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"./index\":34,\"buffer\":30,\"string_decoder\":67}],36:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n\n},{}],37:[function(require,module,exports){\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n},{}],38:[function(require,module,exports){\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n},{}],39:[function(require,module,exports){\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n},{}],40:[function(require,module,exports){\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n},{}],41:[function(require,module,exports){\n(function (global){\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],42:[function(require,module,exports){\n(function (global){\n/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_PARTIAL_FLAG = 32;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"']/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object;\n      object.prototype = undefined;\n      return result;\n    };\n  }());\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    object[key] = value;\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    return objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  var baseIsArguments = noop;\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Unordered comparison\n   *  2 - Partial comparison\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\n\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n\n    var objIsObj = objTag == objectTag,\n        othIsObj = othTag == objectTag,\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} paths The property paths to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseRest` which flattens the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @returns {Function} Returns the new function.\n   */\n  function flatRest(func) {\n    return setToString(overRest(func, undefined, flatten), func + '');\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n\n    return !!length &&\n      (type == 'number' ||\n        (type != 'symbol' && reIsUint.test(value))) &&\n          (value > -1 && value % 1 == 0 && value < length);\n  }\n\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n    var type = typeof index;\n    if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)\n        ) {\n      return eq(object[index], value);\n    }\n    return false;\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = transform(array);\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n  var setToString = identity;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length;\n    if (!length) {\n      return [];\n    }\n    var args = Array(length - 1),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array == null ? 0 : array.length;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _.forEach([1, 2], function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, [function(o) { return o.user; }]);\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one millisecond.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n      !propertyIsEnumerable.call(value, 'callee');\n  };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties == null ? result : assign(result, properties);\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(object, sources) {\n    object = Object(object);\n\n    var index = -1;\n    var length = sources.length;\n    var guard = length > 2 ? sources[2] : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      length = 1;\n    }\n\n    while (++index < length) {\n      var source = sources[index];\n      var props = keysIn(source);\n      var propsIndex = -1;\n      var propsLength = props.length;\n\n      while (++propsIndex < propsLength) {\n        var key = props[propsIndex];\n        var value = object[key];\n\n        if (value === undefined ||\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n          object[key] = source[key];\n        }\n      }\n    }\n\n    return object;\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [paths] The property paths to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = flatRest(function(object, paths) {\n    return object == null ? {} : basePick(object, paths);\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object == null ? [] : baseValues(object, keys(object));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n   * corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],43:[function(require,module,exports){\nmodule.exports = MultiStream\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\ninherits(MultiStream, stream.Readable)\n\nfunction MultiStream (streams, opts) {\n  var self = this\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\n  stream.Readable.call(self, opts)\n\n  self.destroyed = false\n\n  self._drained = false\n  self._forwarding = false\n  self._current = null\n  self._toStreams2 = (opts && opts.objectMode) ? toStreams2Obj : toStreams2Buf\n\n  if (typeof streams === 'function') {\n    self._queue = streams\n  } else {\n    self._queue = streams.map(self._toStreams2)\n    self._queue.forEach(function (stream) {\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\n    })\n  }\n\n  self._next()\n}\n\nMultiStream.obj = function (streams) {\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\n}\n\nMultiStream.prototype._read = function () {\n  this._drained = true\n  this._forward()\n}\n\nMultiStream.prototype._forward = function () {\n  if (this._forwarding || !this._drained || !this._current) return\n  this._forwarding = true\n\n  var chunk\n  while ((chunk = this._current.read()) !== null) {\n    this._drained = this.push(chunk)\n  }\n\n  this._forwarding = false\n}\n\nMultiStream.prototype.destroy = function (err) {\n  if (this.destroyed) return\n  this.destroyed = true\n\n  if (this._current && this._current.destroy) this._current.destroy()\n  if (typeof this._queue !== 'function') {\n    this._queue.forEach(function (stream) {\n      if (stream.destroy) stream.destroy()\n    })\n  }\n\n  if (err) this.emit('error', err)\n  this.emit('close')\n}\n\nMultiStream.prototype._next = function () {\n  var self = this\n  self._current = null\n\n  if (typeof self._queue === 'function') {\n    self._queue(function (err, stream) {\n      if (err) return self.destroy(err)\n      stream = self._toStreams2(stream)\n      self._attachErrorListener(stream)\n      self._gotNextStream(stream)\n    })\n  } else {\n    var stream = self._queue.shift()\n    if (typeof stream === 'function') {\n      stream = self._toStreams2(stream())\n      self._attachErrorListener(stream)\n    }\n    self._gotNextStream(stream)\n  }\n}\n\nMultiStream.prototype._gotNextStream = function (stream) {\n  var self = this\n\n  if (!stream) {\n    self.push(null)\n    self.destroy()\n    return\n  }\n\n  self._current = stream\n  self._forward()\n\n  stream.on('readable', onReadable)\n  stream.once('end', onEnd)\n  stream.once('close', onClose)\n\n  function onReadable () {\n    self._forward()\n  }\n\n  function onClose () {\n    if (!stream._readableState.ended) {\n      self.destroy()\n    }\n  }\n\n  function onEnd () {\n    self._current = null\n    stream.removeListener('readable', onReadable)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('close', onClose)\n    self._next()\n  }\n}\n\nMultiStream.prototype._attachErrorListener = function (stream) {\n  var self = this\n  if (!stream) return\n\n  stream.once('error', onError)\n\n  function onError (err) {\n    stream.removeListener('error', onError)\n    self.destroy(err)\n  }\n}\n\nfunction toStreams2Obj (s) {\n  return toStreams2(s, {objectMode: true, highWaterMark: 16})\n}\n\nfunction toStreams2Buf (s) {\n  return toStreams2(s)\n}\n\nfunction toStreams2 (s, opts) {\n  if (!s || typeof s === 'function' || s._readableState) return s\n\n  var wrap = new stream.Readable(opts).wrap(s)\n  if (s.destroy) {\n    wrap.destroy = s.destroy.bind(s)\n  }\n  return wrap\n}\n\n},{\"inherits\":38,\"readable-stream\":61}],44:[function(require,module,exports){\n(function (process){\n'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n\n}).call(this,require('_process'))\n\n},{\"_process\":45}],45:[function(require,module,exports){\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],46:[function(require,module,exports){\n'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n},{\"asap/raw\":27}],47:[function(require,module,exports){\n'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n},{\"./core.js\":46}],48:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\n},{}],49:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\n},{}],50:[function(require,module,exports){\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n},{\"./decode\":48,\"./encode\":49}],51:[function(require,module,exports){\nmodule.exports = require('./lib/_stream_duplex.js');\n\n},{\"./lib/_stream_duplex.js\":52}],52:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};\n},{\"./_stream_readable\":54,\"./_stream_writable\":56,\"core-util-is\":31,\"inherits\":38,\"process-nextick-args\":44}],53:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n},{\"./_stream_transform\":55,\"core-util-is\":31,\"inherits\":38}],54:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./_stream_duplex\":52,\"./internal/streams/BufferList\":57,\"./internal/streams/destroy\":58,\"./internal/streams/stream\":59,\"_process\":45,\"core-util-is\":31,\"events\":36,\"inherits\":38,\"isarray\":40,\"process-nextick-args\":44,\"safe-buffer\":64,\"string_decoder/\":67,\"util\":29}],55:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n},{\"./_stream_duplex\":52,\"core-util-is\":31,\"inherits\":38}],56:[function(require,module,exports){\n(function (process,global,setImmediate){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {},require(\"timers\").setImmediate)\n\n},{\"./_stream_duplex\":52,\"./internal/streams/destroy\":58,\"./internal/streams/stream\":59,\"_process\":45,\"core-util-is\":31,\"inherits\":38,\"process-nextick-args\":44,\"safe-buffer\":64,\"timers\":68,\"util-deprecate\":69}],57:[function(require,module,exports){\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}\n},{\"safe-buffer\":64,\"util\":29}],58:[function(require,module,exports){\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};\n},{\"process-nextick-args\":44}],59:[function(require,module,exports){\nmodule.exports = require('events').EventEmitter;\n\n},{\"events\":36}],60:[function(require,module,exports){\nmodule.exports = require('./readable').PassThrough\n\n},{\"./readable\":61}],61:[function(require,module,exports){\nexports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n\n},{\"./lib/_stream_duplex.js\":52,\"./lib/_stream_passthrough.js\":53,\"./lib/_stream_readable.js\":54,\"./lib/_stream_transform.js\":55,\"./lib/_stream_writable.js\":56}],62:[function(require,module,exports){\nmodule.exports = require('./readable').Transform\n\n},{\"./readable\":61}],63:[function(require,module,exports){\nmodule.exports = require('./lib/_stream_writable.js');\n\n},{\"./lib/_stream_writable.js\":56}],64:[function(require,module,exports){\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n\n},{\"buffer\":30}],65:[function(require,module,exports){\n(function (Buffer){\n;(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n\n}).call(this,require(\"buffer\").Buffer)\n\n},{\"buffer\":30,\"stream\":66,\"string_decoder\":67}],66:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n},{\"events\":36,\"inherits\":38,\"readable-stream/duplex.js\":51,\"readable-stream/passthrough.js\":60,\"readable-stream/readable.js\":61,\"readable-stream/transform.js\":62,\"readable-stream/writable.js\":63}],67:[function(require,module,exports){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}\n},{\"safe-buffer\":64}],68:[function(require,module,exports){\n(function (setImmediate,clearImmediate){\nvar nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n}).call(this,require(\"timers\").setImmediate,require(\"timers\").clearImmediate)\n\n},{\"process/browser.js\":45,\"timers\":68}],69:[function(require,module,exports){\n(function (global){\n\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],70:[function(require,module,exports){\nmodule.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n},{}],71:[function(require,module,exports){\n(function (process,global){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./support/isBuffer\":70,\"_process\":45,\"inherits\":38}],72:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n\n},{}],73:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n\n},{\"./defaults\":74,\"xmlbuilder\":99}],74:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n\n},{}],75:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    return Parser;\n\n  })(events.EventEmitter);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n}).call(this);\n\n},{\"./bom\":72,\"./defaults\":74,\"./processors\":76,\"events\":36,\"sax\":65,\"timers\":68}],76:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n\n},{}],77:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n}).call(this);\n\n},{\"./builder\":73,\"./defaults\":74,\"./parser\":75,\"./processors\":76}],78:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n}).call(this);\n\n},{}],79:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute;\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.options = parent.options;\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing attribute name of element \" + parent.name);\n      }\n      if (value == null) {\n        throw new Error(\"Missing attribute value for attribute \" + name + \" of element \" + parent.name);\n      }\n      this.name = this.stringify.attName(name);\n      this.value = this.stringify.attValue(value);\n    }\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.set(options).attribute(this);\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n\n},{}],80:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text\");\n      }\n      this.text = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.set(options).cdata(this);\n    };\n\n    return XMLCData;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],81:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLComment, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.set(options).comment(this);\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],82:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],83:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.eleName(name);\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdElement(this);\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],84:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing entity name\");\n      }\n      if (value == null) {\n        throw new Error(\"Missing entity value\");\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.eleName(name);\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity\");\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity\");\n        }\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity\");\n        }\n      }\n    }\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdEntity(this);\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLNode\":91}],85:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdNotation(this);\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],86:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.set(options).declaration(this);\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLNode\":91}],87:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var ref, ref1;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n      }\n      if (sysID == null) {\n        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.set(options).docType(this);\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLDTDAttList\":82,\"./XMLDTDElement\":83,\"./XMLDTDEntity\":84,\"./XMLDTDNotation\":85,\"./XMLNode\":91}],88:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      this.isDocument = true;\n    }\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer.set(writerOptions);\n      }\n      return writer.document(this);\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.set(options).document(this);\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLNode\":91,\"./XMLStringWriter\":95,\"./XMLStringifier\":96}],89:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter(options);\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter(writerOptions);\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node\");\n      }\n      this.openCurrent();\n      name = name.valueOf();\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.dtdElement.apply(this, arguments);\n      } else {\n        return this.node(name, attributes, text);\n      }\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode\");\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n          this.root = node;\n        }\n        this.onData(this.writer.openNode(node, this.currentLevel));\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      if (!node.isClosed) {\n        this.onData(this.writer.closeNode(node, this.currentLevel));\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLAttribute\":79,\"./XMLCData\":80,\"./XMLComment\":81,\"./XMLDTDAttList\":82,\"./XMLDTDElement\":83,\"./XMLDTDEntity\":84,\"./XMLDTDNotation\":85,\"./XMLDeclaration\":86,\"./XMLDocType\":87,\"./XMLElement\":90,\"./XMLProcessingInstruction\":92,\"./XMLRaw\":93,\"./XMLStringWriter\":95,\"./XMLStringifier\":96,\"./XMLText\":97}],90:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = name.valueOf();\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLAttribute\":79,\"./XMLNode\":91}],91:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if ((isObject(val)) && (isEmpty(val))) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLCData\":80,\"./XMLComment\":81,\"./XMLDeclaration\":86,\"./XMLDocType\":87,\"./XMLElement\":90,\"./XMLProcessingInstruction\":92,\"./XMLRaw\":93,\"./XMLText\":97}],92:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.set(options).processingInstruction(this);\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],93:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text\");\n      }\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.set(options).raw(this);\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],94:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n\n},{\"./XMLCData\":80,\"./XMLComment\":81,\"./XMLDTDAttList\":82,\"./XMLDTDElement\":83,\"./XMLDTDEntity\":84,\"./XMLDTDNotation\":85,\"./XMLDeclaration\":86,\"./XMLDocType\":87,\"./XMLElement\":90,\"./XMLProcessingInstruction\":92,\"./XMLRaw\":93,\"./XMLText\":97,\"./XMLWriterBase\":98}],95:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n\n},{\"./XMLCData\":80,\"./XMLComment\":81,\"./XMLDTDAttList\":82,\"./XMLDTDElement\":83,\"./XMLDTDEntity\":84,\"./XMLDTDNotation\":85,\"./XMLDeclaration\":86,\"./XMLDocType\":87,\"./XMLElement\":90,\"./XMLProcessingInstruction\":92,\"./XMLRaw\":93,\"./XMLText\":97,\"./XMLWriterBase\":98}],96:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n\n},{}],97:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text\");\n      }\n      this.value = this.stringify.eleText(text);\n    }\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.set(options).text(this);\n    };\n\n    return XMLText;\n\n  })(XMLNode);\n\n}).call(this);\n\n},{\"./XMLNode\":91}],98:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      var indent;\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n\n},{}],99:[function(require,module,exports){\n// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.doctype(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n}).call(this);\n\n},{\"./Utility\":78,\"./XMLDocument\":88,\"./XMLDocumentCB\":89,\"./XMLStreamWriter\":94,\"./XMLStringWriter\":95}]},{},[1])(1)\n});\n\n","'use strict';\nmodule.exports = '1.8.5';\n","// This file content is dynamically created in build script\n\"use strict\";\nmodule.exports = {\n  'inherits': require('inherits'),\n  'util': require('util'),\n  'events': require('events'),\n  'lodash/core': require('lodash/core'),\n  'readable-stream': require('readable-stream'),\n  'multistream': require('multistream'),\n  './VERSION': require('./VERSION'),\n  './cache': require('./cache'),\n  './connection': require('./connection'),\n  './core': require('./core'),\n  './csv': require('./csv'),\n  './date': require('./date'),\n  './http-api': require('./http-api'),\n  './logger': require('./logger'),\n  './oauth2': require('./oauth2'),\n  './process': require('./process'),\n  './promise': require('./promise'),\n  './query': require('./query'),\n  './quick-action': require('./quick-action'),\n  './record-stream': require('./record-stream'),\n  './record': require('./record'),\n  './soap': require('./soap'),\n  './sobject': require('./sobject'),\n  './soql-builder': require('./soql-builder'),\n  './transport': require('./transport')\n};","/*global Sfdc */\n'use strict';\n\nvar Duplex = require('readable-stream').Duplex,\n    _ = require('lodash/core');\n\nfunction parseHeaders(hs) {\n  var headers = {};\n  hs.split(/\\n/).forEach(function(line) {\n    var pair = line.split(/\\s*:\\s*/);\n    var name = pair[0].toLowerCase();\n    var value = pair[1];\n    headers[name] = value;\n  });\n  return headers;\n}\n\nmodule.exports = {\n\n  supported: typeof Sfdc === 'object' && typeof Sfdc.canvas !== 'undefined',\n\n  createRequest: function(signedRequest) {\n    return function(params, callback) {\n      var response;\n      var str = new Duplex();\n      str._read = function(size) {\n        if (response) {\n          str.push(response.body);\n        }\n      };\n      var bufs = [];\n      var sent = false;\n      str._write = function(chunk, encoding, callback) {\n        bufs.push(chunk.toString(encoding));\n        callback();\n      };\n      str.on('finish', function() {\n        if (!sent) {\n          send(bufs.join(''));\n          sent = true;\n        }\n      });\n      if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n        send(params.body);\n        sent = true;\n      }\n\n      function send(body) {\n        var settings = {\n          client: signedRequest.client,\n          method: params.method,\n          data: body\n        };\n        if (params.headers) {\n          settings.headers = {};\n          for (var name in params.headers) {\n            if (name.toLowerCase() === 'content-type') {\n              settings.contentType = params.headers[name];\n            } else {\n              settings.headers[name] = params.headers[name];\n            }\n          }\n        }\n        settings.success = function(data) {\n          var headers = parseHeaders(data.responseHeaders);\n          var body = data.payload;\n          if (!_.isString(body)) {\n            body = JSON.stringify(body);\n          }\n          response = {\n            statusCode : data.status,\n            headers: headers,\n            body: body\n          };\n          if (callback) {\n            callback(null, response, response.body);\n          }\n          str.end();\n        };\n        settings.failure = function(err) {\n          if (callback) {\n            callback(err);\n          }\n        };\n        Sfdc.canvas.client.ajax(params.url, settings);\n      }\n      return str;\n    };\n  }\n};\n","/**\n * @file Browser client connection management class\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    qs = require('querystring'),\n    _ = require('lodash/core'),\n    Connection = require('../connection'),\n    OAuth2 = require('../oauth2');\n\n/**\n * @private\n */\nfunction popupWin(url, w, h) {\n  var left = (screen.width/2)-(w/2);\n  var top = (screen.height/2)-(h/2);\n  return window.open(url, null, 'location=yes,toolbar=no,status=no,menubar=no,width='+w+',height='+h+',top='+top+',left='+left);\n}\n\nfunction handleCallbackResponse() {\n  var res = checkCallbackResponse();\n  var state = localStorage.getItem('jsforce_state');\n  if (res && state && res.body.state === state) {\n    localStorage.removeItem('jsforce_state');\n    var states = state.split('.');\n    var prefix = states[0], promptType = states[1];\n    var cli = new Client(prefix);\n    if (res.success) {\n      cli._storeTokens(res.body);\n      location.hash = '';\n    } else {\n      cli._storeError(res.body);\n    }\n    if (promptType === 'popup') { window.close(); }\n    return true;\n  }\n}\n\n/**\n * @private\n */\nfunction checkCallbackResponse() {\n  var params;\n  if (window.location.hash) {\n    params = qs.parse(window.location.hash.substring(1));\n    if (params.access_token) {\n      return { success: true, body: params };\n    }\n  } else if (window.location.search) {\n    params = qs.parse(window.location.search.substring(1));\n    if (params.error) {\n      return { success: false, body: params };\n    }\n  }\n}\n\n/** @private **/\nvar clientIdx = 0;\n\n\n/**\n * @class\n * @todo add document\n */\nvar Client = function(prefix) {\n  this._prefix = prefix || 'jsforce' + clientIdx++;\n  this.connection = null;\n};\n\ninherits(Client, events.EventEmitter);\n\n/**\n *\n */\nClient.prototype.init = function(config) {\n  if (handleCallbackResponse()) { return; }\n  this.config = config;\n  this.connection = new Connection(config);\n  var tokens = this._getTokens();\n  if (tokens) {\n    this.connection.initialize(tokens);\n    var self = this;\n    setTimeout(function() {\n      self.emit('connect', self.connection);\n    }, 10);\n  }\n};\n\n/**\n *\n */\nClient.prototype.login = function(options, callback) {\n  if (_.isFunction(options)) {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  callback = callback || function(){ };\n  _.extend(options, this.config);\n  var self = this;\n  this._prompt(options, callback);\n};\n\n\nClient.prototype._prompt = function(options, callback) {\n  var self = this;\n  var oauth2 = new OAuth2(options);\n  var rand = Math.random().toString(36).substring(2);\n  var state = [ this._prefix, \"popup\", rand ].join('.');\n  localStorage.setItem(\"jsforce_state\", state);\n  var authzUrl = oauth2.getAuthorizationUrl({\n    response_type: 'token',\n    scope : options.scope,\n    state: state\n  });\n  var size = options.size || {};\n  var pw = popupWin(authzUrl, size.width || 912, size.height || 513);\n  if (!pw) {\n    state = [ this._prefix, \"redirect\", rand ].join('.');\n    localStorage.setItem(\"jsforce_state\", state);\n    authzUrl = oauth2.getAuthorizationUrl({\n      response_type: 'token',\n      scope : options.scope,\n      state: state\n    });\n    location.href = authzUrl;\n    return;\n  }\n  self._removeTokens();\n  var pid = setInterval(function() {\n    try {\n      if (!pw || pw.closed) {\n        clearInterval(pid);\n        var tokens = self._getTokens();\n        if (tokens) {\n          self.connection.initialize(tokens);\n          self.emit('connect', self.connection);\n          callback(null, { status: 'connect' });\n        } else {\n          var err = self._getError();\n          if (err) {\n            callback(new Error(err.error + \": \" + err.error_description));\n          } else {\n            callback(null, { status: 'cancel' });\n          }\n        }\n      }\n    } catch(e) {}\n  }, 1000);\n};\n\n/**\n *\n */\nClient.prototype.isLoggedIn = function() {\n  return !!(this.connection && this.connection.accessToken);\n};\n\n/**\n *\n */\nClient.prototype.logout = function() {\n  this.connection.logout();\n  this._removeTokens();\n  this.emit('disconnect');\n};\n\n/**\n * @private\n */\nClient.prototype._getTokens = function() {\n  var regexp = new RegExp(\"(^|;\\\\s*)\"+this._prefix+\"_loggedin=true(;|$)\");\n  if (document.cookie.match(regexp)) {\n    var issuedAt = Number(localStorage.getItem(this._prefix+'_issued_at'));\n    if (Date.now() < issuedAt + 2 * 60 * 60 * 1000) { // 2 hours\n      var userInfo;\n      var idUrl = localStorage.getItem(this._prefix + '_id');\n      if (idUrl) {\n        var ids = idUrl.split('/');\n        userInfo = { id: ids.pop(), organizationId: ids.pop(), url: idUrl };\n      }\n      return {\n        accessToken: localStorage.getItem(this._prefix + '_access_token'),\n        instanceUrl: localStorage.getItem(this._prefix + '_instance_url'),\n        userInfo: userInfo\n      };\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n */\nClient.prototype._storeTokens = function(params) {\n  localStorage.setItem(this._prefix + '_access_token', params.access_token);\n  localStorage.setItem(this._prefix + '_instance_url', params.instance_url);\n  localStorage.setItem(this._prefix + '_issued_at', params.issued_at);\n  localStorage.setItem(this._prefix + '_id', params.id);\n  document.cookie = this._prefix + '_loggedin=true;';\n};\n\n/**\n * @private\n */\nClient.prototype._removeTokens = function() {\n  localStorage.removeItem(this._prefix + '_access_token');\n  localStorage.removeItem(this._prefix + '_instance_url');\n  localStorage.removeItem(this._prefix + '_issued_at');\n  localStorage.removeItem(this._prefix + '_id');\n  document.cookie = this._prefix + '_loggedin=';\n};\n\n/**\n * @private\n */\nClient.prototype._getError = function() {\n  try {\n    var err = JSON.parse(localStorage.getItem(this._prefix + '_error'));\n    localStorage.removeItem(this._prefix + '_error');\n    return err;\n  } catch(e) {}\n};\n\n/**\n * @private\n */\nClient.prototype._storeError = function(err) {\n  localStorage.setItem(this._prefix + '_error', JSON.stringify(err));\n};\n\n/**\n *\n */\nmodule.exports = new Client();\n\nmodule.exports.Client = Client;\n","/*global window, document */\n'use strict';\n\nvar _index = 0;\n\nmodule.exports = {\n\n  supported: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n  createRequest: function(jsonpParam, timeout) {\n    jsonpParam = jsonpParam || 'callback';\n    timeout = timeout || 10000;\n\n    return function(params, callback) {\n      if (params.method.toUpperCase() !== 'GET') {\n        return callback(new Error('JSONP only supports GET request.'));\n      }\n      var cbFuncName = '_jsforce_jsonpCallback_' + (++_index);\n      var callbacks = window;\n      var url = params.url;\n      url += url.indexOf('?')>0 ? '&' : '?';\n      url += jsonpParam + '=' + cbFuncName;\n\n      var script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = url;\n      document.documentElement.appendChild(script);\n\n      var pid = setTimeout(function() {\n        cleanup();\n        callback(new Error(\"JSONP call time out.\"));\n      }, timeout);\n\n      callbacks[cbFuncName] = function(res) {\n        cleanup();\n        callback(null, {\n          statusCode: 200,\n          headers: { \"content-type\": \"application/json\" },\n          body: JSON.stringify(res)\n        });\n      };\n\n      var cleanup = function() {\n        clearTimeout(pid);\n        document.documentElement.removeChild(script);\n        delete callbacks[cbFuncName];\n      };\n    };\n\n  }\n\n};","'use strict';\n\nvar Duplex = require('readable-stream').Duplex;\nvar _ = require('lodash/core');\n\nmodule.exports = function(params, callback) {\n  var xhr = new XMLHttpRequest();\n  xhr.open(params.method, params.url);\n  if (params.headers) {\n    for (var header in params.headers) {\n      xhr.setRequestHeader(header, params.headers[header]);\n    }\n  }\n  xhr.setRequestHeader(\"Accept\", \"*/*\");\n  var response;\n  var str = new Duplex();\n  str._read = function(size) {\n    if (response) {\n      str.push(response.body);\n    }\n  };\n  var bufs = [];\n  var sent = false;\n  str._write = function(chunk, encoding, callback) {\n    bufs.push(chunk.toString(encoding === \"buffer\" ? \"binary\" : encoding));\n    callback();\n  };\n  str.on('finish', function() {\n    if (!sent) {\n      xhr.send(bufs.join(''));\n      sent = true;\n    }\n  });\n  if (params.body || params.body === \"\" || !/^(put|post|patch)$/i.test(params.method)) {\n    xhr.send(params.body);\n    sent = true;\n  }\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState === 4) {\n      var headerNames = getResponseHeaderNames(xhr);\n      var headers = {};\n      _.forEach(headerNames, function(headerName) {\n        if (headerName) {\n          headers[headerName] = xhr.getResponseHeader(headerName);\n        }\n      });\n      response = {\n        statusCode: xhr.status,\n        headers: headers,\n        body: xhr.response\n      };\n      if (!response.statusCode) {\n        response.statusCode = 400;\n        response.body = \"Access Declined\";\n      }\n      if (callback) {\n        callback(null, response, response.body);\n      }\n      str.end();\n    }\n  };\n  return str;\n};\n\nfunction getResponseHeaderNames(xhr) {\n  var headerLines = (xhr.getAllResponseHeaders() || \"\").split(/[\\r\\n]+/);\n  return _.map(headerLines, function(headerLine) {\n    return headerLine.split(/\\s*:/)[0].toLowerCase();\n  });\n}\n","/**\n * @file Manages asynchronous method response cache\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    inherits = require('inherits'),\n    _      = require('lodash/core');\n\n/**\n * Class for managing cache entry\n *\n * @private\n * @class\n * @constructor\n * @template T\n */\nvar CacheEntry = function() {\n  this.fetching = false;\n};\n\ninherits(CacheEntry, events.EventEmitter);\n\n/**\n * Get value in the cache entry\n *\n * @param {Callback.<T>} [callback] - Callback function callbacked the cache entry updated\n * @returns {T|undefined}\n */\nCacheEntry.prototype.get = function(callback) {\n  if (!callback) {\n    return this._value;\n  } else {\n    this.once('value', callback);\n    if (!_.isUndefined(this._value)) {\n      this.emit('value', this._value);\n    }\n  }\n};\n\n/**\n * Set value in the cache entry\n *\n * @param {T} [value] - A value for caching\n */\nCacheEntry.prototype.set = function(value) {\n  this._value = value;\n  this.emit('value', this._value);\n};\n\n/**\n * Clear cached value\n */\nCacheEntry.prototype.clear = function() {\n  this.fetching = false;\n  delete this._value;\n};\n\n\n/**\n * Caching manager for async methods\n *\n * @class\n * @constructor\n */\nvar Cache = function() {\n  this._entries = {};\n};\n\n/**\n * retrive cache entry, or create if not exists.\n *\n * @param {String} [key] - Key of cache entry\n * @returns {CacheEntry}\n */\nCache.prototype.get = function(key) {\n  if (key && this._entries[key]) {\n    return this._entries[key];\n  } else {\n    var entry = new CacheEntry();\n    this._entries[key] = entry;\n    return entry;\n  }\n};\n\n/**\n * clear cache entries prefix matching given key\n * @param {String} [key] - Key prefix of cache entry to clear\n */\nCache.prototype.clear = function(key) {\n  for (var k in this._entries) {\n    if (!key || k.indexOf(key) === 0) {\n      this._entries[k].clear();\n    }\n  }\n};\n\n/**\n * create and return cache key from namespace and serialized arguments.\n * @private\n */\nfunction createCacheKey(namespace, args) {\n  args = Array.prototype.slice.apply(args);\n  return namespace + '(' + _.map(args, function(a){ return JSON.stringify(a); }).join(',') + ')';\n}\n\n/**\n * Enable caching for async call fn to intercept the response and store it to cache.\n * The original async calll fn is always invoked.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeResponseCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  return function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n      callback = null;\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    entry.fetching = true;\n    if (callback) {\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n        callback(err, result);\n      });\n    }\n    var ret, error;\n    try {\n      ret = fn.apply(scope || this, args);\n    } catch(e) {\n      error = e;\n    }\n    if (ret && _.isFunction(ret.then)) { // if the returned value is promise\n      if (!callback) {\n        return ret.then(function(result) {\n          entry.set({ error: undefined, result: result });\n          return result;\n        }, function(err) {\n          entry.set({ error: err, result: undefined });\n          throw err;\n        });\n      } else {\n        return ret;\n      }\n    } else {\n      entry.set({ error: error, result: ret });\n      if (error) { throw error; }\n      return ret;\n    }\n  };\n};\n\n/**\n * Enable caching for async call fn to lookup the response cache first, then invoke original if no cached value.\n *\n * @protected\n * @param {Function} fn - Function to covert cacheable\n * @param {Object} [scope] - Scope of function call\n * @param {Object} [options] - Options\n * @return {Function} - Cached version of function\n */\nCache.prototype.makeCacheable = function(fn, scope, options) {\n  var cache = this;\n  options = options || {};\n  var $fn = function() {\n    var args = Array.prototype.slice.apply(arguments);\n    var callback = args.pop();\n    if (!_.isFunction(callback)) {\n      args.push(callback);\n    }\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, args) :\n              createCacheKey(options.namespace, args);\n    var entry = cache.get(key);\n    if (!_.isFunction(callback)) { // if callback is not given in last arg, return cached result (immediate).\n      var value = entry.get();\n      if (!value) { throw new Error('Function call result is not cached yet.'); }\n      if (value.error) { throw value.error; }\n      return value.result;\n    }\n    entry.get(function(value) {\n      callback(value.error, value.result);\n    });\n    if (!entry.fetching) { // only when no other client is calling function\n      entry.fetching = true;\n      args.push(function(err, result) {\n        entry.set({ error: err, result: result });\n      });\n      fn.apply(scope || this, args);\n    }\n  };\n  $fn.clear = function() {\n    var key = _.isString(options.key) ? options.key :\n              _.isFunction(options.key) ? options.key.apply(scope, arguments) :\n              createCacheKey(options.namespace, arguments);\n    cache.clear(key);\n  };\n  return $fn;\n};\n\n\nmodule.exports = Cache;\n","/*global Buffer */\n/**\n * @file Connection class to keep the API session information and manage requests\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events  = require('events'),\n    inherits = require('inherits'),\n    _       = require('lodash/core'),\n    Promise = require('./promise'),\n    Logger  = require('./logger'),\n    OAuth2  = require('./oauth2'),\n    Query   = require('./query'),\n    SObject = require('./sobject'),\n    QuickAction = require('./quick-action'),\n    HttpApi = require('./http-api'),\n    Transport = require('./transport'),\n    Process = require('./process'),\n    Cache   = require('./cache');\n\nvar defaults = {\n  loginUrl: \"https://login.salesforce.com\",\n  instanceUrl: \"\",\n  version: \"42.0\"\n};\n\n/*\n * Constant of maximum records num in DML operation (update/delete)\n */\nvar MAX_DML_COUNT = 200;\n\n\n/**\n * Connection class to keep the API session information and manage requests\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Object} [options] - Connection options\n * @param {OAuth2|Object} [options.oauth2] - OAuth2 instance or options to be passed to OAuth2 constructor\n * @param {String} [options.logLevel] - Output logging level (DEBUG|INFO|WARN|ERROR|FATAL)\n * @param {String} [options.version] - Salesforce API Version (without \"v\" prefix)\n * @param {Number} [options.maxRequest] - Max number of requests allowed in parallel call\n * @param {String} [options.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {String} [options.proxyUrl] - Cross-domain proxy server URL, used in browser client, non Visualforce app.\n * @param {String} [options.httpProxy] - URL of HTTP proxy server, used in server client.\n * @param {Object} [options.callOptions] - Call options used in each SOAP/REST API request. See manual.\n */\nvar Connection = module.exports = function(options) {\n  options = options || {};\n\n  this._logger = new Logger(options.logLevel);\n\n  var oauth2 = options.oauth2 || {\n    loginUrl : options.loginUrl,\n    clientId : options.clientId,\n    clientSecret : options.clientSecret,\n    redirectUri : options.redirectUri,\n    proxyUrl: options.proxyUrl,\n    httpProxy: options.httpProxy\n  };\n\n  /**\n   * OAuth2 object\n   * @member {OAuth2} Connection#oauth2\n   */\n  this.oauth2 = oauth2 = oauth2 instanceof OAuth2 ? oauth2 : new OAuth2(oauth2);\n\n  this.loginUrl = options.loginUrl || oauth2.loginUrl || defaults.loginUrl;\n  this.version = options.version || defaults.version;\n  this.maxRequest = options.maxRequest || this.maxRequest || 10;\n\n  /** @private */\n  if (options.proxyUrl) {\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\n  } else if (options.httpProxy) {\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\n  } else {\n    this._transport = new Transport();\n  }\n\n  this.callOptions = options.callOptions;\n\n  /*\n   * Fire connection:new event to notify jsforce plugin modules\n   */\n  var jsforce = require('./core');\n  jsforce.emit('connection:new', this);\n\n  /**\n   * Streaming API object\n   * @member {Streaming} Connection#streaming\n   */\n  // this.streaming = new Streaming(this);\n  /**\n   * Bulk API object\n   * @member {Bulk} Connection#bulk\n   */\n  // this.bulk = new Bulk(this);\n  /**\n   * Tooling API object\n   * @member {Tooling} Connection#tooling\n   */\n  // this.tooling = new Tooling(this);\n  /**\n   * Analytics API object\n   * @member {Analytics} Connection#analytics\n   */\n  // this.analytics = new Analytics(this);\n  /**\n   * Chatter API object\n   * @member {Chatter} Connection#chatter\n   */\n  // this.chatter = new Chatter(this);\n  /**\n   * Metadata API object\n   * @member {Metadata} Connection#metadata\n   */\n  // this.metadata = new Metadata(this);\n\n  /**\n   * SOAP API object\n   * @member {SoapApi} Connection#soap\n   */\n  // this.soap = new SoapApi(this);\n\n  /**\n   * Apex REST API object\n   * @member {Apex} Connection#apex\n   */\n  // this.apex = new Apex(this);\n\n  /**\n   * @member {Process} Connection#process\n   */\n  this.process = new Process(this);\n\n  /**\n   * Cache object for result\n   * @member {Cache} Connection#cache\n   */\n  this.cache = new Cache();\n\n  // Allow to delegate connection refresh to outer function\n  var self = this;\n  var refreshFn = options.refreshFn;\n  if (!refreshFn && this.oauth2.clientId) {\n    refreshFn = oauthRefreshFn;\n  }\n  if (refreshFn) {\n    this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, refreshFn);\n  }\n\n  var cacheOptions = {\n    key: function(type) { return type ? \"describe.\" + type : \"describe\"; }\n  };\n  this.describe$ = this.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = this.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n  this.describeSObject$ = this.describe$;\n  this.describeSObject = this.describe;\n\n  cacheOptions = { key: 'describeGlobal' };\n  this.describeGlobal$ = this.cache.makeCacheable(this.describeGlobal, this, cacheOptions);\n  this.describeGlobal = this.cache.makeResponseCacheable(this.describeGlobal, this, cacheOptions);\n\n  this.initialize(options);\n};\n\ninherits(Connection, events.EventEmitter);\n\n/**\n * Initialize connection.\n *\n * @protected\n * @param {Object} options - Initialization options\n * @param {String} [options.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [options.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [options.accessToken] - Salesforce OAuth2 access token\n * @param {String} [options.sessionId] - Salesforce session ID\n * @param {String} [options.refreshToken] - Salesforce OAuth2 refresh token\n * @param {String|Object} [options.signedRequest] - Salesforce Canvas signed request (Raw Base64 string, JSON string, or deserialized JSON)\n * @param {UserInfo} [options.userInfo] - Logged in user information\n */\nConnection.prototype.initialize = function(options) {\n  if (!options.instanceUrl && options.serverUrl) {\n    options.instanceUrl = options.serverUrl.split('/').slice(0, 3).join('/');\n  }\n  this.instanceUrl = options.instanceUrl || options.serverUrl || this.instanceUrl || defaults.instanceUrl;\n\n  this.accessToken = options.sessionId || options.accessToken || this.accessToken;\n  this.refreshToken = options.refreshToken || this.refreshToken;\n  if (this.refreshToken && !this._refreshDelegate) {\n    throw new Error(\"Refresh token is specified without oauth2 client information or refresh function\");\n  }\n\n  this.signedRequest = options.signedRequest && parseSignedRequest(options.signedRequest);\n  if (this.signedRequest) {\n    this.accessToken = this.signedRequest.client.oauthToken;\n    if (Transport.CanvasTransport.supported) {\n      this._transport = new Transport.CanvasTransport(this.signedRequest);\n    }\n  }\n\n  if (options.userInfo) {\n    this.userInfo = options.userInfo;\n  }\n\n  this.limitInfo = {};\n\n  this.sobjects = {};\n  this.cache.clear();\n  this.cache.get('describeGlobal').on('value', _.bind(function(res) {\n    if (res.result) {\n      var types = _.map(res.result.sobjects, function(so) { return so.name; });\n      types.forEach(this.sobject, this);\n    }\n  }, this));\n\n  if (this.tooling) {\n    this.tooling.initialize();\n  }\n\n  this._sessionType = options.sessionId ? \"soap\" : \"oauth2\";\n\n};\n\n/** @private **/\nfunction oauthRefreshFn(conn, callback) {\n  conn.oauth2.refreshToken(conn.refreshToken, function(err, res) {\n    if (err) { return callback(err); }\n    var userInfo = parseIdUrl(res.id);\n    conn.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo : userInfo\n    });\n    callback(null, res.access_token, res);\n  });\n}\n\n/** @private **/\nfunction parseSignedRequest(sr) {\n  if (_.isString(sr)) {\n    if (sr[0] === '{') { // might be JSON\n      return JSON.parse(sr);\n    } else { // might be original base64-encoded signed request\n      var msg = sr.split('.').pop(); // retrieve latter part\n      var json = new Buffer(msg, 'base64').toString('utf-8');\n      return JSON.parse(json);\n    }\n    return null;\n  }\n  return sr;\n}\n\n\n/** @private **/\nConnection.prototype._baseUrl = function() {\n  return [ this.instanceUrl, \"services/data\", \"v\" + this.version ].join('/');\n};\n\n/**\n * Convert path to absolute url\n * @private\n */\nConnection.prototype._normalizeUrl = function(url) {\n  if (url[0] === '/') {\n    if (url.indexOf('/services/') === 0) {\n      return this.instanceUrl + url;\n    } else {\n      return this._baseUrl() + url;\n    }\n  } else {\n    return url;\n  }\n};\n\n/**\n * Send REST API request with given HTTP request info, with connected session information.\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String|Object} request - HTTP request object or URL to GET request\n * @param {String} request.method - HTTP method URL to send HTTP request\n * @param {String} request.url - URL to send HTTP request\n * @param {Object} [request.headers] - HTTP request headers in hash object (key-value)\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.request = function(request, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var self = this;\n\n  // if request is simple string, regard it as url in GET method\n  if (_.isString(request)) {\n    request = { method: 'GET', url: request };\n  }\n  // if url is given in relative path, prepend base url or instance url before.\n  request.url = this._normalizeUrl(request.url);\n\n  var httpApi = new HttpApi(this, options);\n\n  // log api usage and its quota\n  httpApi.on('response', function(response) {\n    if (response.headers && response.headers[\"sforce-limit-info\"]) {\n      var apiUsage = response.headers[\"sforce-limit-info\"].match(/api\\-usage=(\\d+)\\/(\\d+)/);\n      if (apiUsage) {\n        self.limitInfo = {\n          apiUsage: {\n            used: parseInt(apiUsage[1], 10),\n            limit: parseInt(apiUsage[2], 10)\n          }\n        };\n      }\n    }\n  });\n  return httpApi.request(request).thenCall(callback);\n};\n\n/**\n * Send HTTP GET request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP GET\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestGet = function(url, options, callback) {\n  var request = {\n    method: \"GET\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/**\n * Send HTTP POST request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP POST\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPost = function(url, body, options, callback) {\n  var request = {\n    method: \"POST\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PUT request with JSON body, with connected session information\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PUT\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPut = function(url, body, options, callback) {\n  var request = {\n    method: \"PUT\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP PATCH request with JSON body\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP PATCH\n * @param {Object} body - Any JS object which can be serialized to JSON\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestPatch = function(url, body, options, callback) {\n  var request = {\n    method: \"PATCH\",\n    url: url,\n    body: JSON.stringify(body),\n    headers: { \"content-type\": \"application/json\" }\n  };\n  return this.request(request, options, callback);\n};\n\n/**\n * Send HTTP DELETE request\n *\n * Endpoint URL can be absolute URL ('https://na1.salesforce.com/services/data/v32.0/sobjects/Account/describe')\n * , relative path from root ('/services/data/v32.0/sobjects/Account/describe')\n * , or relative path from version root ('/sobjects/Account/describe').\n *\n * @param {String} url - Endpoint URL to request HTTP DELETE\n * @param {Object} [options] - HTTP API request options\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nConnection.prototype.requestDelete = function(url, options, callback) {\n  var request = {\n    method: \"DELETE\",\n    url: url\n  };\n  return this.request(request, options, callback);\n};\n\n\n/** @private */\nfunction formatDate(date) {\n  function pad(number) {\n    if (number < 10) {\n      return '0' + number;\n    }\n    return number;\n  }\n\n  return date.getUTCFullYear() +\n    '-' + pad(date.getUTCMonth() + 1) +\n    '-' + pad(date.getUTCDate()) +\n    'T' + pad(date.getUTCHours()) +\n    ':' + pad(date.getUTCMinutes()) +\n    ':' + pad(date.getUTCSeconds()) +\n    '+00:00';\n}\n\n\n/** @private **/\nfunction parseIdUrl(idUrl) {\n  var idUrls = idUrl.split(\"/\");\n  var userId = idUrls.pop(), orgId = idUrls.pop();\n  return {\n    id: userId,\n    organizationId: orgId,\n    url: idUrl\n  };\n}\n\n/**\n * @callback Callback\n * @type {Function}\n * @param {Error} err - Callback error\n * @param {T} response - Callback response\n * @template T\n */\n\n/**\n * @typedef {Object} QueryResult\n * @prop {Boolean} done - Flag if the query is fetched all records or not\n * @prop {String} [nextRecordsUrl] - URL locator for next record set, (available when done = false)\n * @prop {Number} totalSize - Total size for query\n * @prop {Array.<Record>} [records] - Array of records fetched\n */\n\n/**\n * Execute query by using SOQL\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.query = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Execute query by using SOQL, including deleted records\n *\n * @param {String} soql - SOQL string\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryAll = function(soql, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, soql, options);\n  query.scanAll(true);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/**\n * Query next record set by using query locator\n *\n * @param {String} locator - Next record set locator\n * @param {Object} [options] - Query options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<QueryResult>} [callback] - Callback function\n * @returns {Query.<QueryResult>}\n */\nConnection.prototype.queryMore = function(locator, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  var query = new Query(this, { locator: locator }, options);\n  if (callback) {\n    query.run(callback);\n  }\n  return query;\n};\n\n/** @private */\nConnection.prototype._ensureVersion = function(majorVersion) {\n  var versions = this.version.split('.');\n  return parseInt(versions[0], 10) >= majorVersion;\n}\n\n/**\n * Retrieve specified records\n *\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Array.<String>} [options.fields] - Fetching field names in retrieving record\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nConnection.prototype.retrieve = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(ids) ?\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\n        this._retrieveMany(type, ids, options) :\n        this._retrieveParallel(type, ids, options)) :\n      this._retrieveSingle(type, ids, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._retrieveSingle = function(type, id, options) {\n  if (!id) {\n    return Promise.reject(new Error('Invalid record ID. Specify valid record ID value'));\n  }\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\n  if (options.fields) {\n    url += '?fields=' + options.fields.join(',');\n  }\n  return this.request({\n    method: 'GET',\n    url: url,\n    headers: options.headers,\n  });\n};\n\n/** @private */\nConnection.prototype._retrieveParallel = function(type, ids, options) {\n  if (ids.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    ids.map(function(id) {\n      return self._retrieveSingle(type, id, options).catch(function(err) {\n        if (options.allOrNone || err.errorCode !== 'NOT_FOUND') {\n          throw err;\n        }\n        return null;\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._retrieveMany = function(type, ids, options) {\n  if (ids.length === 0) {\n    return Promise.resolve([]);\n  }\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\", type ].join('/');\n  var self = this;\n  return (\n    options.fields ?\n      Promise.resolve(options.fields) :\n      new Promise(function(resolve, reject) {\n        self.describe$(type, function(err, so) {\n          if (err) {\n            reject(err);\n          } else {\n            var fields = so.fields.map(function(field) {\n              return field.name;\n            });\n            resolve(fields);\n          }\n        });\n      })\n  ).then(function(fields) {\n    return self.request({\n      method : 'POST',\n      url : url,\n      body : JSON.stringify({\n        ids : ids,\n        fields : fields\n      }),\n      headers : _.defaults(options.headers || {}, {\n        \"Content-Type\" : \"application/json\"\n      })\n    });\n  });\n};\n\n\n/**\n * @typedef RecordResult\n * @prop {Boolean} success - The result is succeessful or not\n * @prop {String} [id] - Record ID\n * @prop {Array.<String>} [errors] - Errors (available when success = false)\n */\n\n/** @private */\nConnection.prototype._toRecordResult = function(id, err) {\n  var error = {\n    statusCode: err.errorCode,\n    message: err.message\n  };\n  if (err.content) { error.content = err.content; } // preserve External id duplication message\n  if (err.fields) { error.fields = err.fields; } // preserve DML exception occurred fields\n  var result = {\n    success: false,\n    errors: [error]\n  };\n  if (id) { result.id = id; }\n  return result;\n};\n\n/**\n * Synonym of Connection#create()\n *\n * @method Connection#insert\n * @param {String} type - SObject Type\n * @param {Object|Array.<Object>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method Connection#create\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.insert =\nConnection.prototype.create = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(records) ?\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\n        this._createMany(type, records, options) :\n        this._createParallel(type, records, options)) :\n      this._createSingle(type, records, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._createSingle = function(type, record, options) {\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n  if (!sobjectType) {\n    return Promise.reject(new Error('No SObject Type defined in record'));\n  }\n  record = _.clone(record);\n  delete record.Id;\n  delete record.type;\n  delete record.attributes;\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType ].join('/');\n  return this.request({\n    method : 'POST',\n    url : url,\n    body : JSON.stringify(record),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/** @private */\nConnection.prototype._createParallel = function(type, records, options) {\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    records.map(function(record) {\n      return self._createSingle(type, record, options).catch(function(err) {\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toSaveResult(null, err);\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._createMany = function(type, records, options) {\n  if (records.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._createMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._createMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  records = _.map(records, function(record) {\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n    if (!sobjectType) {\n      return Promise.reject(new Error('No SObject Type defined in record'));\n    }\n    record = _.clone(record);\n    delete record.Id;\n    delete record.type;\n    record.attributes = { type : sobjectType };\n    return record;\n  });\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\n  return this.request({\n    method : 'POST',\n    url : url,\n    body : JSON.stringify({\n      allOrNone : options.allOrNone || false,\n      records : records\n    }),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/**\n * Update records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when records goes over the max num of collection API (=200), records are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.update = function(type, records, options, callback) {\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(records) ?\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\n        this._updateMany(type, records, options) :\n        this._updateParallel(type, records, options)) :\n      this._updateSingle(type, records, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._updateSingle = function(type, record, options) {\n  var id = record.Id;\n  if (!id) {\n    return Promise.reject(new Error('Record id is not found in record.'));\n  }\n  var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n  if (!sobjectType) {\n    return Promise.reject(new Error('No SObject Type defined in record'));\n  }\n  record = _.clone(record);\n  delete record.Id;\n  delete record.type;\n  delete record.attributes;\n  var url = [ this._baseUrl(), \"sobjects\", sobjectType, id ].join('/');\n  return this.request({\n    method : 'PATCH',\n    url : url,\n    body : JSON.stringify(record),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  }, {\n    noContentResponse: { id : id, success : true, errors : [] }\n  });\n};\n\n/** @private */\nConnection.prototype._updateParallel = function(type, records, options) {\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    records.map(function(record) {\n      return self._updateSingle(type, record, options).catch(function(err) {\n        // be aware that allOrNone in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toSaveResult(record.Id, err);\n      });\n    })\n  );\n};\n\n/** @private */\nConnection.prototype._updateMany = function(type, records, options) {\n  if (records.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (records.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._updateMany(type, records.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._updateMany(type, records.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  records = _.map(records, function(record) {\n    var id = record.Id;\n    if (!id) {\n      throw new Error('Record id is not found in record.');\n    }\n    var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n    if (!sobjectType) {\n      throw new Error('No SObject Type defined in record');\n    }\n    record = _.clone(record);\n    delete record.Id;\n    record.id = id;\n    delete record.type;\n    record.attributes = { type : sobjectType };\n    return record;\n  });\n  var url = [ this._baseUrl(), \"composite\", \"sobjects\" ].join('/');\n  return this.request({\n    method : 'PATCH',\n    url : url,\n    body : JSON.stringify({\n      allOrNone : options.allOrNone || false,\n      records : records\n    }),\n    headers : _.defaults(options.headers || {}, {\n      \"Content-Type\" : \"application/json\"\n    })\n  });\n};\n\n/**\n * Upsert records\n *\n * @param {String} type - SObject Type\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype.upsert = function(type, records, extIdField, options, callback) {\n  // You can omit \"type\" argument, when the record includes type information.\n  if (!_.isString(type)) {\n    // reverse order\n    callback = options;\n    options = extIdField;\n    extIdField = records;\n    records = type;\n    type = null;\n  }\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var isArray = _.isArray(records);\n  records = isArray ? records : [ records ];\n  if (records.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\")).thenCall(callback);\n  }\n  return Promise.all(\n    _.map(records, function(record) {\n      var sobjectType = type || (record.attributes && record.attributes.type) || record.type;\n      var extId = record[extIdField];\n      record = _.clone(record);\n      delete record[extIdField];\n      delete record.type;\n      delete record.attributes;\n\n      var url = [ self._baseUrl(), \"sobjects\", sobjectType, extIdField, extId ].join('/');\n      return self.request({\n        method : 'PATCH',\n        url : url,\n        body : JSON.stringify(record),\n        headers : _.defaults(options.headers || {}, {\n          \"Content-Type\" : \"application/json\"\n        })\n      }, {\n        noContentResponse: { success : true, errors : [] }\n      })\n      .catch(function(err) {\n        // be aware that `allOrNone` option in upsert method will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (!isArray || options.allOrNone || !err.errorCode) { throw err; }\n        return this._toSaveResult(null, err);\n      })\n    })\n  ).then(function(results) {\n    return !isArray && _.isArray(results) ? results[0] : results;\n  }).thenCall(callback);\n};\n\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#delete\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of Connection#destroy()\n *\n * @method Connection#del\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method Connection#destroy\n * @param {String} type - SObject Type\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Boolean} [options.allOrNone] - If true, any failed records in a call cause all changes for the call to be rolled back\n * @param {Boolean} [options.allowRecursive] - If true, when ids goes over the max num of collection API (=200), ids are divided into several chunks and requested recursively.\n * @param {Object} [options.headers] - Additional HTTP request headers sent in retrieve request\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nConnection.prototype[\"delete\"] =\nConnection.prototype.del =\nConnection.prototype.destroy = function(type, ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  return (\n    _.isArray(ids) ?\n      (this._ensureVersion(42) ? // check the version whether SObject collection API is supported (42.0)\n        this._destroyMany(type, ids, options) :\n        this._destroyParallel(type, ids, options)) :\n      this._destroySingle(type, ids, options)\n  ).thenCall(callback);\n};\n\n/** @private */\nConnection.prototype._destroySingle = function(type, id, options) {\n  var url = [ this._baseUrl(), \"sobjects\", type, id ].join('/');\n  return this.request({\n    method : 'DELETE',\n    url : url,\n    headers: options.headers || null\n  }, {\n    noContentResponse: { id : id, success : true, errors : [] }\n  });\n};\n\n/** @private */\nConnection.prototype._destroyParallel = function(type, ids, options) {\n  if (ids.length > this.maxRequest) {\n    return Promise.reject(new Error(\"Exceeded max limit of concurrent call\"));\n  }\n  var self = this;\n  return Promise.all(\n    ids.map(function(id) {\n      return self._destroySingle(type, id, options).catch(function(err) {\n        // be aware that `allOrNone` option in parallel mode will not revert the other successful requests\n        // it only raises error when met at least one failed request.\n        if (options.allOrNone || !err.errorCode) {\n          throw err;\n        }\n        return this._toSaveResult(id, err);\n      });\n    })\n  );\n};\n\n\n/** @private */\nConnection.prototype._destroyMany = function(type, ids, options) {\n  if (ids.length === 0) {\n    return Promise.resolve([]);\n  }\n  if (ids.length > MAX_DML_COUNT && options.allowRecursive) {\n    var self = this;\n    return self._destroyMany(type, ids.slice(0, MAX_DML_COUNT), options).then(function(rets1) {\n      return self._destroyMany(type, ids.slice(MAX_DML_COUNT), options).then(function(rets2) {\n        return rets1.concat(rets2);\n      });\n    });\n  }\n  var url = [ this._baseUrl(), \"composite\", \"sobjects?ids=\" ].join('/') + ids.join(',');\n  if (options.allOrNone) {\n    url += '&allOrNone=true';\n  }\n  return this.request({\n    method : 'DELETE',\n    url : url,\n    headers: options.headers || null\n  });\n};\n\n/**\n * Execute search by SOSL\n *\n * @param {String} sosl - SOSL string\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.search = function(sosl, callback) {\n  var url = this._baseUrl() + \"/search?q=\" + encodeURIComponent(sosl);\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Result returned by describeSObject call\n *\n * @typedef {Object} DescribeSObjectResult\n */\n/**\n * Synonym of Connection#describe()\n *\n * @method Connection#describeSObject\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\n/**\n * Describe SObject metadata\n *\n * @method Connection#describe\n * @param {String} type - SObject Type\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nConnection.prototype.describe =\nConnection.prototype.describeSObject = function(type, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"describe\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Result returned by describeGlobal call\n *\n * @typedef {Object} DescribeGlobalResult\n */\n/**\n * Describe global SObjects\n *\n * @param {Callback.<DescribeGlobalResult>} [callback] - Callback function\n * @returns {Promise.<DescribeGlobalResult>}\n */\nConnection.prototype.describeGlobal = function(callback) {\n  var url = this._baseUrl() + \"/sobjects\";\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * Get SObject instance\n *\n * @param {String} type - SObject Type\n * @returns {SObject}\n */\nConnection.prototype.sobject = function(type) {\n  this.sobjects = this.sobjects || {};\n  var sobject = this.sobjects[type] =\n    this.sobjects[type] || new SObject(this, type);\n  return sobject;\n};\n\n/**\n * Get identity information of current user\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<IdentityInfo>} [callback] - Callback function\n * @returns {Promise.<IdentityInfo>}\n */\nConnection.prototype.identity = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var self = this;\n  var idUrl = this.userInfo && this.userInfo.url;\n  return Promise.resolve(\n    idUrl ?\n    { identity: idUrl } :\n    this.request({ method: 'GET', url: this._baseUrl(), headers: options.headers })\n  ).then(function(res) {\n    var url = res.identity;\n    url += '?format=json&oauth_token=' + encodeURIComponent(self.accessToken);\n    var transport = Transport.JsonpTransport.supported ?\n      new Transport.JsonpTransport('callback') :\n      undefined;\n    return self.request({ method: 'GET', url: url }, { transport: transport });\n  }).then(function(res) {\n    self.userInfo = {\n      id: res.user_id,\n      organizationId: res.organization_id,\n      url: res.id\n    };\n    return res;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef UserInfo\n * @prop {String} id - User ID\n * @prop {String} organizationId - Organization ID\n * @prop {String} url - Identity URL of the user\n */\n\n/**\n * Authorize (using oauth2 web server flow)\n *\n * @param {String} code - Authorization code\n * @param {Object} [params] - Optional parameters to send in token retrieval\n * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.authorize = function(code, params, callback) {\n  if (typeof params === 'function') {\n    callback = params;\n    params = {};\n  }\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.requestToken(code, params).then(function(res) {\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      refreshToken : res.refresh_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n\n/**\n * Login to Salesforce\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.login = function(username, password, callback) {\n  // register refreshDelegate for session expiration\n  this._refreshDelegate = new HttpApi.SessionRefreshDelegate(this, createUsernamePasswordRefreshFn(username, password));\n  if (this.oauth2 && this.oauth2.clientId && this.oauth2.clientSecret) {\n    return this.loginByOAuth2(username, password, callback);\n  } else {\n    return this.loginBySoap(username, password, callback);\n  }\n};\n\n/** @private **/\nfunction createUsernamePasswordRefreshFn(username, password) {\n  return function(conn, callback) {\n    conn.login(username, password, function(err) {\n      if (err) { return callback(err); }\n      callback(null, conn.accessToken);\n    });\n  };\n}\n\n/**\n * Login by OAuth2 username & password flow\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginByOAuth2 = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  return this.oauth2.authenticate(username, password).then(function(res) {\n    var userInfo = parseIdUrl(res.id);\n    self.initialize({\n      instanceUrl : res.instance_url,\n      accessToken : res.access_token,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userInfo.id + \", org id = \" + userInfo.organizationId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * @private\n */\nfunction esc(str) {\n  return str && String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;')\n                           .replace(/>/g, '&gt;').replace(/\"/g, '&quot;');\n}\n\n/**\n * Login by SOAP web service API\n *\n * @param {String} username - Salesforce username\n * @param {String} password - Salesforce password (and security token, if required)\n * @param {Callback.<UserInfo>} [callback] - Callback function\n * @returns {Promise.<UserInfo>}\n */\nConnection.prototype.loginBySoap = function(username, password, callback) {\n  var self = this;\n  var logger = this._logger;\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header/>',\n      '<se:Body>',\n        '<login xmlns=\"urn:partner.soap.sforce.com\">',\n          '<username>' + esc(username) + '</username>',\n          '<password>' + esc(password) + '</password>',\n        '</login>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  var soapLoginEndpoint = [ this.loginUrl, \"services/Soap/u\", this.version ].join('/');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : soapLoginEndpoint,\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    var m;\n    if (response.statusCode >= 400) {\n      m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n    logger.debug(\"SOAP response = \" + response.body);\n    m = response.body.match(/<serverUrl>([^<]+)<\\/serverUrl>/);\n    var serverUrl = m && m[1];\n    m = response.body.match(/<sessionId>([^<]+)<\\/sessionId>/);\n    var sessionId = m && m[1];\n    m = response.body.match(/<userId>([^<]+)<\\/userId>/);\n    var userId = m && m[1];\n    m = response.body.match(/<organizationId>([^<]+)<\\/organizationId>/);\n    var orgId = m && m[1];\n    var idUrl = soapLoginEndpoint.split('/').slice(0, 3).join('/');\n    idUrl += \"/id/\" + orgId + \"/\" + userId;\n    var userInfo = {\n      id: userId,\n      organizationId: orgId,\n      url: idUrl\n    };\n    self.initialize({\n      serverUrl: serverUrl.split('/').slice(0, 3).join('/'),\n      sessionId: sessionId,\n      userInfo: userInfo\n    });\n    logger.debug(\"<login> completed. user id = \" + userId + \", org id = \" + orgId);\n    return userInfo;\n\n  }).thenCall(callback);\n\n};\n\n/**\n * Logout the current session \n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logout = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n\n  if (this._sessionType === \"oauth2\") {\n    return this.logoutByOAuth2(revoke, callback);\n  } else {\n    return this.logoutBySoap(revoke, callback);\n  }\n};\n\n/**\n * Logout the current session by revoking access token via OAuth2 session revoke\n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutByOAuth2 = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n  var self = this;\n  var logger = this._logger;\n\n  return this.oauth2.revokeToken(revoke ? this.refreshToken : this.accessToken).then(function() {\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n  }).thenCall(callback);\n};\n\n\n/**\n * Logout the session by using SOAP web service API\n *\n * @param {Boolean} [revoke] - Revokes API Access if set to true\n * @param {Callback.<undefined>} [callback] - Callback function\n * @returns {Promise.<undefined>}\n */\nConnection.prototype.logoutBySoap = function(revoke, callback) {\n  if (typeof revoke === 'function') {\n    callback = revoke;\n    revoke = false;\n  }\n  var self = this;\n  var logger = this._logger;\n\n  var body = [\n    '<se:Envelope xmlns:se=\"http://schemas.xmlsoap.org/soap/envelope/\">',\n      '<se:Header>',\n        '<SessionHeader xmlns=\"urn:partner.soap.sforce.com\">',\n          '<sessionId>' + esc(revoke ? this.refreshToken : this.accessToken) + '</sessionId>',\n        '</SessionHeader>',\n      '</se:Header>',\n      '<se:Body>',\n        '<logout xmlns=\"urn:partner.soap.sforce.com\"/>',\n      '</se:Body>',\n    '</se:Envelope>'\n  ].join('');\n\n  return this._transport.httpRequest({\n    method : 'POST',\n    url : [ this.instanceUrl, \"services/Soap/u\", this.version ].join('/'),\n    body : body,\n    headers : {\n      \"Content-Type\" : \"text/xml\",\n      \"SOAPAction\" : '\"\"'\n    }\n  }).then(function(response) {\n    logger.debug(\"SOAP statusCode = \" + response.statusCode + \", response = \" + response.body);\n    if (response.statusCode >= 400) {\n      var m = response.body.match(/<faultstring>([^<]+)<\\/faultstring>/);\n      var faultstring = m && m[1];\n      throw new Error(faultstring || response.body);\n    }\n\n    // Destroy the session bound to this connection\n    self.accessToken = null;\n    self.userInfo = null;\n    self.refreshToken = null;\n    self.instanceUrl = null;\n    self.cache.clear();\n\n    // nothing useful returned by logout API, just return\n    return undefined;\n\n  }).thenCall(callback);\n};\n\n/**\n * List recently viewed records\n *\n * @param {String} [type] - SObject type\n * @param {Number} [limit] - Limit num to fetch\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nConnection.prototype.recent = function(type, limit, callback) {\n  if (!_.isString(type)) {\n    callback = limit;\n    limit = type;\n    type = undefined;\n  }\n  if (!_.isNumber(limit)) {\n    callback = limit;\n    limit = undefined;\n  }\n  var url;\n  if (type) {\n    url = [ this._baseUrl(), \"sobjects\", type ].join('/');\n    return this.request(url).then(function(res) {\n      return limit ? res.recentItems.slice(0, limit) : res.recentItems;\n    }).thenCall(callback);\n  } else {\n    url = this._baseUrl() + \"/recent\";\n    if (limit) {\n      url += \"?limit=\" + limit;\n    }\n    return this.request(url).thenCall(callback);\n  }\n\n};\n\n/**\n * @typedef {Object} UpdatedRecordsInfo\n * @prop {String} latestDateCovered - The timestamp of the last date covered.\n * @prop {Array.<String>} ids - Updated record IDs.\n */\n\n/**\n * Retrieve updated records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nConnection.prototype.updated = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"updated\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} DeletedRecordsInfo\n * @prop {String} earliestDateAvailable - The timestamp of the earliest date available\n * @prop {String} latestDateCovered - The timestamp of the last date covered\n * @prop {Array.<Object>} deletedRecords - Updated records\n * @prop {String} deletedRecords.id - Record ID\n * @prop {String} deletedRecords.deletedDate - The timestamp when this record was deleted\n */\n\n/**\n * Retrieve deleted records\n *\n * @param {String} type - SObject Type\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nConnection.prototype.deleted = function (type, start, end, callback) {\n  var url = [ this._baseUrl(), \"sobjects\", type, \"deleted\" ].join('/');\n\n  if (typeof start === 'string') {\n    start = new Date(start);\n  }\n\n  if (start instanceof Date) {\n    start = formatDate(start);\n  }\n\n  if (start) {\n    url += \"?start=\" + encodeURIComponent(start);\n  }\n\n  if (typeof end === 'string') {\n    end = new Date(end);\n  }\n\n  if (end instanceof Date) {\n    end = formatDate(end);\n  }\n\n  if (end) {\n    url += \"&end=\" + encodeURIComponent(end);\n  }\n\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} TabsInfo - See the API document for detail structure\n */\n\n/**\n * Returns a list of all tabs\n *\n * @param {Callback.<TabsInfo>} [callback] - Callback function\n * @returns {Promise.<TabsInfo>}\n */\nConnection.prototype.tabs = function(callback) {\n  var url = [ this._baseUrl(), \"tabs\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} LimitsInfo - See the API document for detail structure\n */\n\n/**\n * Returns curren system limit in the organization\n *\n * @param {Callback.<LimitsInfo>} [callback] - Callback function\n * @returns {Promise.<LimitsInfo>}\n */\nConnection.prototype.limits = function(callback) {\n  var url = [ this._baseUrl(), \"limits\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} ThemeInfo - See the API document for detail structure\n */\n\n/**\n * Returns a theme info\n *\n * @param {Callback.<ThemeInfo>} [callback] - Callback function\n * @returns {Promise.<ThemeInfo>}\n */\nConnection.prototype.theme = function(callback) {\n  var url = [ this._baseUrl(), \"theme\" ].join('/');\n  return this.request(url).thenCall(callback);\n};\n\n/**\n * Returns all registered global quick actions\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nConnection.prototype.quickActions = function(callback) {\n  return this.request(\"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified global quick aciton\n *\n * @param {String} actionName - Name of the global quick action\n * @returns {QuickAction}\n */\nConnection.prototype.quickAction = function(actionName) {\n  return new QuickAction(this, \"/quickActions/\" + actionName);\n};\n","/**\n * @file JSforce Core\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar jsforce = module.exports = new EventEmitter();\njsforce.VERSION = require('./VERSION');\njsforce.Connection = require('./connection');\njsforce.OAuth2 = require('./oauth2');\njsforce.Date = jsforce.SfDate = require(\"./date\");\njsforce.RecordStream = require('./record-stream');\njsforce.Promise = require('./promise');\njsforce.require = require('./require');\n","'use strict';\n\nvar _ = require('lodash/core'),\n    csvParse = require('csv-parse'),\n    csvParseSync = require('csv-parse/lib/sync'),\n    csvStringify = require('csv-stringify'),\n    csvStringifySync = require('csv-stringify/lib/sync');\n\n/**\n * @private\n */\nfunction parseCSV(str, options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParseSync(str, options);\n}\n\n/**\n * @private\n */\nfunction toCSV(records, options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringifySync(records, options);\n}\n\n/**\n * @private\n */\nfunction parseCSVStream(options) {\n  options = _.extend({}, options, { columns: true });\n  return csvParse(options);\n}\n\n/**\n * @private\n */\nfunction serializeCSVStream(options) {\n  options = _.extend({}, options, { header: true });\n  return csvStringify(options);\n}\n\n\n/**\n * @protected\n */\nmodule.exports = {\n  parseCSV: parseCSV,\n  toCSV: toCSV,\n  parseCSVStream: parseCSVStream,\n  serializeCSVStream: serializeCSVStream\n};\n","'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A date object to keep Salesforce date literal\n *\n * @class\n * @constructor\n * @see http://www.salesforce.com/us/developer/docs/soql_sosl/Content/sforce_api_calls_soql_select_dateformats.htm\n */\nvar SfDate = module.exports = function(literal) {\n  this._literal = literal;\n};\n\n/**\n * Returns literal when converted to string\n *\n * @override\n */\nSfDate.prototype.toString =\nSfDate.prototype.toJSON = function() { return this._literal; };\n\n\n/** @private **/\nfunction zeropad(n) { return (n<10 ? \"0\" : \"\") + n; }\n\n/**\n * Convert JavaScript date object to ISO8601 Date format (e.g. 2012-10-31)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 date format\n */\nSfDate.toDateLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getFullYear();\n  var mm = date.getMonth()+1;\n  var dd = date.getDate();\n  var dstr = [ yy, zeropad(mm), zeropad(dd) ].join(\"-\");\n  return new SfDate(dstr);\n};\n\n/**\n * Convert JavaScript date object to ISO8601 DateTime format\n * (e.g. 2012-10-31T12:34:56Z)\n *\n * @param {String|Number|Date} date - Input date\n * @returns {SfDate} - Salesforce date literal with ISO8601 datetime format\n */\nSfDate.toDateTimeLiteral = function(date) {\n  if (_.isNumber(date)) {\n    date = new Date(date);\n  } else if (_.isString(date)) {\n    date = SfDate.parseDate(date);\n  }\n  var yy = date.getUTCFullYear();\n  var mm = date.getUTCMonth()+1;\n  var dd = date.getUTCDate();\n  var hh = date.getUTCHours();\n  var mi = date.getUTCMinutes();\n  var ss = date.getUTCSeconds();\n  var dtstr =\n    [ yy, zeropad(mm), zeropad(dd) ].join(\"-\") + \"T\" +\n    [ zeropad(hh), zeropad(mi), zeropad(ss) ].join(\":\") + \"Z\";\n  return new SfDate(dtstr);\n};\n\n/**\n * Parse IS08601 date(time) formatted string and return date instance\n *\n * @param {String} str\n * @returns {Date}\n */\nSfDate.parseDate = function(str) {\n  var d = new Date();\n  var regexp = /^([\\d]{4})-?([\\d]{2})-?([\\d]{2})(T([\\d]{2}):?([\\d]{2}):?([\\d]{2})(.([\\d]{3}))?(Z|([\\+\\-])([\\d]{2}):?([\\d]{2})))?$/;\n  var m = str.match(regexp);\n  if (m) {\n    d = new Date(0);\n    if (!m[4]) {\n      d.setFullYear(parseInt(m[1], 10));\n      d.setDate(parseInt(m[3], 10));\n      d.setMonth(parseInt(m[2], 10) - 1);\n      d.setHours(0);\n      d.setMinutes(0);\n      d.setSeconds(0);\n      d.setMilliseconds(0);\n    } else {\n      d.setUTCFullYear(parseInt(m[1], 10));\n      d.setUTCDate(parseInt(m[3], 10));\n      d.setUTCMonth(parseInt(m[2], 10) - 1);\n      d.setUTCHours(parseInt(m[5], 10));\n      d.setUTCMinutes(parseInt(m[6], 10));\n      d.setUTCSeconds(parseInt(m[7], 10));\n      d.setUTCMilliseconds(parseInt(m[9] || '0', 10));\n      if (m[10] && m[10] !== 'Z') {\n        var offset = parseInt(m[12],10) * 60 + parseInt(m[13], 10);\n        d.setTime((m[11] === '+' ? -1 : 1) * offset * 60 * 1000 +d.getTime());\n      }\n    }\n    return d;\n  } else {\n    throw new Error(\"Invalid date format is specified : \" + str);\n  }\n};\n\n/*\n * Pre-defined Salesforce Date Literals\n */\nvar SfDateLiterals = {\n  YESTERDAY: 1,\n  TODAY: 1,\n  TOMORROW: 1,\n  LAST_WEEK: 1,\n  THIS_WEEK: 1,\n  NEXT_WEEK: 1,\n  LAST_MONTH: 1,\n  THIS_MONTH: 1,\n  NEXT_MONTH: 1,\n  LAST_90_DAYS: 1,\n  NEXT_90_DAYS: 1,\n  LAST_N_DAYS: 2,\n  NEXT_N_DAYS: 2,\n  NEXT_N_WEEKS: 2,\n  LAST_N_WEEKS: 2,\n  NEXT_N_MONTHS: 2,\n  LAST_N_MONTHS: 2,\n  THIS_QUARTER: 1,\n  LAST_QUARTER: 1,\n  NEXT_QUARTER: 1,\n  NEXT_N_QUARTERS: 2,\n  LAST_N_QUARTERS: 2,\n  THIS_YEAR: 1,\n  LAST_YEAR: 1,\n  NEXT_YEAR: 1,\n  NEXT_N_YEARS: 2,\n  LAST_N_YEARS: 2,\n  THIS_FISCAL_QUARTER: 1,\n  LAST_FISCAL_QUARTER: 1,\n  NEXT_FISCAL_QUARTER: 1,\n  NEXT_N_FISCAL_QUARTERS:2,\n  LAST_N_FISCAL_QUARTERS:2,\n  THIS_FISCAL_YEAR:1,\n  LAST_FISCAL_YEAR:1,\n  NEXT_FISCAL_YEAR:1,\n  NEXT_N_FISCAL_YEARS: 2,\n  LAST_N_FISCAL_YEARS: 2\n};\n\nfor (var literal in SfDateLiterals) {\n  var type = SfDateLiterals[literal];\n  SfDate[literal] =\n   type === 1 ? new SfDate(literal) : createLiteralBuilder(literal);\n}\n\n/** @private **/\nfunction createLiteralBuilder(literal) {\n  return function(num) { return new SfDate(literal + \":\" + num); };\n}\n","'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    _ = require('lodash/core'),\n    Promise = require('./promise');\n\n/**\n * HTTP based API class with authorization hook\n *\n * @constructor\n * @extends events.EventEmitter\n * @param {Connection} conn - Connection object\n * @param {Object} [options] - Http API Options\n * @param {String} [options.responseType] - Overriding content mime-type in response\n * @param {Transport} [options.transport] - Transport for http api\n * @param {Object} [options.noContentResponse] - Alternative response when no content returned in response (= HTTP 204)\n */\nvar HttpApi = function(conn, options) {\n  options = options || {};\n  this._conn = conn;\n  this.on('resume', function(err) { conn.emit('resume', err); });\n  this._responseType = options.responseType;\n  this._transport = options.transport || conn._transport;\n  this._noContentResponse = options.noContentResponse;\n};\n\ninherits(HttpApi, events.EventEmitter);\n\n/**\n * Callout to API endpoint using http\n *\n * @param {Object} request - Http Request object\n * @param {String} request.url - Endpoint URL to request\n * @param {String} request.method - Http method for request\n * @param {Object} [request.headers] - Http request headers in hash object\n * @param {Callback.<Object>} callback - Callback function\n * @returns {Promise.<Object>} -\n */\nHttpApi.prototype.request = function(request, callback) {\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  var refreshDelegate = this.getRefreshDelegate();\n  // remember previous instance url in case it changes after a refresh\n  var lastInstanceUrl = conn.instanceUrl;\n\n  var deferred = Promise.defer();\n\n  var onResume = function(err) {\n    if (err) {\n      deferred.reject(err);\n      return;\n    }\n    // check to see if the token refresh has changed the instance url\n    if(lastInstanceUrl !== conn.instanceUrl){\n      // if the instance url has changed\n      // then replace the current request urls instance url fragment\n      // with the updated instance url\n      request.url = request.url.replace(lastInstanceUrl,conn.instanceUrl);\n    }\n\n    self.request(request).then(function(response) {\n      deferred.resolve(response);\n    }, function(err) {\n      deferred.reject(err);\n    });\n  };\n\n  if (refreshDelegate && refreshDelegate._refreshing) {\n    refreshDelegate.once('resume', onResume);\n    return deferred.promise.thenCall(callback);\n  }\n\n  // hook before sending\n  self.beforeSend(request);\n\n  self.emit('request', request);\n  logger.debug(\"<request> method=\" + request.method + \", url=\" + request.url);\n  var requestTime = Date.now();\n\n  return this._transport.httpRequest(request).then(function(response) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.debug(\"<response> status=\" + response.statusCode + \", url=\" + request.url);\n\n    self.emit('response', response);\n    // Refresh token if session has been expired and requires authentication\n    // when session refresh delegate is available\n    if (self.isSessionExpired(response) && refreshDelegate) {\n      refreshDelegate.refresh(requestTime, onResume);\n      return deferred.promise;\n    }\n    if (self.isErrorResponse(response)) {\n      var err = self.getError(response);\n      throw err;\n    }\n    return self.getResponseBody(response);\n  }, function(err) {\n    var responseTime = Date.now();\n    logger.debug(\"elappsed time : \" + (responseTime - requestTime) + \"msec\");\n    logger.error(err);\n    throw err;\n  })\n  .thenCall(callback);\n};\n\n/**\n * @protected\n */\nHttpApi.prototype.getRefreshDelegate = function() {\n  return this._conn._refreshDelegate;\n};\n\n/**\n *\n * @protected\n */\nHttpApi.prototype.beforeSend = function(request) {\n  request.headers = request.headers || {};\n  if (this._conn.accessToken) {\n    request.headers.Authorization = \"Bearer \" + this._conn.accessToken;\n  }\n  if (this._conn.callOptions) {\n    var callOptions = [];\n    for (var name in this._conn.callOptions) {\n      callOptions.push(name + \"=\" + this._conn.callOptions[name]);\n    }\n    request.headers[\"Sforce-Call-Options\"] = callOptions.join(', ');\n  }\n};\n\n/**\n * Detect response content mime-type\n * @protected\n */\nHttpApi.prototype.getResponseContentType = function(response) {\n  return this._responseType || response.headers && response.headers[\"content-type\"];\n};\n\n/**\n *\n */\nHttpApi.prototype.parseResponseBody = function(response) {\n  var contentType = this.getResponseContentType(response);\n  var parseBody = /^(text|application)\\/xml(;|$)/.test(contentType) ? parseXML :\n         /^application\\/json(;|$)/.test(contentType) ? parseJSON :\n         /^text\\/csv(;|$)/.test(contentType) ? parseCSV :\n         parseText;\n  try {\n    return parseBody(response.body);\n  } catch(e) {\n    return response.body;\n  }\n};\n\n/**\n * Get response body\n * @protected\n */\nHttpApi.prototype.getResponseBody = function(response) {\n  if (response.statusCode === 204) { // No Content\n    return this._noContentResponse;\n  }\n  var body = this.parseResponseBody(response);\n  var err;\n  if (this.hasErrorInResponseBody(body)) {\n    err = this.getError(response, body);\n    throw err;\n  }\n  if (response.statusCode === 300) { // Multiple Choices\n    err = new Error('Multiple records found');\n    err.name = \"MULTIPLE_CHOICES\";\n    err.content = body;\n    throw err;\n  }\n  return body;\n};\n\n/** @private */\nfunction parseJSON(str) {\n  return JSON.parse(str);\n}\n\n/** @private */\nfunction parseXML(str) {\n  var ret = {};\n  require('xml2js').parseString(str, { explicitArray: false }, function(err, result) {\n    ret = { error: err, result : result };\n  });\n  if (ret.error) { throw ret.error; }\n  return ret.result;\n}\n\n/** @private */\nfunction parseCSV(str) {\n  return require('./csv').parseCSV(str);\n}\n\n/** @private */\nfunction parseText(str) { return str; }\n\n\n/**\n * Detect session expiry\n * @protected\n */\nHttpApi.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 401;\n};\n\n/**\n * Detect error response\n * @protected\n */\nHttpApi.prototype.isErrorResponse = function(response) {\n  return response.statusCode >= 400;\n};\n\n/**\n * Detect error in response body\n * @protected\n */\nHttpApi.prototype.hasErrorInResponseBody = function(body) {\n  return false;\n};\n\n/**\n * Parsing error message in response\n * @protected\n */\nHttpApi.prototype.parseError = function(body) {\n  var errors = body;\n  return _.isArray(errors) ? errors[0] : errors;\n};\n\n/**\n * Get error message in response\n * @protected\n */\nHttpApi.prototype.getError = function(response, body) {\n  var error;\n  try {\n    error = this.parseError(body || this.parseResponseBody(response));\n  } catch(e) {}\n  error = _.isObject(error) && _.isString(error.message) ? error : {\n    errorCode: 'ERROR_HTTP_' + response.statusCode,\n    message : response.body\n  };\n  var err = new Error(error.message);\n  err.name = error.errorCode;\n  for (var key in error) { err[key] = error[key]; }\n  return err;\n};\n\n/*-------------------------------------------------------------------------*/\n\n/**\n * @protected\n */\nvar SessionRefreshDelegate = function(conn, refreshFn) {\n  this._conn = conn;\n  this._refreshFn = refreshFn;\n  this._refreshing = false;\n};\n\ninherits(SessionRefreshDelegate, events.EventEmitter);\n\n/**\n * Refresh access token\n * @private\n */\nSessionRefreshDelegate.prototype.refresh = function(since, callback) {\n  // Callback immediately When refreshed after designated time\n  if (this._lastRefreshedAt > since) { return callback(); }\n  var self = this;\n  var conn = this._conn;\n  var logger = conn._logger;\n  self.once('resume', callback);\n  if (self._refreshing) { return; }\n  logger.debug(\"<refresh token>\");\n  self._refreshing = true;\n  return self._refreshFn(conn, function(err, accessToken, res) {\n    if (!err) {\n      logger.debug(\"Connection refresh completed.\");\n      conn.accessToken = accessToken;\n      conn.emit(\"refresh\", accessToken, res);\n    }\n    self._lastRefreshedAt = Date.now();\n    self._refreshing = false;\n    self.emit('resume', err);\n  });\n};\n\n\n/**\n *\n */\nHttpApi.SessionRefreshDelegate = SessionRefreshDelegate;\nmodule.exports = HttpApi;\n","'use strict';\n\n/**\n * @protected\n * @class\n * @constructor\n * @param {String|Number} logLevel - Log level\n */\nvar Logger = module.exports = function(logLevel) {\n  if (typeof logLevel === 'string') {\n    logLevel = LogLevels[logLevel];\n  }\n  if (!logLevel) {\n    logLevel = LogLevels.INFO;\n  }\n  this._logLevel = logLevel;\n};\n\n/**\n * @memberof Logger\n */\nvar LogLevels = Logger.LogLevels = {\n  \"DEBUG\" : 1,\n  \"INFO\" : 2,\n  \"WARN\" : 3,\n  \"ERROR\" : 4,\n  \"FATAL\" : 5\n};\n\n/**\n * Output log\n *\n * @param {String} level - Logging target level\n * @param {String} message - Message to log\n */\nLogger.prototype.log = function(level, message) {\n  if (this._logLevel <= level) {\n    if (level < LogLevels.ERROR) {\n      console.log(message);\n    } else {\n      console.error(message);\n    }\n  }\n};\n\nfor (var level in LogLevels) {\n  Logger.prototype[level.toLowerCase()] = createLoggerFunction(LogLevels[level]);\n}\n\nfunction createLoggerFunction(level) {\n  return function(message) { this.log(level, message); };\n}\n","/**\n * @file Manages Salesforce OAuth2 operations\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar querystring = require('querystring'),\n    _ = require('lodash/core'),\n    Transport = require('./transport');\n\nvar defaults = {\n  loginUrl : \"https://login.salesforce.com\"\n};\n\n/**\n * OAuth2 class\n *\n * @class\n * @constructor\n * @param {Object} options - OAuth2 config options\n * @param {String} [options.loginUrl] - Salesforce login server URL\n * @param {String} [options.authzServiceUrl] - OAuth2 authorization service URL. If not specified, it generates from default by adding to login server URL.\n * @param {String} [options.tokenServiceUrl] - OAuth2 token service URL. If not specified it generates from default by adding to login server URL.\n * @param {String} options.clientId - OAuth2 client ID.\n * @param {String} [options.clientSecret] - OAuth2 client secret (This is optional for public client).\n * @param {String} options.redirectUri - URI to be callbacked from Salesforce OAuth2 authorization service.\n */\nvar OAuth2 = module.exports = function(options) {\n  if (options.authzServiceUrl && options.tokenServiceUrl) {\n    this.loginUrl = options.authzServiceUrl.split('/').slice(0, 3).join('/');\n    this.authzServiceUrl = options.authzServiceUrl;\n    this.tokenServiceUrl = options.tokenServiceUrl;\n    this.revokeServiceUrl = options.revokeServiceUrl;\n  } else {\n    this.loginUrl = options.loginUrl || defaults.loginUrl;\n    this.authzServiceUrl = this.loginUrl + \"/services/oauth2/authorize\";\n    this.tokenServiceUrl = this.loginUrl + \"/services/oauth2/token\";\n    this.revokeServiceUrl = this.loginUrl + \"/services/oauth2/revoke\";\n  }\n  this.clientId = options.clientId;\n  this.clientSecret = options.clientSecret;\n  this.redirectUri = options.redirectUri;\n  if (options.proxyUrl) {\n    this._transport = new Transport.ProxyTransport(options.proxyUrl);\n  } else if (options.httpProxy) {\n    this._transport = new Transport.HttpProxyTransport(options.httpProxy);\n  } else {\n    this._transport = new Transport();\n  }\n};\n\n\n\n/**\n *\n */\n_.extend(OAuth2.prototype, /** @lends OAuth2.prototype **/ {\n\n  /**\n   * Get Salesforce OAuth2 authorization page URL to redirect user agent.\n   *\n   * @param {Object} params - Parameters\n   * @param {String} [params.scope] - Scope values in space-separated string\n   * @param {String} [params.state] - State parameter\n   * @param {String} [params.code_challenge] - Code challenge value (RFC 7636 - Proof Key of Code Exchange)\n   * @returns {String} Authorization page URL\n   */\n  getAuthorizationUrl : function(params) {\n    params = _.extend({\n      response_type : \"code\",\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    return this.authzServiceUrl +\n      (this.authzServiceUrl.indexOf('?') >= 0 ? \"&\" : \"?\") +\n      querystring.stringify(params);\n  },\n\n  /**\n   * @typedef TokenResponse\n   * @type {Object}\n   * @property {String} access_token\n   * @property {String} refresh_token\n   */\n\n  /**\n   * OAuth2 Refresh Token Flow\n   *\n   * @param {String} refreshToken - Refresh token\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  refreshToken : function(refreshToken, callback) {\n    var params = {\n      grant_type : \"refresh_token\",\n      refresh_token : refreshToken,\n      client_id : this.clientId\n    };\n    if (this.clientSecret) {\n      params.client_secret = this.clientSecret;\n    }\n    return this._postParams(params, callback);\n  },\n\n  /**\n   * OAuth2 Web Server Authentication Flow (Authorization Code)\n   * Access Token Request\n   *\n   * @param {String} code - Authorization code\n   * @param {Object} [params] - Optional parameters to send in token retrieval\n   * @param {String} [params.code_verifier] - Code verifier value (RFC 7636 - Proof Key of Code Exchange)\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  requestToken : function(code, params, callback) {\n    if (typeof params === 'function') {\n      callback = params;\n      params = {};\n    }\n    params = _.extend({\n      grant_type : \"authorization_code\",\n      code : code,\n      client_id : this.clientId,\n      redirect_uri : this.redirectUri\n    }, params || {});\n    if (this.clientSecret) {\n      params.client_secret = this.clientSecret;\n    }\n    return this._postParams(params, callback);\n  },\n\n  /**\n   * OAuth2 Username-Password Flow (Resource Owner Password Credentials)\n   *\n   * @param {String} username - Salesforce username\n   * @param {String} password - Salesforce password\n   * @param {Callback.<TokenResponse>} [callback] - Callback function\n   * @returns {Promise.<TokenResponse>}\n   */\n  authenticate : function(username, password, callback) {\n    return this._postParams({\n      grant_type : \"password\",\n      username : username,\n      password : password,\n      client_id : this.clientId,\n      client_secret : this.clientSecret,\n      redirect_uri : this.redirectUri\n    }, callback);\n  },\n\n  /**\n   * OAuth2 Revoke Session or API Token\n   *\n   * @param {String} token - Access or Refresh token to revoke. Passing in the Access token revokes the session. Passing in the Refresh token revokes API Access.\n   * @param {Callback.<undefined>} [callback] - Callback function\n   * @returns {Promise.<undefined>}\n   */\n  revokeToken : function(token, callback) {\n    var req;\n    if (Transport.JsonpTransport.supported) {\n      var jsonpTransport = new Transport.JsonpTransport('callback');\n      req = jsonpTransport.httpRequest({\n        method: 'GET',\n        url : this.revokeServiceUrl + '?' + querystring.stringify({ token: token })\n      });\n    } else {\n      req = this._transport.httpRequest({\n        method : 'POST',\n        url : this.revokeServiceUrl,\n        body: querystring.stringify({ token: token }),\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n    }\n    return req.then(function(response) {\n      if (response.statusCode >= 400) {\n        var res = querystring.parse(response.body);\n        if (!res || !res.error) {\n          res = { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        }\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n    }).thenCall(callback);\n  },\n\n  /**\n   * @private\n   */\n  _postParams : function(params, callback) {\n    return this._transport.httpRequest({\n      method : 'POST',\n      url : this.tokenServiceUrl,\n      body : querystring.stringify(params),\n      headers : {\n        \"content-type\" : \"application/x-www-form-urlencoded\"\n      }\n    }).then(function(response) {\n      var res;\n      try {\n        res = JSON.parse(response.body);\n      } catch(e) {}\n      if (response.statusCode >= 400) {\n        res = res || { error: \"ERROR_HTTP_\"+response.statusCode, error_description: response.body };\n        var err = new Error(res.error_description);\n        err.name = res.error;\n        throw err;\n      }\n      return res;\n    }).thenCall(callback);\n  }\n\n});\n","/**\n * @file Process class to manage/run workflow rule and approval process\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core'),\n    Promise = require('./promise'),\n    Conneciton = require('./connection');\n\n/**\n * A class which manages process rules and approval processes\n *\n * @class\n * @param {Connection} conn - Connection object\n */\nvar Process = module.exports = function(conn) {\n  /**\n   * Object which mangages process rules\n   * @member {Process~ProcessRule} Process#rule\n   */\n  this.rule = new ProcessRule(conn);\n  /**\n   * Object which mangages approval process\n   * @member {Process~ApprovalProcess} Process#approval\n   */\n  this.approval = new ApprovalProcess(conn);\n};\n\n/**\n * A class which manages process (workflow) rules\n *\n * @class Process~ProcessRule\n * @param {Connection} conn - Connection object\n */\nvar ProcessRule = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ProcessRuleDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of process rule definition\n * @prop {String} object - SObject name which process rule is defined\n */\n\n/**\n * Get all process rule definitions registered to sobjects\n *\n * @method Process~ProcessRule#list\n * @param {Callback.<Map.<String, Array.<Process~ProcessRuleDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<Process~ProcessRuleDefinition>>>}\n */\nProcessRule.prototype.list = function(callback) {\n  return this._conn.request(\"/process/rules\").then(function(res) {\n    return res.rules;\n  }).thenCall(callback);\n};\n\n\n/**\n * @typedef {Object} Process~ProcessRuleTriggerResult\n * @prop {Boolean} success - Is process rule trigger succeeded or not\n * @prop {Array.<Object>} errors - Array of errors returned if the request failed\n */\n\n/**\n * Trigger process rule for given entities\n *\n * @method Process~ProcessRule#trigger\n * @param {String|Array.<String>} contextIds - Entity ID(s) to trigger workflow process\n * @param {Callback.<Process~ProcessRuleTriggerResult>} [callback] - Callback function\n * @returns {Promise.<Process~ProcessRuleTriggerResult>}\n */\nProcessRule.prototype.trigger = function(contextIds, callback) {\n  contextIds = _.isArray(contextIds) ? contextIds : [ contextIds ];\n  return this._conn.request({\n    method: \"POST\",\n    url: \"/process/rules/\",\n    body: JSON.stringify({\n      contextIds: contextIds\n    }),\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  }).thenCall(callback);\n};\n\n/**\n * A class which manages approval processes\n *\n * @class Process~ApprovalProcess\n * @param {Connection} conn - Connection object\n */\nvar ApprovalProcess = function(conn) {\n  this._conn = conn;\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessDefinition\n * @prop {String} id - Id of approval process definition\n * @prop {String} name - Name of approval process definition\n * @prop {String} object - SObject name which approval process is defined\n * @prop {Number} sortOrder - Processing order of approval in SObject\n */\n/**\n * Get all approval process definitions registered to sobjects\n *\n * @method Process~ApprovalProcess#list\n * @param {Callback.<Map.<String, Array.<ApprovalProcessDefinition>>>} [callback] - Callback function\n * @returns {Promise.<Map.<String, Array.<ApprovalProcessDefinition>>>}\n */\nApprovalProcess.prototype.list = function(callback) {\n  return this._conn.request(\"/process/approvals\").then(function(res) {\n    return res.approvals;\n  }).thenCall(callback);\n};\n\n/**\n * @typedef {Object} Process~ApprovalProcessRequestResult\n * @prop {Boolean} success - True if processing or approval completed successfully\n * @prop {Array.<Object>} errors - The set of errors returned if the request failed\n * @prop {Array.<String>} actorIds - IDs of the users who are currently assigned to this approval step\n * @prop {String} entityId - Object being processed\n * @prop {String} instanceId - ID of the ProcessInstance associated with the object submitted for processing\n * @prop {String} instanceStatus - Status of the current process instance (not an individual object but the entire process instance)\n * @prop {Array.<String>} newWorkItemIds - Case-insensitive IDs that point to ProcessInstanceWorkitem items (the set of pending approval requests)\n */\n\n/**\n * Send bulk requests for approval process\n *\n * @method Process~ApprovalProcess#request\n * @param {Array.<ApprovalProcessRequest>} requests - Array of approval process request to send\n * @param {Callback.<Array.<ApprovalProcessRequestResult>>} - Callback function\n * @param {Promise.<Array.<ApprovalProcessRequestResult>>}\n */\nApprovalProcess.prototype.request = function(requests, callback) {\n  requests = requests.map(function(req) {\n    return req._request ? req._request : req;\n  });\n  return this._conn.request({\n    method: 'POST',\n    url: '/process/approvals',\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({ requests: requests })\n  }).thenCall(callback);\n};\n\n/**\n * Create approval process request\n *\n * @private\n */\nApprovalProcess.prototype._createRequest = function(actionType, contextId, comments, options, callback) {\n  if (typeof comments === \"function\") {\n    callback = comments;\n    options = null;\n    comments = null;\n  }\n  if (typeof options === \"function\") {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var request = {\n    actionType: actionType,\n    contextId: contextId,\n    comments: comments\n  };\n  _.extend(request, options);\n  return new ApprovalProcessRequest(this, request).thenCall(callback);\n};\n\n/**\n * Submit approval request for an item\n *\n * @method Process~ApprovalProcess#submit\n * @param {String} contextId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.submit = function(contextId, comments, options, callback) {\n  return this._createRequest(\"Submit\", contextId, comments, options, callback);\n};\n\n/**\n * Approve approval request for an item\n *\n * @method Process~ApprovalProcess#approve\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.approve = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Approve\", workitemId, comments, options, callback);\n};\n\n/**\n * Reject approval request for an item\n *\n * @method Process~ApprovalProcess#reject\n * @param {String} workitemId - ID of the item that is being acted upon\n * @param {String} [comments] - Comment to add to the history step associated with this request\n * @param {Object} [options] - Request parameters\n * @param {Array.<String>} [options.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [options.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [options.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n * @param {Callback.<ApprovalProcessRequestResult>} [callback] - Callback function\n * @returns {ApprovalProcessRequest}\n */\nApprovalProcess.prototype.reject = function(workitemId, comments, options, callback) {\n  return this._createRequest(\"Reject\", workitemId, comments, options, callback);\n};\n\n/**\n * A class representing approval process request\n *\n * @protected\n * @class Process~ApprovalProcessRequest\n * @implements {Promise.<Process~ApprovalProcessRequestResult>}\n * @param {Process~ApprovalProcess} process - ApprovalProcess\n * @param {Object} request - Request parameters\n * @param {String} request.actionType - Represents the kind of action to take: Submit, Approve, or Reject\n * @param {String} request.contextId - ID of the item that is being acted upon\n * @param {String} request.comments - Comment to add to the history step associated with this request\n * @param {Array.<String>} [request.nextApproverIds] - If the process requires specification of the next approval, the ID of the user to be assigned the next request\n * @param {String} [request.processDefinitionNameOrId] - Developer name or ID of the process definition\n * @param {Boolean} [request.skipEntryCriteria] - Determines whether to evaluate the entry criteria for the process (true) or not (false) if the process definition name or ID isn’t null\n */\nvar ApprovalProcessRequest = function(process, request) {\n  this._process = process;\n  this._request = request;\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * @method Process~ApprovalProcessRequest#then\n */\nApprovalProcessRequest.prototype.then = function(onResolve, onReject) {\n  if (!this._promise) {\n    this._promise = this._process.request([ this ]).then(function(rets) {\n      return rets[0];\n    });\n  }\n  this._promise.then(onResolve, onReject);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @method Process~ApprovalProcessRequest#thenCall\n */\nApprovalProcessRequest.prototype.thenCall = function(callback) {\n  return callback ? this.then(function(res) {\n    callback(null, res);\n  }, function(err) {\n    callback(err);\n  }) :\n  this;\n};\n","/*global process*/\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * @callback ResolvedCallback\n * @param {T} result - Resolved value\n * @returns {S}\n * @template T,S\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback ResolveCallback\n * @param {T} result\n * @template T\n */\n\n/**\n * @callback RejectedCallback\n * @param {Error} reason - Rejected reason\n * @returns {S}\n * @template S\n */\n\n/**\n * @callback PromiseCallback\n * @param {ResolveCallback.<T>} resolve\n * @param {RejectCallback} reject\n * @template T\n */\n\n/**\n * Promise class with a little extension\n *\n * @class Promise\n * @constructor\n * @param {PromiseCallback.<T>}\n * @template T\n */\nvar Promise = require('promise/lib/es6-extensions');\n\n/**\n * The \"then\" method from the Promises/A+ specification\n *\n * @method Promise#then\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\n\n/**\n * Call \"then\" using given node-style callback function.\n * This is basically same as \"nodeify\" except that it always return the original promise\n *\n * @method Promise#thenCall\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Promise}\n */\nPromise.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/**\n * A sugar method, equivalent to promise.then(undefined, onRejected).\n *\n * @method Promise#catch\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\n\n/**\n * Synonym of Promise#catch\n *\n * @method Promise#fail\n * @param {RejectedCallback.<S>} onRejected\n * @returns {Promise.<S>}\n */\nPromise.prototype.fail = Promise.prototype['catch'];\n\n/**\n * Returns resolving promise with given reason\n *\n * @method Promise.resolve\n * @param {*} result - Resolved value\n * @returns {Promise}\n */\n\n/**\n * Returns rejecting promise with given reason\n *\n * @method Promise.reject\n * @param {Error} reason - Rejecting reason\n * @returns {Promise}\n */\n\n/**\n * Returns a promise that is fulfilled with an array containing the fulfillment value of each promise,\n * or is rejected with the same rejection reason as the first promise to be rejected.\n *\n * @method Promise.all\n * @param {Array.<Promise.<*>|*>} promises\n * @returns {Promise.<Array.<*>>}\n */\n\n/**\n * Returns a deferred object\n *\n * @method Promise.defer\n * @returns {Deferred}\n */\nPromise.defer = function() {\n  return new Deferred();\n};\n\n/**\n * Deferred object\n *\n * @protected\n * @constructor\n */\nvar Deferred = function() {\n  var self = this;\n  this.promise = new Promise(function(resolve, reject) {\n    self.resolve = resolve;\n    self.reject = reject;\n  });\n};\n\n/**\n * Resolve promise\n * @method Deferred#resolve\n * @param {*} result - Resolving result\n */\n\n/**\n * Reject promise\n * @method Deferred#reject\n * @param {Error} error - Rejecting reason\n */\n\n/**\n *\n */\nmodule.exports = Promise;\n","/*global process*/\n/**\n * @file Manages query for records in Salesforce\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    events = require('events'),\n    stream = require('readable-stream'),\n    _      = require('lodash/core'),\n    Promise = require('./promise'),\n    SfDate = require(\"./date\"),\n    SOQLBuilder = require(\"./soql-builder\"),\n    RecordStream = require(\"./record-stream\");\n\n/**\n * Query\n *\n * @protected\n * @class\n * @extends {stream.Readable}\n * @implements Promise.<T>\n * @template T\n * @param {Connection} conn - Connection object\n * @param {Object|String} config - Query config object or SOQL string\n * @param {Object} [options] - Default query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n */\nvar Query = module.exports = function(conn, config, options) {\n  Query.super_.call(this, { objectMode: true });\n\n  this._conn = conn;\n  if (_.isString(config)) { // if query config is string, it is given in SOQL.\n    this._soql = config;\n  } else if (config.locator && config.locator.indexOf(\"/\") >= 0) { // if locator given in url for next records\n    this._locator = config.locator.split(\"/\").pop();\n  } else {\n    this._config = config;\n    this.select(config.fields);\n    if (config.includes) {\n      this.include(config.includes);\n    }\n    if (config.sort) {\n      this.sort(config.sort);\n    }\n  }\n  this._options = _.defaults(options || {}, {\n    maxFetch: 10000,\n    autoFetch: false,\n    scanAll: false,\n    responseTarget: ResponseTargets.QueryResult\n  });\n  this._executed = false;\n  this._finished = false;\n  this._chaining = false;\n\n  this._deferred = Promise.defer();\n\n  var self = this;\n};\n\ninherits(Query, stream.Readable);\n\n/**\n * Select fields to include in the returning result\n *\n * @param {Object|Array.<String>|String} fields - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @returns {Query.<T>}\n */\nQuery.prototype.select = function(fields) {\n  if (this._soql) {\n    throw Error(\"Cannot set select fields for the query which has already built SOQL.\");\n  }\n  fields = fields || '*';\n  if (_.isString(fields)) {\n    fields = fields.split(/\\s*,\\s*/);\n  } else if (_.isObject(fields) && !_.isArray(fields)) {\n    var _fields =  [];\n    for (var k in fields) {\n      if (fields[k]) { _fields.push(k); }\n    }\n    fields = _fields;\n  }\n  this._config.fields = fields;\n  return this;\n};\n\n/**\n * Set query conditions to filter the result records\n *\n * @param {Object|String} conditions - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @returns {Query.<T>}\n */\nQuery.prototype.where = function(conditions) {\n  if (this._soql) {\n    throw Error(\"Cannot set where conditions for the query which has already built SOQL.\");\n  }\n  this._config.conditions = conditions;\n  return this;\n};\n\n/**\n * Limit the returning result\n *\n * @param {Number} limit - Maximum number of records the query will return.\n * @returns {Query.<T>}\n */\nQuery.prototype.limit = function(limit) {\n  if (this._soql) {\n    throw Error(\"Cannot set limit for the query which has already built SOQL.\");\n  }\n  this._config.limit = limit;\n  return this;\n};\n\n/**\n * Synonym of Query#offset()\n *\n * @method Query#skip\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\n/**\n * Skip records\n *\n * @method Query#offset\n * @param {Number} offset - Offset number where begins returning results.\n * @returns {Query.<T>}\n */\nQuery.prototype.skip =\nQuery.prototype.offset = function(offset) {\n  if (this._soql) {\n    throw Error(\"Cannot set skip/offset for the query which has already built SOQL.\");\n  }\n  this._config.offset = offset;\n  return this;\n};\n\n/**\n * Synonym of Query#sort()\n *\n * @memthod Query#orderby\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\n/**\n * Set query sort with direction\n *\n * @method Query#sort\n * @param {String|Object} sort - Sorting field or hash object with field name and sord direction\n * @param {String|Number} [dir] - Sorting direction (ASC|DESC|1|-1)\n * @returns {Query.<T>}\n */\nQuery.prototype.sort =\nQuery.prototype.orderby = function(sort, dir) {\n  if (this._soql) {\n    throw Error(\"Cannot set sort for the query which has already built SOQL.\");\n  }\n  if (_.isString(sort) && _.isString(dir)) {\n    sort = [ [ sort, dir ] ];\n  }\n  this._config.sort = sort;\n  return this;\n};\n\n/**\n * Include child relationship query\n *\n * @param {String} childRelName - Child relationship name to include in query result\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Optional query configulations.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @returns {Query~SubQuery}\n */\nQuery.prototype.include = function(childRelName, conditions, fields, options) {\n  if (this._soql) {\n    throw Error(\"Cannot include child relationship into the query which has already built SOQL.\");\n  }\n  if (_.isObject(childRelName)) {\n    var includes = childRelName;\n    for (var crname in includes) {\n      var config = includes[crname];\n      this.include(crname, config.conditions, config.fields, config);\n    }\n    return;\n  }\n  var childConfig = {\n    table: childRelName,\n    conditions: conditions,\n    fields: fields,\n    limit: options && options.limit,\n    offset: options && (options.offset || options.skip),\n    sort: options && options.sort\n  };\n  if (!_.isArray(this._config.includes)) this._config.includes = [];\n  this._config.includes.push(childConfig);\n  var childQuery = new SubQuery(this._conn, this, childConfig);\n  this._children = this._children || [];\n  this._children.push(childQuery);\n  return childQuery;\n};\n\n\n/**\n * Setting maxFetch query option\n *\n * @param {Number} maxFetch - Max fetching records in auto fetch mode\n * @returns {Query.<T>}\n */\nQuery.prototype.maxFetch = function(maxFetch) {\n  this._options.maxFetch = maxFetch;\n  return this;\n};\n\n/**\n * Switching auto fetch mode\n *\n * @param {Boolean} autoFetch - Using auto fetch mode or not\n * @returns {Query.<T>}\n */\nQuery.prototype.autoFetch = function(autoFetch) {\n  this._options.autoFetch = autoFetch;\n  return this;\n};\n\n/**\n * Set flag to scan all records including deleted and archived.\n *\n * @param {Boolean} scanAll - Flag whether include deleted/archived record or not. Default is false.\n * @returns {Query.<T>}\n */\nQuery.prototype.scanAll = function(scanAll) {\n  this._options.scanAll = scanAll;\n  return this;\n};\n\n/**\n * @private\n */\nvar ResponseTargets = Query.ResponseTargets = {};\n[ \"QueryResult\", \"Records\", \"SingleRecord\", \"Count\" ].forEach(function(f) {\n  ResponseTargets[f] = f;\n});\n\n/**\n * @protected\n * @param {String} responseTarget - Query response target\n * @returns {Query.<S>}\n */\nQuery.prototype.setResponseTarget = function(responseTarget) {\n  if (responseTarget in ResponseTargets) {\n    this._options.responseTarget = responseTarget;\n  }\n  return this;\n};\n\n\n/**\n * Synonym of Query#execute()\n *\n * @method Query#run\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.run =\n/**\n * Synonym of Query#execute()\n *\n * @method Query#exec\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.exec =\n/**\n * Execute query and fetch records from server.\n *\n * @method Query#execute\n * @param {Object} [options] - Query options\n * @param {Boolean} [options.autoFetch] - Using auto fetch mode or not\n * @param {Number} [options.maxFetch] - Max fetching records in auto fetch mode\n * @param {Boolean} [options.scanAll] - Including deleted records for query target or not\n * @param {Object} [options.headers] - Additional HTTP request headers sent in query request\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query.<T>}\n */\nQuery.prototype.execute = function(options, callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  var deferred = this._deferred;\n\n  if (this._executed) {\n    deferred.reject(new Error(\"re-executing already executed query\"));\n    return this;\n  }\n\n  if (this._finished) {\n    deferred.reject(new Error(\"executing already closed query\"));\n    return this;\n  }\n\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  options = {\n    headers: options.headers || self._options.headers,\n    responseTarget: options.responseTarget || self._options.responseTarget,\n    autoFetch: options.autoFetch || self._options.autoFetch,\n    maxFetch: options.maxFetch || self._options.maxFetch,\n    scanAll: options.scanAll || self._options.scanAll\n  };\n\n  // callback and promise resolution;\n  var promiseCallback = function(err, res) {\n    if (_.isFunction(callback)) {\n      try {\n        res = callback(err, res);\n        err = null;\n      } catch(e) {\n        err = e;\n      }\n    }\n    if (err) {\n      deferred.reject(err);\n    } else {\n      deferred.resolve(res);\n    }\n  };\n  this.once('response', function(res) {\n    promiseCallback(null, res);\n  });\n  this.once('error', function(err) {\n    promiseCallback(err);\n  });\n\n  // collect fetched records in array\n  // only when response target is Records and\n  // either callback or chaining promises are available to this query.\n  this.once('fetch', function() {\n    if (options.responseTarget === ResponseTargets.Records && (self._chaining || callback)) {\n      logger.debug('--- collecting all fetched records ---');\n      var records = [];\n      var onRecord = function(record) {\n        records.push(record);\n      };\n      self.on('record', onRecord);\n      self.once('end', function() {\n        self.removeListener('record', onRecord);\n        self.emit('response', records, self);\n      });\n    }\n  });\n\n  // flag to prevent re-execution\n  this._executed = true;\n\n  // start actual query\n  logger.debug('>>> Query start >>>');\n  this._execute(options).then(function() {\n    logger.debug('*** Query finished ***');\n  }).fail(function(err) {\n    logger.debug('--- Query error ---');\n    self.emit('error', err);\n  });\n\n  // return Query instance for chaining\n  return this;\n};\n\n/**\n * @private\n */\nQuery.prototype._execute = function(options) {\n  var self = this;\n  var logger = this._conn._logger;\n  var responseTarget = options.responseTarget;\n  var autoFetch = options.autoFetch;\n  var maxFetch = options.maxFetch;\n  var scanAll = options.scanAll;\n\n  return Promise.resolve(\n    self._locator ?\n    self._conn._baseUrl() + \"/query/\" + self._locator :\n    self.toSOQL().then(function(soql) {\n      self.totalFetched = 0;\n      logger.debug(\"SOQL = \" + soql);\n      return self._conn._baseUrl() + \"/\" + (scanAll ? \"queryAll\" : \"query\") + \"?q=\" + encodeURIComponent(soql);\n    })\n  ).then(function(url) {\n    return self._conn.request({\n      method: 'GET',\n      url: url,\n      headers: options.headers\n    });\n  }).then(function(data) {\n    self.emit(\"fetch\");\n    self.totalSize = data.totalSize;\n    var res;\n    switch(responseTarget) {\n      case ResponseTargets.SingleRecord:\n        res = data.records && data.records.length > 0 ? data.records[0] : null;\n        break;\n      case ResponseTargets.Records:\n        res = data.records;\n        break;\n      case ResponseTargets.Count:\n        res = data.totalSize;\n        break;\n      default:\n        res = data;\n    }\n    // only fire response event when it should be notified per fetch\n    if (responseTarget !== ResponseTargets.Records) {\n      self.emit(\"response\", res, self);\n    }\n\n    // streaming record instances\n    var numRecords = (data.records && data.records.length) || 0;\n    for (var i=0; i<numRecords; i++) {\n      if (self.totalFetched >= maxFetch) {\n        self._finished = true;\n        break;\n      }\n      var record = data.records[i];\n      self.push(record);\n      self.emit('record', record, self.totalFetched++, self);\n    }\n    if (data.nextRecordsUrl) {\n      self._locator = data.nextRecordsUrl.split('/').pop();\n    }\n    self._finished = self._finished || data.done || !autoFetch;\n    if (self._finished) {\n      self.push(null);\n    } else {\n      self._execute(options);\n    }\n    return res;\n  });\n};\n\n/**\n * Readable stream implementation\n *\n * @override\n * @private\n */\nQuery.prototype._read = function(size) {\n  if (!this._finished && !this._executed) {\n    this.execute({ autoFetch: true });\n  }\n};\n\n/** @override **/\nQuery.prototype.on = function(e, fn) {\n  if (e === 'record') {\n    var self = this;\n    this.on('readable', function() {\n      while(self.read() !== null) {} // discard buffered records\n    });\n  }\n  return Query.super_.prototype.on.call(this, e, fn);\n};\n\n/** @override **/\nQuery.prototype.addListener = Query.prototype.on;\n\n\n/**\n * @private\n */\nQuery.prototype._expandFields = function() {\n  if (this._soql) {\n    return Promise.reject(new Error(\"Cannot expand fields for the query which has already built SOQL.\"));\n  }\n  var self = this;\n  var logger = self._conn._logger;\n  var conn = this._conn;\n  var table = this._config.table;\n  var fields = this._config.fields || [];\n\n  logger.debug('_expandFields: table = ' + table + ', fields = ' + fields.join(', '));\n\n  return Promise.all([\n    Promise.resolve(self._parent ? findRelationTable(table) : table)\n      .then(function(table) {\n        return Promise.all(\n          _.map(fields, function(field) { return expandAsteriskField(table, field); })\n        ).then(function(expandedFields) {\n          self._config.fields = _.flatten(expandedFields);\n        });\n      }),\n    Promise.all(\n      _.map(self._children || [], function(childQuery) {\n        return childQuery._expandFields();\n      })\n    )\n  ]);\n\n  function findRelationTable(rname) {\n    var ptable = self._parent._config.table;\n    logger.debug('finding table for relation \"' + rname + '\" in \"' + ptable + '\"...');\n    return describeCache(ptable).then(function(sobject) {\n      var upperRname = rname.toUpperCase();\n      var childRelation = _.find(sobject.childRelationships, function(cr) {\n        return (cr.relationshipName || '').toUpperCase() === upperRname;\n      });\n      return childRelation ? childRelation.childSObject :\n        Promise.reject(new Error(\"No child relationship found: \" + rname ));\n    });\n  }\n\n  function describeCache(table) {\n    logger.debug('describe cache: '+table);\n    var deferred = Promise.defer();\n    conn.describe$(table, function(err, sobject) {\n      logger.debug('... done.');\n      if (err) { deferred.reject(err); }\n      else { deferred.resolve(sobject); }\n    });\n    return deferred.promise;\n  }\n\n  function expandAsteriskField(table, field) {\n    logger.debug('expanding field \"'+ field + '\" in \"' + table + '\"...');\n    var fpath = field.split('.');\n    return fpath[fpath.length - 1] === '*' ?\n      describeCache(table).then(function(sobject) {\n        logger.debug('table '+table+'has been described');\n        if (fpath.length > 1) {\n          var rname = fpath.shift();\n          var rfield = _.find(sobject.fields, function(f) {\n            return f.relationshipName &&\n                   f.relationshipName.toUpperCase() === rname.toUpperCase();\n          });\n          if (rfield) {\n            var rtable = rfield.referenceTo.length === 1 ? rfield.referenceTo[0] : 'Name';\n            return expandAsteriskField(rtable, fpath.join('.')).then(function(fpaths) {\n              return _.map(fpaths, function(fpath) { return rname + '.' + fpath; });\n            });\n          } else {\n            return [];\n          }\n        } else {\n          return _.map(sobject.fields, function(f) { return f.name; });\n        }\n      }) :\n      Promise.resolve([ field ]);\n  }\n};\n\n/**\n * Explain plan for executing query\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nQuery.prototype.explain = function(callback) {\n  var self = this;\n  var logger = this._conn._logger;\n  return self.toSOQL().then(function(soql) {\n    logger.debug(\"SOQL = \" + soql);\n    var url = \"/query/?explain=\" + encodeURIComponent(soql);\n    return self._conn.request(url);\n  }).thenCall(callback);\n};\n\n/**\n * Return SOQL expression for the query\n *\n * @param {Callback.<String>} [callback] - Callback function\n * @returns {Promise.<String>}\n */\nQuery.prototype.toSOQL = function(callback) {\n  var self = this;\n  return Promise.resolve(self._soql ||\n    self._expandFields().then(function() { return SOQLBuilder.createSOQL(self._config); })\n  ).thenCall(callback);\n};\n\n/**\n * Create data stream of queried records.\n * Automatically resume query if paused.\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n */\nQuery.prototype.stream = RecordStream.Serializable.prototype.stream;\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.map = RecordStream.prototype.map;\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nQuery.prototype.filter = RecordStream.prototype.map;\n\n/*\n * Default threshold num of bulk API switching\n */\nvar DEFAULT_BULK_THRESHOLD = 200;\n\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#delete\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\n/**\n * Synonym of Query#destroy()\n *\n * @method Query#del\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\n/**\n * Delete queried records\n *\n * @method Query#destroy\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Object} [options] - Mass delete operation options\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype[\"delete\"] =\nQuery.prototype.del =\nQuery.prototype.destroy = function(type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = {};\n    type = null;\n  } else if (typeof type === 'object' && type !== null) {\n    callback = options;\n    options = type;\n    type = null;\n  }\n  options = options || {};\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk delete.\");\n  }\n  // Set the threshold number to pass to bulk API\n  var thresholdNum =\n    options.allowBulk === false ?\n      -1 :\n    typeof options.bulkThreshold === 'number' ?\n      options.bulkThreshold :\n      // determine threshold if the connection version supports SObject collection API or not\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var records = [];\n    var batch = null;\n    var handleRecord = function(rec) {\n      if (!rec.Id) {\n        self.emit('error', new Error('Queried record does not include Salesforce record ID.'))\n        return;\n      }\n      var record = { Id: rec.Id };\n      if (batch) {\n        batch.write(record);\n      } else {\n        records.push(record);\n        if (thresholdNum < 0 || records.length > thresholdNum) {\n          // Use bulk delete instead of SObject REST API\n          batch =\n            self._conn.sobject(type).deleteBulk()\n              .on('response', resolve)\n              .on('error', reject);\n          records.forEach(function(record) {\n            batch.write(record);\n          });\n          records = [];\n        }\n      }\n    };\n    var handleEnd = function() {\n      if (batch) {\n        batch.end();\n      } else {\n        var ids = records.map(function (record) { return record.Id; });\n        self._conn.sobject(type).destroy(ids, { allowRecursive: true }).then(resolve, reject);\n      }\n    };\n    self.on('data', handleRecord)\n      .on('end', handleEnd)\n      .on('error', reject);\n  }).thenCall(callback);\n};\n\n/**\n * Update queried records, using given mapping function/object\n *\n * @param {Record|RecordMapFunction} mapping - Mapping record or record mapping function\n * @param {String} [type] - SObject type. Required for SOQL based query object.\n * @param {Object} [options] - Mass update operation options\n * @param {Boolean} [options.allowBulk] - Allow switching to Bulk API when the num of queried records reached to certain threshold. Default is true.\n * @param {Number} [options.bulkThreshold] - Threshold num to switch to use Bulk API instead of usual `SObject#delete()` call. Default value is 200 after API ver 42.0, and 0.5 * `maxRequest` before API ver 42.0.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nQuery.prototype.update = function(mapping, type, options, callback) {\n  if (typeof type === 'function') {\n    callback = type;\n    options = {};\n    type = null;\n  } else if (typeof type === 'object' && type !== null) {\n    callback = options;\n    options = type;\n    type = null;\n  }\n  options = options || {};\n  type = type || (this._config && this._config.table);\n  if (!type) {\n    throw new Error(\"SOQL based query needs SObject type information to bulk update.\");\n  }\n  var updateStream = _.isFunction(mapping) ? RecordStream.map(mapping) : RecordStream.recordMapStream(mapping);\n  // Set the threshold number to pass to bulk API\n  var thresholdNum =\n    options.allowBulk === false ?\n      -1 :\n    typeof options.bulkThreshold === 'number' ?\n      options.bulkThreshold :\n      // determine threshold if the connection version supports SObject collection API or not\n      (this._conn._ensureVersion(42) ? DEFAULT_BULK_THRESHOLD : this._conn.maxRequest / 2);\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var records = [];\n    var batch = null;\n    var handleRecord = function(record) {\n      if (batch) {\n        batch.write(record);\n      } else {\n        records.push(record);\n        if (thresholdNum < 0 || records.length > thresholdNum) {\n          // Use bulk update instead of SObject REST API\n          batch =\n            self._conn.sobject(type).updateBulk()\n              .on('response', resolve)\n              .on('error', reject);\n          records.forEach(function(record) {\n            batch.write(record);\n          });\n          records = [];\n        }\n      }\n    };\n    var handleEnd = function() {\n      if (batch) {\n        batch.end();\n      } else {\n        self._conn.sobject(type).update(records, { allowRecursive: true }).then(resolve, reject);\n      }\n    };\n    self.on('error', reject)\n      .pipe(updateStream)\n      .on('data', handleRecord)\n      .on('end', handleEnd)\n      .on('error', reject);\n  }).thenCall(callback);\n};\n\n/**\n * Promise/A+ interface\n * http://promises-aplus.github.io/promises-spec/\n *\n * Delegate to deferred promise, return promise instance for query result\n *\n * @param {FulfilledCallback.<T, S1>} [onFulfilled]\n * @param {RejectedCallback.<S2>} [onRejected]\n * @returns {Promise.<S1|S2>}\n */\nQuery.prototype.then = function(onResolved, onReject) {\n  this._chaining = true;\n  if (!this._finished && !this._executed) { this.execute(); }\n  return this._deferred.promise.then.apply(this._deferred.promise, arguments);\n};\n\n/**\n * Promise/A+ extension\n * Call \"then\" using given node-style callback function\n *\n * @param {Callback.<T>} [callback] - Callback function\n * @returns {Query}\n */\nQuery.prototype.thenCall = function(callback) {\n  if (_.isFunction(callback)) {\n    this.then(function(res) {\n      process.nextTick(function() {\n        callback(null, res);\n      });\n    }, function(err) {\n      process.nextTick(function() {\n        callback(err);\n      });\n    });\n  }\n  return this;\n};\n\n/*--------------------------------------------*/\n\n/**\n * SubQuery object for representing child relationship query\n *\n * @protected\n * @class Query~SubQuery\n * @extends Query\n * @param {Connection} conn - Connection object\n * @param {Query} parent - Parent query object\n * @param {Object} config - Sub query configuration\n */\nvar SubQuery = function(conn, parent, config) {\n  SubQuery.super_.call(this, conn, config);\n  this._parent = parent;\n};\n\ninherits(SubQuery, Query);\n\n/**\n * @method Query~SubQuery#include\n * @override\n */\nSubQuery.prototype.include = function() {\n  throw new Error(\"Not allowed to include another subquery in subquery.\");\n};\n\n/**\n * Back the context to parent query object\n *\n * @method Query~SubQuery#end\n * @returns {Query}\n */\nSubQuery.prototype.end = function() {\n  return this._parent;\n};\n\n/**\n * If execute is called in subquery context, delegate it to parent query object\n *\n * @method Query~SubQuery#execute\n * @override\n */\nSubQuery.prototype.run =\nSubQuery.prototype.exec =\nSubQuery.prototype.execute = function() {\n  return this._parent.execute.apply(this._parent, arguments);\n};\n","/**\n * @file Represents Salesforce QuickAction\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\n\n/**\n * A class for quick action\n *\n * @protected\n * @constructor\n */\nvar QuickAction = module.exports = function(conn, path) {\n  this._conn = conn;\n  this._path = path;\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionInfo\n * @prop {String} type - Type of the action (e.g. Create, Update, Post, LogACall)\n * @prop {String} name - Name of the action\n * @prop {String} label - Label of the action\n * @prop {Object} urls - Endpoint URL information of the action\n */\n/**\n * @typedef {QuickAction~QuickActionInfo} QuickAction~QuickActionDescriveInfo\n * @prop {String} contextSobjectType - Object type used for the action\n * @prop {String} targetSobjectType - Object type of the action to target\n * @prop {String} targetParentField - Field name in the target object which refers parent(context) object record ID.\n * @prop {String} targetRecordTypeId - Record type of the targeted record\n * @prop {Object} layout - Layout sections that comprise an action\n */\n\n/**\n * Describe the action's information (including layout, etc.)\n *\n * @param {Callback.<QuickAction~QuickActionDescriveInfo>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionDescriveInfo>}\n */\nQuickAction.prototype.describe = function(callback) {\n  var url = this._path + \"/describe\";\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * Retrieve default field values in the action (for given record, if specified)\n *\n * @param {String} [contextId] - ID of record to get default values specific to the record\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nQuickAction.prototype.defaultValues = function(contextId, callback) {\n  if (typeof contextId === 'function') {\n    callback = contextId;\n    contextId = null;\n  }\n  var url = this._path + \"/defaultValues\";\n  if (contextId) {\n    url += \"/\" + contextId;\n  }\n  return this._conn.request(url).thenCall(callback);\n};\n\n/**\n * @typedef {Object} QuickAction~QuickActionResult\n * @param {String} id - Record id of the action result\n * @param {Array.<String>} feedItemIds - List of IDs for feed item\n * @param {Boolean} success - True if the action successfully completed\n * @param {Boolean} created - True if the action yields a new record\n * @param {String} contextId - Context record ID of the action\n * @param {Array.<Object>} errors - Errors if the action failed\n */\n\n/**\n * Execute the action for given context Id and record information\n * \n * @param {String} contextId - Context record ID of the action\n * @param {Record} record - Input record information for the action\n * @param {Callback.<QuickAction~QuickActionResult>} [callback] - Callback function\n * @returns {Promise.<QuickAction~QuickActionResult>}\n */\nQuickAction.prototype.execute = function(contextId, record, callback) {\n  var body = {\n    contextId: contextId,\n    record: record\n  };\n  return this._conn.requestPost(this._path, body).thenCall(callback);\n};\n","/**\n * @file Represents stream that handles Salesforce record as stream data\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar events = require('events'),\n    stream = require('readable-stream'),\n    Duplex = stream.Duplex,\n    Transform = stream.Transform,\n    PassThrough = stream.PassThrough,\n    inherits = require('inherits'),\n    _      = require('lodash/core'),\n    CSV    = require('./csv');\n\n\n/**\n * Class for Record Stream\n *\n * @class\n * @constructor\n * @extends stream.Transform\n */\nvar RecordStream = module.exports = function() {\n  RecordStream.super_.call(this, { objectMode: true });\n};\n\ninherits(RecordStream, Transform);\n\n\n/*\n * @override\n */\nRecordStream.prototype._transform = function(record, enc, callback) {\n  this.emit('record', record);\n  this.push(record);\n  callback();\n};\n\n/**\n * Get record stream of queried records applying the given mapping function\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream}\n */\nRecordStream.prototype.map = function(fn) {\n  return this.pipe(RecordStream.map(fn));\n};\n\n/**\n * Get record stream of queried records, applying the given filter function\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream}\n */\nRecordStream.prototype.filter = function(fn) {\n  return this.pipe(RecordStream.filter(fn));\n};\n\n\n/**\n * @class RecordStream.Serializable\n * @extends {RecordStream}\n */\nvar Serializable = RecordStream.Serializable = function() {\n  Serializable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Serializable, RecordStream);\n\n/**\n * Create readable data stream which emits serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nSerializable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this.pipe(converter.serialize(options))\n      .pipe(this._dataStream);\n  }\n  return this._dataStream;\n};\n\n\n/**\n * @class RecordStream.Parsable\n * @extends {RecordStream}\n */\nvar Parsable = RecordStream.Parsable = function() {\n  Parsable.super_.call(this);\n  this._dataStream = null;\n};\n\ninherits(Parsable, RecordStream);\n\n/**\n * Create writable data stream which accepts serialized record data\n *\n * @param {String} [type] - Type of outgoing data format. Currently 'csv' is default value and the only supported.\n * @param {Object} [options] - Options passed to converter\n * @returns {stream.Readable}\n*/\nParsable.prototype.stream = function(type, options) {\n  type = type || 'csv';\n  var converter = DataStreamConverters[type];\n  if (!converter) {\n    throw new Error('Converting [' + type + '] data stream is not supported.');\n  }\n  if (!this._dataStream) {\n    this._dataStream = new PassThrough();\n    this._parserStream = converter.parse(options).on('error', function(error) { this.emit('error', error); });\n    this._parserStream.pipe(this).pipe(new PassThrough({ objectMode: true, highWaterMark: ( 500 * 1000 ) }));\n  }\n  return this._dataStream;\n};\n\n\n/* @override */\nParsable.prototype.on = function(ev, fn) {\n  if (ev === 'readable' || ev === 'record') {\n    this._dataStream.pipe(this._parserStream);\n  }\n  return Parsable.super_.prototype.on.call(this, ev, fn);\n};\n\n/* @override */\nParsable.prototype.addListener = Parsable.prototype.on;\n\n/* --------------------------------------------------- */\n\n/**\n * @callback RecordMapFunction\n * @param {Record} record - Source record to map\n * @returns {Record}\n */\n\n/**\n * Create a record stream which maps records and pass them to downstream\n *\n * @param {RecordMapFunction} fn - Record mapping function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.map = function(fn) {\n  var mapStream = new RecordStream.Serializable();\n  mapStream._transform = function(record, enc, callback) {\n    var rec = fn(record) || record; // if not returned record, use same record\n    this.push(rec);\n    callback();\n  };\n  return mapStream;\n};\n\n/**\n * Create mapping stream using given record template\n *\n * @param {Record} record - Mapping record object. In mapping field value, temlate notation can be used to refer field value in source record, if noeval param is not true.\n * @param {Boolean} [noeval] - Disable template evaluation in mapping record.\n * @returns {RecordStream.Serializable}\n */\nRecordStream.recordMapStream = function(record, noeval) {\n  return RecordStream.map(function(rec) {\n    var mapped = { Id: rec.Id };\n    for (var prop in record) {\n      mapped[prop] = noeval ? record[prop] : evalMapping(record[prop], rec);\n    }\n    return mapped;\n  });\n\n  function evalMapping(value, mapping) {\n    if (_.isString(value)) {\n      var m = /^\\$\\{(\\w+)\\}$/.exec(value);\n      if (m) { return mapping[m[1]]; }\n      return value.replace(/\\$\\{(\\w+)\\}/g, function($0, prop) {\n        var v = mapping[prop];\n        return _.isNull(v) || _.isUndefined(v) ? \"\" : String(v);\n      });\n    } else {\n      return value;\n    }\n  }\n};\n\n/**\n * @callback RecordFilterFunction\n * @param {Record} record - Source record to filter\n * @returns {Boolean}\n */\n\n/**\n * Create a record stream which filters records and pass them to downstream\n *\n * @param {RecordFilterFunction} fn - Record filtering function\n * @returns {RecordStream.Serializable}\n */\nRecordStream.filter = function(fn) {\n  var filterStream = new RecordStream.Serializable();\n  filterStream._transform = function(record, enc, callback) {\n    if (fn(record)) { this.push(record); }\n    callback();\n  };\n  return filterStream;\n};\n\n/**\n * @private\n */\nfunction convertRecordForSerialization(record, options) {\n  return Object.keys(record).reduce(function(rec, key) {\n    var value = rec[key];\n    var t = typeof value;\n    var urec = {};\n    if (key === 'attributes') { // 'attributes' prop will be ignored\n      rec = _.extend({}, rec);\n      delete rec[key];\n    } else if (options.nullValue && value === null) {\n      urec[key] = options.nullValue;\n      rec = _.extend({}, rec, urec);\n    } else if (value !== null && typeof value === 'object') {\n      var precord = convertRecordForSerialization(value, options);\n      rec = Object.keys(precord).reduce(function(prec, pkey) {\n        prec[key + '.' + pkey] = precord[pkey];\n        return prec;\n      }, _.extend({}, rec));\n    }\n    return rec;\n  }, record);\n}\n\n/**\n * @private\n */\nfunction createPipelineStream(s1, s2) {\n  var pipeline = new PassThrough();\n  pipeline.on('pipe', function(source) {\n    source.unpipe(pipeline);\n    source.pipe(s1).pipe(s2);\n  });\n  pipeline.pipe = function(dest, options) {\n    return s2.pipe(dest, options);\n  };\n  return pipeline;\n}\n\n/** ---------------------------------------------------------------------- **/\n\n/**\n * @private\n */\nvar CSVStreamConverter = {\n  serialize: function(options) {\n    options = options || {};\n    return createPipelineStream(\n      RecordStream.map(function(record) {\n        return convertRecordForSerialization(record, options);\n      }),\n      CSV.serializeCSVStream(options)\n    );\n  },\n  parse: function(options) {\n    return CSV.parseCSVStream(options);\n  }\n};\n\n/**\n * @private\n */\nvar DataStreamConverters = RecordStream.DataStreamConverters = {\n  csv: CSVStreamConverter\n};\n","/**\n * @file Represents Salesforce record information\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _ = require('lodash/core');\n\n/**\n * A simple hash object including record field information\n *\n * @typedef {Object} Record\n */\n\n/**\n * Remote reference to record information\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection object\n * @param {String} type - SObject type\n * @param {String} id - Record ID\n */\nvar RecordReference = module.exports = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Retrieve record field information\n *\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Promise.<Record>}\n */\nRecordReference.prototype.retrieve = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, this.id, options, callback);\n};\n\n/**\n * Update record field information\n *\n * @param {Record} record - A Record which includes fields to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.update = function(record, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  record = _.clone(record);\n  record.Id = this.id;\n  return this._conn.update(this.type, record, options, callback);\n};\n\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype[\"delete\"] =\n/**\n * Synonym of Record#destroy()\n *\n * @method RecordReference#del\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.del =\n/**\n * Delete record field\n *\n * @method RecordReference#destroy\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult>} [callback] - Callback function\n * @returns {Promise.<RecordResult>}\n */\nRecordReference.prototype.destroy = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, this.id, options, callback);\n};\n\n/**\n * Get blob field as stream\n *\n * @param {String} fieldName - Blob field name\n * @returns {stream.Stream}\n */\nRecordReference.prototype.blob = function(fieldName) {\n  var url = [ this._conn._baseUrl(), 'sobjects', this.type, this.id, fieldName ].join('/');\n  return this._conn.request(url).stream();\n};\n","'use strict';\n\nvar required = require('./_required');\n\nmodule.exports = function(name) {\n  if (name === './jsforce' || name === 'jsforce') {\n    name = './core';\n  }\n  var m = required[name];\n  if (typeof m === 'undefined') {\n    throw new Error(\"Cannot find module '\" + name + \"'\");\n  }\n  return m;\n};\n","/**\n * @file Manages method call to SOAP endpoint\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    _ = require('lodash/core'),\n    xml2js = require('xml2js'),\n    HttpApi = require('./http-api');\n\n\n/**\n * Class for SOAP endpoint of Salesforce\n *\n * @protected\n * @class\n * @constructor\n * @param {Connection} conn - Connection instance\n * @param {Object} options - SOAP endpoint setting options\n * @param {String} options.endpointUrl - SOAP endpoint URL\n * @param {String} [options.xmlns] - XML namespace for method call (default is \"urn:partner.soap.sforce.com\")\n */\nvar SOAP = module.exports = function(conn, options) {\n  SOAP.super_.apply(this, arguments);\n  this._endpointUrl = options.endpointUrl;\n  this._xmlns = options.xmlns || 'urn:partner.soap.sforce.com';\n};\n\ninherits(SOAP, HttpApi);\n\n/**\n * Invoke SOAP call using method and arguments\n *\n * @param {String} method - Method name\n * @param {Object} args - Arguments for the method call\n * @param {Object} [schema] - Schema definition of response message\n * @param {Callback.<Object>} [callback] - Callback function\n * @returns {Promise.<Object>}\n */\nSOAP.prototype.invoke = function(method, args, schema, callback) {\n  if (typeof schema === 'function') {\n    callback = schema;\n    schema = null;\n  }\n  var message = {};\n  message[method] = args;\n  return this.request({\n    method: 'POST',\n    url: this._endpointUrl,\n    headers: {\n      'Content-Type': 'text/xml',\n      'SOAPAction': '\"\"'\n    },\n    message: message\n  }).then(function(res) {\n    return schema ? convertType(res, schema) : res;\n  }).thenCall(callback);\n};\n\n/* @private */\nfunction convertType(value, schema) {\n  if (_.isArray(value)) {\n    return value.map(function(v) {\n      return convertType(v, schema && schema[0])\n    });\n  } else if (_.isObject(value)) {\n    if (value.$ && value.$['xsi:nil'] === 'true') {\n      return null;\n    } else if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else {\n      var o = {};\n      for (var key in value) {\n        o[key] = convertType(value[key], schema && schema[key]);\n      }\n      return o;\n    }\n  } else {\n    if (_.isArray(schema)) {\n      return [ convertType(value, schema[0]) ];\n    } else if (_.isObject(schema)) {\n      return {};\n    } else {\n      switch(schema) {\n        case 'string':\n          return String(value);\n        case 'number':\n          return Number(value);\n        case 'boolean':\n          return value === 'true';\n        default:\n          return value;\n      }\n    }\n  }\n}\n\n/** @override **/\nSOAP.prototype.beforeSend = function(request) {\n  request.body = this._createEnvelope(request.message);\n};\n\n/** @override **/\nSOAP.prototype.isSessionExpired = function(response) {\n  return response.statusCode === 500 &&\n    /<faultcode>[a-zA-Z]+:INVALID_SESSION_ID<\\/faultcode>/.test(response.body);\n};\n\n/** @override **/\nSOAP.prototype.parseError = function(body) {\n  var error = lookupValue(body, [ /:Envelope$/, /:Body$/, /:Fault$/ ]);\n  return {\n    errorCode: error.faultcode,\n    message: error.faultstring\n  };\n};\n\n/** @override **/\nSOAP.prototype.getResponseBody = function(response) {\n  var body = SOAP.super_.prototype.getResponseBody.call(this, response);\n  return lookupValue(body, [ /:Envelope$/, /:Body$/, /.+/ ]);\n};\n\n/**\n * @private\n */\nfunction lookupValue(obj, propRegExps) {\n  var regexp = propRegExps.shift();\n  if (!regexp) {\n    return obj;\n  }\n  else {\n    for (var prop in obj) {\n      if (regexp.test(prop)) {\n        return lookupValue(obj[prop], propRegExps);\n      }\n    }\n    return null;\n  }\n}\n\n/**\n * @private\n */\nfunction toXML(name, value) {\n  if (_.isObject(name)) {\n    value = name;\n    name = null;\n  }\n  if (_.isArray(value)) {\n    return _.map(value, function(v) { return toXML(name, v); }).join('');\n  } else {\n    var attrs = [];\n    var elems = [];\n    if (_.isObject(value)) {\n      for (var k in value) {\n        var v = value[k];\n        if (k[0] === '@') {\n          k = k.substring(1);\n          attrs.push(k + '=\"' + v + '\"');\n        } else {\n          elems.push(toXML(k, v));\n        }\n      }\n      value = elems.join('');\n    } else {\n      value = String(value)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&apos;');\n    }\n    var startTag = name ? '<' + name + (attrs.length > 0 ? ' ' + attrs.join(' ') : '') + '>' : '';\n    var endTag = name ? '</' + name + '>' : '';\n    return  startTag + value + endTag;\n  }\n}\n\n/**\n * @private\n */\nSOAP.prototype._createEnvelope = function(message) {\n  var header = {};\n  var conn = this._conn;\n  if (conn.accessToken) {\n    header.SessionHeader = { sessionId: this._conn.accessToken };\n  }\n  if (conn.callOptions) {\n    header.CallOptions = conn.callOptions;\n  }\n  return [\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\n    '<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\"',\n    ' xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"',\n    ' xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">',\n    '<soapenv:Header xmlns=\"' + this._xmlns + '\">',\n    toXML(header),\n    '</soapenv:Header>',\n    '<soapenv:Body xmlns=\"' + this._xmlns + '\">',\n    toXML(message),\n    '</soapenv:Body>',\n    '</soapenv:Envelope>'\n  ].join('');\n};\n","/**\n * @file Represents Salesforce SObject\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    Record = require('./record'),\n    Query  = require('./query'),\n    Cache  = require('./cache'),\n    QuickAction = require('./quick-action');\n\n/**\n * A class for organizing all SObject access\n *\n * @constructor\n */\nvar SObject = module.exports = function(conn, type) {\n  this._conn = conn;\n  this.type = type;\n  var cacheOptions = { key: \"describe.\" + this.type };\n  this.describe$ = conn.cache.makeCacheable(this.describe, this, cacheOptions);\n  this.describe = conn.cache.makeResponseCacheable(this.describe, this, cacheOptions);\n\n  cacheOptions = { key: \"layouts.\" + this.type };\n  this.layouts$ = conn.cache.makeCacheable(this.layouts, this, cacheOptions);\n  this.layouts = conn.cache.makeResponseCacheable(this.layouts, this, cacheOptions);\n\n  cacheOptions = { key: \"compactLayouts.\" + this.type };\n  this.compactLayouts$ = conn.cache.makeCacheable(this.compactLayouts, this, cacheOptions);\n  this.compactLayouts = conn.cache.makeResponseCacheable(this.compactLayouts, this, cacheOptions);\n\n  cacheOptions = { key: \"approvalLayouts.\" + this.type };\n  this.approvalLayouts$ = conn.cache.makeCacheable(this.approvalLayouts, this, cacheOptions);\n  this.approvalLayouts = conn.cache.makeResponseCacheable(this.approvalLayouts, this, cacheOptions);\n};\n\n/**\n * Synonym of SObject#create()\n *\n * @method SObject#insert\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Create records\n *\n * @method SObject#create\n * @param {Record|Array.<Record>} records - A record or array of records to create\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.insert =\nSObject.prototype.create = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.create(this.type, records, options, callback);\n};\n\n/**\n * Retrieve specified records\n *\n * @param {String|Array.<String>} ids - A record ID or array of record IDs\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<Record|Array.<Record>>} [callback] - Callback function\n * @returns {Promise.<Record|Array.<Record>>}\n */\nSObject.prototype.retrieve = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.retrieve(this.type, ids, options, callback);\n};\n\n/**\n * Update records\n *\n * @param {Record|Array.<Record>} records - A record or array of records to update\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.update = function(records, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.update(this.type, records, options, callback);\n};\n\n/**\n * Upsert records\n *\n * @param {Record|Array.<Record>} records - Record or array of records to upsert\n * @param {String} extIdField - External ID field name\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype.upsert = function(records, extIdField, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.upsert(this.type, records, extIdField, options, callback);\n};\n\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#delete\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Synonym of SObject#destroy()\n *\n * @method SObject#del\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\n/**\n * Delete records\n *\n * @method SObject#destroy\n * @param {String|Array.<String>} ids - A ID or array of IDs to delete\n * @param {Object} [options] - Options for rest api.\n * @param {Callback.<RecordResult|Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<RecordResult|Array.<RecordResult>>}\n */\nSObject.prototype[\"delete\"] =\nSObject.prototype.del =\nSObject.prototype.destroy = function(ids, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  return this._conn.destroy(this.type, ids, options, callback);\n};\n\n/**\n * Describe SObject metadata\n *\n * @param {Callback.<DescribeSObjectResult>} [callback] - Callback function\n * @returns {Promise.<DescribeSObjectResult>}\n */\nSObject.prototype.describe = function(callback) {\n  return this._conn.describe(this.type, callback);\n};\n\n/**\n * Get record representation instance by given id\n *\n * @param {String} id - A record ID\n * @returns {RecordReference}\n */\nSObject.prototype.record = function(id) {\n  return new Record(this._conn, this.type, id);\n};\n\n/**\n * Find and fetch records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.find = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = options || {};\n  var config = {\n    fields: fields,\n    includes: options.includes,\n    table: this.type,\n    conditions: conditions,\n    limit: options.limit,\n    sort: options.sort,\n    offset: options.offset || options.skip\n  };\n  var query = new Query(this._conn, config, options);\n  query.setResponseTarget(Query.ResponseTargets.Records);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Fetch one record which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Object} [options] - Query options.\n * @param {Number} [options.limit] - Maximum number of records the query will return.\n * @param {Number} [options.offset] - Offset number where begins returning results.\n * @param {Number} [options.skip] - Synonym of options.offset.\n * @param {Callback.<Record>} [callback] - Callback function\n * @returns {Query.<Record>}\n */\nSObject.prototype.findOne = function(conditions, fields, options, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n    fields = null;\n    options = null;\n  } else if (typeof fields === 'function') {\n    callback = fields;\n    fields = null;\n    options = null;\n  } else if (typeof options === 'function') {\n    callback = options;\n    options = null;\n  }\n  options = _.extend(options || {}, { limit: 1 });\n  var query = this.find(conditions, fields, options);\n  query.setResponseTarget(Query.ResponseTargets.SingleRecord);\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n/**\n * Find and fetch records only by specifying fields to fetch.\n *\n * @param {Object|Array.<String>|String} [fields] - Fields to fetch. Format can be in JSON object (MongoDB-like), array of field names, or comma-separated field names.\n * @param {Callback.<Array.<Record>>} [callback] - Callback function\n * @returns {Query.<Array.<Record>>}\n */\nSObject.prototype.select = function(fields, callback) {\n  return this.find(null, fields, null, callback);\n};\n\n/**\n * Count num of records which matches given conditions\n *\n * @param {Object|String} [conditions] - Conditions in JSON object (MongoDB-like), or raw SOQL WHERE clause string.\n * @param {Callback.<Number>} [callback] - Callback function\n * @returns {Query.<Number>}\n */\nSObject.prototype.count = function(conditions, callback) {\n  if (typeof conditions === 'function') {\n    callback = conditions;\n    conditions = {};\n  }\n  var query = this.find(conditions, { \"count()\" : true });\n  query.setResponseTarget(\"Count\");\n  if (callback) { query.run(callback); }\n  return query;\n};\n\n\n/**\n * Call Bulk#load() to execute bulkload, returning batch object\n *\n * @param {String} operation - Bulk load operation ('insert', 'update', 'upsert', 'delete', or 'hardDelete')\n * @param {Object} [options] - Options for bulk loading operation\n * @param {String} [options.extIdField] - External ID field name (used when upsert operation).\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulkload. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.bulkload = function(operation, options, input, callback) {\n  return this._conn.bulk.load(this.type, operation, options, input, callback);\n};\n\n/**\n * Synonym of SObject#createBulk()\n *\n * @method SObject#insertBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly insert input data using bulk API\n *\n * @method SObject#createBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk insert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.insertBulk =\nSObject.prototype.createBulk = function(input, callback) {\n  return this.bulkload(\"insert\", input, callback);\n};\n\n/**\n * Bulkly update records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk update Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.updateBulk = function(input, callback) {\n  return this.bulkload(\"update\", input, callback);\n};\n\n/**\n * Bulkly upsert records by input data using bulk API\n *\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk upsert. Accepts array of records, CSv string, and CSV data input stream.\n * @param {String} [options.extIdField] - External ID field name\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.upsertBulk = function(input, extIdField, callback) {\n  return this.bulkload(\"upsert\", { extIdField: extIdField }, input, callback);\n};\n\n/**\n * Synonym of SObject#destroyBulk()\n *\n * @method SObject#deleteBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly delete records specified by input data using bulk API\n *\n * @method SObject#destroyBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteBulk =\nSObject.prototype.destroyBulk = function(input, callback) {\n  return this.bulkload(\"delete\", input, callback);\n};\n\n/**\n * Synonym of SObject#destroyHardBulk()\n *\n * @method SObject#deleteHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\n/**\n * Bulkly hard delete records specified in input data using bulk API\n *\n * @method SObject#destroyHardBulk\n * @param {Array.<Record>|stream.Stream|String} [input] - Input source for bulk delete. Accepts array of records, CSv string, and CSV data input stream.\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Bulk~Batch}\n */\nSObject.prototype.deleteHardBulk =\nSObject.prototype.destroyHardBulk = function(input, callback) {\n  return this.bulkload(\"hardDelete\", input, callback);\n};\n\n/**\n * Retrieve recently accessed records\n *\n * @param {Callback.<Array.<RecordResult>>} [callback] - Callback function\n * @returns {Promise.<Array.<RecordResult>>}\n */\nSObject.prototype.recent = function (callback) {\n  return this._conn.recent(this.type, callback);\n};\n\n/**\n * Retrieve the updated records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<UpdatedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<UpdatedRecordsInfo>}\n */\nSObject.prototype.updated = function (start, end, callback) {\n  return this._conn.updated(this.type, start, end, callback);\n};\n\n/**\n * Retrieve the deleted records\n *\n * @param {String|Date} start - start date or string representing the start of the interval\n * @param {String|Date} end - start date or string representing the end of the interval, must be > start\n * @param {Callback.<DeletedRecordsInfo>} [callback] - Callback function\n * @returns {Promise.<DeletedRecordsInfo>}\n */\nSObject.prototype.deleted = function (start, end, callback) {\n  return this._conn.deleted(this.type, start, end, callback);\n};\n\n/**\n * @typedef {Object} LayoutInfo\n * @prop {Array.<Object>} layouts - Array of layouts\n * @prop {Array.<Object>} recordTypeMappings - Array of record type mappings\n */\n/**\n * Describe layout information for SObject\n *\n * @param {String} [layoutName] - Name of named layout. (e.g. UserAlt in User SObject)\n * @param {Callback.<LayoutInfo>} [callback] - Callback function\n * @returns {Promise.<LayoutInfo>}\n */\nSObject.prototype.layouts = function(layoutName, callback) {\n  if (typeof layoutName === 'function') {\n    callback = layoutName;\n    layoutName = null;\n  }\n  var url = \"/sobjects/\" + this.type + \"/describe/\" + (layoutName ? \"namedLayouts/\"+layoutName : \"layouts\");\n  return this._conn.request(url, callback);\n};\n\n/**\n * @typedef {Object} CompactLayoutInfo\n * @prop {Array.<Object>} compactLayouts - Array of compact layouts\n * @prop {String} defaultCompactLayoutId - ID of default compact layout\n * @prop {Array.<Object>} recordTypeCompactLayoutMappings - Array of record type mappings\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<CompactLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<CompactLayoutInfo>}\n */\nSObject.prototype.compactLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/compactLayouts\";\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * @typedef {Object} ApprovalLayoutInfo\n * @prop {Array.<Object>} approvalLayouts - Array of approval layouts\n */\n/**\n * Describe compact layout information defined for SObject\n *\n * @param {Callback.<ApprovalLayoutInfo>} [callback] - Callback function\n * @returns {Promise.<ApprovalLayoutInfo>}\n */\nSObject.prototype.approvalLayouts = function(callback) {\n  var url = \"/sobjects/\" + this.type + \"/describe/approvalLayouts\";\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list of list views for the SObject\n *\n * @param {Callback.<ListViewsInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewsInfo>}\n */\nSObject.prototype.listviews = function(callback) {\n  var url = this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews';\n  return this._conn.request(url, callback);\n};\n\n/**\n * Returns the list view info in specifed view id\n *\n * @param {String} id - List view ID\n * @returns {ListView}\n */\nSObject.prototype.listview = function(id) {\n  return new ListView(this._conn, this.type, id);\n};\n\n/**\n * Returns all registered quick actions for the SObject\n *\n * @param {Callback.<Array.<QuickAction~QuickActionInfo>>} [callback] - Callback function\n * @returns {Promise.<Array.<QuickAction~QuickActionInfo>>}\n */\nSObject.prototype.quickActions = function(callback) {\n  return this._conn.request(\"/sobjects/\" + this.type + \"/quickActions\").thenCall(callback);\n};\n\n/**\n * Get reference for specified quick aciton in the SObject\n *\n * @param {String} actionName - Name of the quick action\n * @returns {QuickAction}\n */\nSObject.prototype.quickAction = function(actionName) {\n  return new QuickAction(this._conn, \"/sobjects/\" + this.type + \"/quickActions/\" + actionName);\n};\n\n\n/**\n * A class for organizing list view information\n *\n * @protected\n * @class ListView\n * @param {Connection} conn - Connection instance\n * @param {SObject} type - SObject type\n * @param {String} id - List view ID\n */\nvar ListView = function(conn, type, id) {\n  this._conn = conn;\n  this.type = type;\n  this.id = id;\n};\n\n/**\n * Executes query for the list view and returns the resulting data and presentation information.\n *\n * @param {Callback.<ListViewResultInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewResultInfo>}\n */\nListView.prototype.results = function(callback) {\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/results';\n  return this._conn.request(url, callback);\n};\n\n\n/**\n * Returns detailed information about a list view\n *\n * @param {Object} [options] - Identity call options\n * @param {Object} [options.headers] - Additional HTTP request headers sent in identity request\n * @param {Callback.<ListViewDescribeInfo>} [callback] - Callback function\n * @returns {Promise.<ListViewDescribeInfo>}\n */\nListView.prototype.describe = function(options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  var url =  this._conn._baseUrl() + '/sobjects/' + this.type + '/listviews/' + this.id + '/describe';\n  return this._conn.request({ method: 'GET', url: url, headers: options.headers }, callback);\n};\n\n/**\n * Explain plan for executing list view\n *\n * @param {Callback.<ExplainInfo>} [callback] - Callback function\n * @returns {Promise.<ExplainInfo>}\n */\nListView.prototype.explain = function(callback) {\n  var url = \"/query/?explain=\" + this.id;\n  return this._conn.request(url, callback);\n};\n","/**\n * @file Create and build SOQL string from configuration\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\n */\n\n'use strict';\n\nvar _      = require('lodash/core'),\n    SfDate = require(\"./date\");\n\n\n/**\n * Create SOQL\n * @private\n */\nfunction createSOQL(query) {\n  var soql = [\n    \"SELECT \",\n    createFieldsClause(query.fields, query.includes),\n    \" FROM \",\n    query.table\n  ].join(\"\");\n  var cond = createConditionClause(query.conditions);\n  if (cond) {\n    soql += \" WHERE \" + cond;\n  }\n  var orderby = createOrderByClause(query.sort);\n  if (orderby) {\n    soql += \" ORDER BY \" + orderby;\n  }\n  if (query.limit) {\n    soql += \" LIMIT \" + query.limit;\n  }\n  if (query.offset) {\n    soql += \" OFFSET \" + query.offset;\n  }\n  return soql;\n}\n\n/** @private **/\nfunction createFieldsClause(fields, childQueries) {\n  childQueries = _.map(_.values(childQueries || {}), function(cquery) {\n    return '(' + createSOQL(cquery) + ')';\n  });\n  return (fields || [ \"Id\" ]).concat(childQueries).join(', ');\n}\n\n/** @private **/\nfunction createConditionClause(conditions, operator, depth) {\n  if (_.isString(conditions)) {\n    return conditions;\n  }\n  conditions = conditions || [];\n  operator = operator || \"AND\";\n  depth = depth || 0;\n  if (!isArray(conditions)) { // if passed in hash object\n    conditions = _.keys(conditions).map(function(key) {\n      return {\n        key: key,\n        value: conditions[key]\n      };\n    });\n  } else {\n    conditions = conditions.map(function(cond) {\n      var conds = [];\n      for (var key in cond) {\n        conds.push({\n          key: key,\n          value: cond[key]\n        });\n      }\n      return conds.length>1 ? conds : conds[0];\n    });\n  }\n  conditions = conditions.map(function(cond) {\n    var d = depth+1, op;\n    switch (cond.key) {\n      case \"$or\" :\n      case \"$and\" :\n      case \"$not\" :\n        if (operator !== \"NOT\" && conditions.length === 1) {\n          d = depth; // not change tree depth\n        }\n        op = cond.key === \"$or\" ? \"OR\" :\n             cond.key === \"$and\" ? \"AND\" :\n             \"NOT\";\n        return createConditionClause(cond.value, op, d);\n      default:\n        return createFieldExpression(cond.key, cond.value);\n    }\n  }).filter(function(expr) { return expr; });\n\n  var paren;\n  if (operator === 'NOT') {\n    paren = depth > 0;\n    return (paren ? \"(\" : \"\") + \"NOT \" + conditions[0] + (paren ? \")\" : \"\");\n  } else {\n    paren = depth > 0 && conditions.length > 1;\n    return (paren ? \"(\" : \"\") + conditions.join(\" \"+operator+\" \") + (paren ? \")\" : \"\");\n  }\n}\n\nvar opMap = {\n  \"=\"     : \"=\",\n  \"$eq\"   : \"=\",\n  \"!=\"    : \"!=\",\n  \"$ne\"   : \"!=\",\n  \">\"     : \">\",\n  \"$gt\"   : \">\",\n  \"<\"     : \"<\",\n  \"$lt\"   : \"<\",\n  \">=\"    : \">=\",\n  \"$gte\"  : \">=\",\n  \"<=\"    : \"<=\",\n  \"$lte\"  : \"<=\",\n  \"$like\" : \"LIKE\",\n  \"$nlike\" : \"NOT LIKE\",\n  \"$in\"   : \"IN\",\n  \"$nin\"  : \"NOT IN\",\n  \"$includes\" : \"INCLUDES\",\n  \"$excludes\" : \"EXCLUDES\",\n  \"$exists\" : \"EXISTS\"\n};\n\n/** @private **/\nfunction createFieldExpression(field, value) {\n  var op = \"$eq\";\n\n  // Assume the `$in` operator if value is an array and none was supplied.\n  if (_.isArray(value)) { op = \"$in\"; }\n  // Otherwise, if an object was passed then process the supplied ops.\n  else if (_.isObject(value)) {\n    var _value;\n    for (var k in value) {\n      if (k[0] === \"$\") {\n        op = k;\n        value = value[k];\n        break;\n      }\n    }\n  }\n  var sfop = opMap[op];\n  if (!sfop || _.isUndefined(value)) { return null; }\n  var valueExpr = createValueExpression(value);\n  if (_.isUndefined(valueExpr)) { return null; }\n  switch (sfop) {\n    case \"NOT LIKE\":\n      return \"(\" + [ \"NOT\", field, 'LIKE', valueExpr ].join(\" \") + \")\";\n    case \"EXISTS\":\n      return [ field, value ? \"!=\" : \"=\", \"null\" ].join(\" \");\n    default:\n      return [ field, sfop, valueExpr ].join(\" \");\n  }\n}\n\n/** @private **/\nfunction createValueExpression(value) {\n  if (isArray(value)) {\n    return value.length > 0 ?\n           \"(\" + value.map(createValueExpression).join(\", \") + \")\" :\n           undefined;\n  }\n  if (value instanceof SfDate) {\n    return value.toString();\n  }\n  if (_.isString(value)) {\n    return \"'\" + escapeSOQLString(value) + \"'\";\n  }\n  if (_.isNumber(value)) {\n    return (value).toString();\n  }\n  if (_.isNull(value)) {\n    return \"null\";\n  }\n  return value;\n}\n\n/** @private **/\nfunction escapeSOQLString(str) {\n  return String(str || '').replace(/'/g, \"\\\\'\");\n}\n\n/** @private **/\nfunction isArray(a) {\n  return _.isObject(a) && _.isFunction(a.pop);\n}\n\n\n/** @private **/\nfunction createOrderByClause(sort) {\n  sort = sort || [];\n  if (_.isString(sort)) {\n    if (/,|\\s+(asc|desc)\\s*$/.test(sort)) {\n      // must be specified in pure \"order by\" clause. Return raw config.\n      return sort;\n    }\n    // sort order in mongoose-style expression.\n    // e.g. \"FieldA -FieldB\" => \"ORDER BY FieldA ASC, FieldB DESC\"\n    sort = sort.split(/\\s+/).map(function(field) {\n      var dir = \"ASC\"; // ascending\n      var flag = field[0];\n      if (flag === '-') {\n        dir = \"DESC\";\n        field = field.substring(1);\n      } else if (flag === '+') {\n        field = field.substring(1);\n      }\n      return [ field, dir ];\n    });\n  } else if (!isArray(sort)) {\n    sort = _.keys(sort).map(function(field) {\n      var dir = sort[field];\n      return [ field, dir ];\n    });\n  }\n  return sort.map(function(s) {\n    var field = s[0], dir = s[1];\n    switch (String(dir)) {\n      case \"DESC\":\n      case \"desc\":\n      case \"descending\":\n      case \"-\":\n      case \"-1\":\n        dir = \"DESC\";\n        break;\n      default:\n        dir = \"ASC\";\n    }\n    return field + \" \" + dir;\n  }).join(\", \");\n}\n\n\nexports.createSOQL = createSOQL;\n","/*global process, Sfdc */\n\n'use strict';\n\nvar inherits = require('inherits'),\n    Promise = require('./promise');\n\n/* */\n\nvar request = require('request'),\n    canvas = require('./browser/canvas'),\n    jsonp = require('./browser/jsonp');\n\n// set options if defaults setting is available in request, which is not available in xhr module.\nif (request.defaults) {\n  var defaults = {\n    followAllRedirects: true\n  };\n  if (process.env.HTTP_PROXY) {\n    defaults.proxy = process.env.HTTP_PROXY;\n  }\n  if (parseInt(process.env.HTTP_TIMEOUT)) {\n    defaults.timeout = parseInt(process.env.HTTP_TIMEOUT);\n  }\n  request = request.defaults(defaults);\n}\n\nvar baseUrl;\nif (typeof window === 'undefined') {\n  baseUrl = process.env.LOCATION_BASE_URL || \"\";\n} else {\n  var apiHost = normalizeApiHost(window.location.host);\n  baseUrl = apiHost ? \"https://\" + apiHost : \"\";\n}\n\n/**\n * Add stream() method to promise (and following promise chain), to access original request stream.\n * @private\n */\nfunction streamify(promise, factory) {\n  var _then = promise.then;\n  promise.then = function() {\n    factory();\n    var newPromise = _then.apply(promise, arguments);\n    return streamify(newPromise, factory);\n  };\n  promise.stream = factory;\n  return promise;\n}\n\n/**\n * Normarize Salesforce API host name\n * @private\n */\nfunction normalizeApiHost(apiHost) {\n  var m = /(\\w+)\\.(visual\\.force|salesforce)\\.com$/.exec(apiHost);\n  if (m) {\n    apiHost = m[1] + \".salesforce.com\";\n  }\n  return apiHost;\n}\n\n/**\n * Class for HTTP request transport\n *\n * @class\n * @protected\n */\nvar Transport = module.exports = function() {};\n\n/**\n * Make HTTP request, returns promise instead of stream\n *\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nTransport.prototype.httpRequest = function(params, callback) {\n  var deferred = Promise.defer();\n  var req;\n  var httpRequest = this._getHttpRequestModule();\n  var createRequest = function() {\n    if (!req) {\n      req = httpRequest(params, function(err, response) {\n        if (err) {\n          deferred.reject(err);\n        } else {\n          deferred.resolve(response);\n        }\n      });\n    }\n    return req;\n  };\n  return streamify(deferred.promise, createRequest).thenCall(callback);\n};\n\n/** @protected **/\nTransport.prototype._getHttpRequestModule = function() {\n  return request;\n};\n\n\n/**\n * Class for JSONP request transport\n * @class Transport~JsonpTransport\n * @protected\n * @extends Transport\n * @param {String} jsonpParam - Callback parameter name for JSONP invokation.\n */\nvar JsonpTransport = Transport.JsonpTransport = function(jsonpParam) {\n  this._jsonpParam = jsonpParam;\n};\n\ninherits(JsonpTransport, Transport);\n\n/** @protected **/\nJsonpTransport.prototype._getHttpRequestModule = function() {\n  return jsonp.createRequest(this._jsonpParam);\n};\n\nJsonpTransport.supported = jsonp.supported;\n\n\n/**\n * Class for Sfdc Canvas request transport\n * @class Transport~CanvasTransport\n * @protected\n * @extends Transport\n * @param {Object} signedRequest - Parsed signed request object\n */\nvar CanvasTransport = Transport.CanvasTransport = function(signedRequest) {\n  this._signedRequest = signedRequest;\n};\n\ninherits(CanvasTransport, Transport);\n\n/** @protected **/\nCanvasTransport.prototype._getHttpRequestModule = function() {\n  return canvas.createRequest(this._signedRequest);\n};\n\nCanvasTransport.supported = canvas.supported;\n\n\n/**\n * Class for HTTP request transport using AJAX proxy service\n *\n * @class Transport~ProxyTransport\n * @protected\n * @extends Transport\n * @param {String} proxyUrl - AJAX Proxy server URL\n */\nvar ProxyTransport = Transport.ProxyTransport = function(proxyUrl) {\n  this._proxyUrl = proxyUrl;\n};\n\ninherits(ProxyTransport, Transport);\n\n/**\n * Make HTTP request via AJAX proxy\n *\n * @method Transport~ProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Calback Function\n * @returns {Promise.<Object>}\n */\nProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: this._proxyUrl + '?' + Date.now() + \".\" + (\"\" + Math.random()).substring(2),\n    headers: {\n      'salesforceproxy-endpoint': url\n    }\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return ProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n\n\n/**\n * Class for HTTP request transport using a proxy server\n *\n * @class Transport~HttpProxyTransport\n * @protected\n * @extends Transport\n * @param {String} httpProxy - URL of the HTTP proxy server\n */\nvar HttpProxyTransport = Transport.HttpProxyTransport = function(httpProxy) {\n  this._httpProxy = httpProxy;\n};\n\ninherits(HttpProxyTransport, Transport);\n\n/**\n * Make HTTP request via proxy server\n *\n * @method Transport~HttpProxyTransport#httpRequest\n * @param {Object} params - HTTP request\n * @param {Callback.<Object>} [callback] - Callback Function\n * @returns {Promise.<Object>}\n */\nHttpProxyTransport.prototype.httpRequest = function(params, callback) {\n  var url = params.url;\n  if (url.indexOf(\"/\") === 0) {\n    url = baseUrl + url;\n  }\n  var proxyParams = {\n    method: params.method,\n    url: params.url,\n    proxy: this._httpProxy,\n    headers: {}\n  };\n  if (params.body || params.body === \"\") {\n    proxyParams.body = params.body;\n  }\n  if (params.headers) {\n    for (var name in params.headers) {\n      proxyParams.headers[name] = params.headers[name];\n    }\n  }\n  return HttpProxyTransport.super_.prototype.httpRequest.call(this, proxyParams, callback);\n};\n","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  get: function () {\n    if (!(this instanceof Buffer)) {\n      return undefined\n    }\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('Invalid typed array length')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (isArrayBuffer(value) || (value && isArrayBuffer(value.buffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  return fromObject(value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nBuffer.prototype.__proto__ = Uint8Array.prototype\nBuffer.__proto__ = Uint8Array\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  buf.__proto__ = Buffer.prototype\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if (ArrayBuffer.isView(obj) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n        return createBuffer(0)\n      }\n      return fromArrayLike(obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(obj.data)\n    }\n  }\n\n  throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (ArrayBuffer.isView(buf)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isArrayBuffer(string)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  newBuf.__proto__ = Buffer.prototype\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffers from another context (i.e. an iframe) do not pass the `instanceof` check\n// but they should be treated as valid. See: https://github.com/feross/buffer/issues/166\nfunction isArrayBuffer (obj) {\n  return obj instanceof ArrayBuffer ||\n    (obj != null && obj.constructor != null && obj.constructor.name === 'ArrayBuffer' &&\n      typeof obj.byteLength === 'number')\n}\n\nfunction numberIsNaN (obj) {\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","// Generated by CoffeeScript 1.12.7\nvar Parser, StringDecoder, isObjLiteral, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nmodule.exports = function() {\n  var callback, called, chunks, data, err, options, parser;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n    if (typeof callback !== 'function') {\n      throw Error(\"Invalid callback argument: \" + (JSON.stringify(callback)));\n    }\n    if (!(typeof data === 'string' || Buffer.isBuffer(arguments[0]))) {\n      return callback(Error(\"Invalid data argument: \" + (JSON.stringify(data))));\n    }\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'string' || Buffer.isBuffer(arguments[0])) {\n      data = arguments[0];\n    } else if (isObjLiteral(arguments[0])) {\n      options = arguments[0];\n    } else {\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[0]));\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else if (isObjLiteral(arguments[1])) {\n      if (options) {\n        err = 'Invalid arguments: got options twice as first and second arguments';\n      } else {\n        options = arguments[1];\n      }\n    } else {\n      err = \"Invalid first argument: \" + (JSON.stringify(arguments[1]));\n    }\n    if (err) {\n      if (!callback) {\n        throw Error(err);\n      } else {\n        return callback(Error(err));\n      }\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  parser = new Parser(options);\n  if (data != null) {\n    process.nextTick(function() {\n      parser.write(data);\n      return parser.end();\n    });\n  }\n  if (callback) {\n    called = false;\n    chunks = options.objname ? {} : [];\n    parser.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = parser.read()) {\n        if (options.objname) {\n          results.push(chunks[chunk[0]] = chunk[1]);\n        } else {\n          results.push(chunks.push(chunk));\n        }\n      }\n      return results;\n    });\n    parser.on('error', function(err) {\n      called = true;\n      return callback(err);\n    });\n    parser.on('end', function() {\n      if (!called) {\n        return callback(null, chunks);\n      }\n    });\n  }\n  return parser;\n};\n\nParser = function(options) {\n  var base, base1, base10, base11, base12, base13, base14, base15, base16, base2, base3, base4, base5, base6, base7, base8, base9, k, v;\n  if (options == null) {\n    options = {};\n  }\n  this.options = {};\n  for (k in options) {\n    v = options[k];\n    this.options[k] = v;\n  }\n  this.options.objectMode = true;\n  stream.Transform.call(this, this.options);\n  if ((base = this.options).rowDelimiter == null) {\n    base.rowDelimiter = null;\n  }\n  if (typeof this.options.rowDelimiter === 'string') {\n    this.options.rowDelimiter = [this.options.rowDelimiter];\n  }\n  if ((base1 = this.options).delimiter == null) {\n    base1.delimiter = ',';\n  }\n  if (this.options.quote !== void 0 && !this.options.quote) {\n    this.options.quote = '';\n  }\n  if ((base2 = this.options).quote == null) {\n    base2.quote = '\"';\n  }\n  if ((base3 = this.options).escape == null) {\n    base3.escape = '\"';\n  }\n  if ((base4 = this.options).columns == null) {\n    base4.columns = null;\n  }\n  if ((base5 = this.options).comment == null) {\n    base5.comment = '';\n  }\n  if ((base6 = this.options).objname == null) {\n    base6.objname = false;\n  }\n  if ((base7 = this.options).trim == null) {\n    base7.trim = false;\n  }\n  if ((base8 = this.options).ltrim == null) {\n    base8.ltrim = false;\n  }\n  if ((base9 = this.options).rtrim == null) {\n    base9.rtrim = false;\n  }\n  if ((base10 = this.options).auto_parse == null) {\n    base10.auto_parse = false;\n  }\n  if ((base11 = this.options).auto_parse_date == null) {\n    base11.auto_parse_date = false;\n  }\n  if (this.options.auto_parse_date === true) {\n    this.options.auto_parse_date = function(value) {\n      var m;\n      m = Date.parse(value);\n      if (!isNaN(m)) {\n        value = new Date(m);\n      }\n      return value;\n    };\n  }\n  if ((base12 = this.options).relax == null) {\n    base12.relax = false;\n  }\n  if ((base13 = this.options).relax_column_count == null) {\n    base13.relax_column_count = false;\n  }\n  if ((base14 = this.options).skip_empty_lines == null) {\n    base14.skip_empty_lines = false;\n  }\n  if ((base15 = this.options).max_limit_on_data_read == null) {\n    base15.max_limit_on_data_read = 128000;\n  }\n  if ((base16 = this.options).skip_lines_with_empty_values == null) {\n    base16.skip_lines_with_empty_values = false;\n  }\n  this.lines = 0;\n  this.count = 0;\n  this.skipped_line_count = 0;\n  this.empty_line_count = 0;\n  this.is_int = /^(\\-|\\+)?([1-9]+[0-9]*)$/;\n  this.is_float = function(value) {\n    return (value - parseFloat(value) + 1) >= 0;\n  };\n  this._ = {\n    decoder: new StringDecoder(),\n    quoting: false,\n    commenting: false,\n    field: null,\n    nextChar: null,\n    closingQuote: 0,\n    line: [],\n    chunks: [],\n    rawBuf: '',\n    buf: '',\n    rowDelimiterLength: this.options.rowDelimiter ? Math.max.apply(Math, this.options.rowDelimiter.map(function(v) {\n      return v.length;\n    })) : void 0\n  };\n  return this;\n};\n\nutil.inherits(Parser, stream.Transform);\n\nmodule.exports.Parser = Parser;\n\nParser.prototype._transform = function(chunk, encoding, callback) {\n  var err;\n  if (chunk instanceof Buffer) {\n    chunk = this._.decoder.write(chunk);\n  }\n  err = this.__write(chunk, false);\n  if (err) {\n    return this.emit('error', err);\n  }\n  return callback();\n};\n\nParser.prototype._flush = function(callback) {\n  var err;\n  err = this.__write(this._.decoder.end(), true);\n  if (err) {\n    return this.emit('error', err);\n  }\n  if (this._.quoting) {\n    this.emit('error', new Error(\"Quoted field not terminated at line \" + (this.lines + 1)));\n    return;\n  }\n  if (this._.line.length > 0) {\n    err = this.__push(this._.line);\n    if (err) {\n      return callback(err);\n    }\n  }\n  return callback();\n};\n\nParser.prototype.__push = function(line) {\n  var call_column_udf, columns, err, field, i, j, len, lineAsColumns, rawBuf, ref, row;\n  if (this.options.skip_lines_with_empty_values && line.join('').trim() === '') {\n    return;\n  }\n  row = null;\n  if (this.options.columns === true) {\n    this.options.columns = line;\n    rawBuf = '';\n    return;\n  } else if (typeof this.options.columns === 'function') {\n    call_column_udf = function(fn, line) {\n      var columns, err;\n      try {\n        columns = fn.call(null, line);\n        return [null, columns];\n      } catch (error) {\n        err = error;\n        return [err];\n      }\n    };\n    ref = call_column_udf(this.options.columns, line), err = ref[0], columns = ref[1];\n    if (err) {\n      return err;\n    }\n    this.options.columns = columns;\n    rawBuf = '';\n    return;\n  }\n  if (!this._.line_length && line.length > 0) {\n    this._.line_length = this.options.columns ? this.options.columns.length : line.length;\n  }\n  if (line.length === 1 && line[0] === '') {\n    this.empty_line_count++;\n  } else if (line.length !== this._.line_length) {\n    if (this.options.relax_column_count) {\n      this.count++;\n      this.skipped_line_count++;\n    } else if (this.options.columns != null) {\n      return Error(\"Number of columns on line \" + this.lines + \" does not match header\");\n    } else {\n      return Error(\"Number of columns is inconsistent on line \" + this.lines);\n    }\n  } else {\n    this.count++;\n  }\n  if (this.options.columns != null) {\n    lineAsColumns = {};\n    for (i = j = 0, len = line.length; j < len; i = ++j) {\n      field = line[i];\n      if (this.options.columns[i] === false) {\n        continue;\n      }\n      lineAsColumns[this.options.columns[i]] = field;\n    }\n    if (this.options.objname) {\n      row = [lineAsColumns[this.options.objname], lineAsColumns];\n    } else {\n      row = lineAsColumns;\n    }\n  } else {\n    row = line;\n  }\n  if (this.count < this.options.from) {\n    return;\n  }\n  if (this.count > this.options.to) {\n    return;\n  }\n  if (this.options.raw) {\n    this.push({\n      raw: this._.rawBuf,\n      row: row\n    });\n    this._.rawBuf = '';\n  } else {\n    this.push(row);\n  }\n  return null;\n};\n\nParser.prototype.__write = function(chars, end) {\n  var areNextCharsDelimiter, areNextCharsRowDelimiters, auto_parse, char, err, escapeIsQuote, i, isDelimiter, isEscape, isNextCharAComment, isQuote, isRowDelimiter, isRowDelimiterLength, is_float, is_int, l, ltrim, nextCharPos, ref, ref1, ref2, ref3, ref4, ref5, remainingBuffer, rowDelimiter, rtrim, wasCommenting;\n  is_int = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_int === 'function') {\n        return _this.is_int(value);\n      } else {\n        return _this.is_int.test(value);\n      }\n    };\n  })(this);\n  is_float = (function(_this) {\n    return function(value) {\n      if (typeof _this.is_float === 'function') {\n        return _this.is_float(value);\n      } else {\n        return _this.is_float.test(value);\n      }\n    };\n  })(this);\n  auto_parse = (function(_this) {\n    return function(value) {\n      if (!_this.options.auto_parse) {\n        return value;\n      }\n      if (typeof _this.options.auto_parse === 'function') {\n        return _this.options.auto_parse(value);\n      }\n      if (is_int(value)) {\n        value = parseInt(value);\n      } else if (is_float(value)) {\n        value = parseFloat(value);\n      } else if (_this.options.auto_parse_date) {\n        value = _this.options.auto_parse_date(value);\n      }\n      return value;\n    };\n  })(this);\n  ltrim = this.options.trim || this.options.ltrim;\n  rtrim = this.options.trim || this.options.rtrim;\n  chars = this._.buf + chars;\n  l = chars.length;\n  i = 0;\n  if (this.lines === 0 && 0xFEFF === chars.charCodeAt(0)) {\n    i++;\n  }\n  while (i < l) {\n    if (!end) {\n      remainingBuffer = chars.substr(i, l - i);\n      if ((!this.options.rowDelimiter && i + 3 > l) || (!this._.commenting && l - i < this.options.comment.length && this.options.comment.substr(0, l - i) === remainingBuffer) || (this.options.rowDelimiter && l - i < this._.rowDelimiterLength && this.options.rowDelimiter.some(function(rd) {\n        return rd.substr(0, l - i) === remainingBuffer;\n      })) || (this.options.rowDelimiter && this._.quoting && l - i < (this.options.quote.length + this._.rowDelimiterLength) && this.options.rowDelimiter.some((function(_this) {\n        return function(rd) {\n          return (_this.options.quote + rd).substr(0, l - i) === remainingBuffer;\n        };\n      })(this))) || (l - i <= this.options.delimiter.length && this.options.delimiter.substr(0, l - i) === remainingBuffer) || (l - i <= this.options.escape.length && this.options.escape.substr(0, l - i) === remainingBuffer)) {\n        break;\n      }\n    }\n    char = this._.nextChar ? this._.nextChar : chars.charAt(i);\n    this._.nextChar = l > i + 1 ? chars.charAt(i + 1) : '';\n    if (this.options.raw) {\n      this._.rawBuf += char;\n    }\n    if (this.options.rowDelimiter == null) {\n      nextCharPos = i;\n      rowDelimiter = null;\n      if (!this._.quoting && (char === '\\n' || char === '\\r')) {\n        rowDelimiter = char;\n        nextCharPos += 1;\n      } else if (this._.quoting && char === this.options.quote && ((ref = this._.nextChar) === '\\n' || ref === '\\r')) {\n        rowDelimiter = this._.nextChar;\n        nextCharPos += 2;\n        if (this.raw) {\n          rawBuf += this._.nextChar;\n        }\n      }\n      if (rowDelimiter) {\n        if (rowDelimiter === '\\r' && chars.charAt(nextCharPos) === '\\n') {\n          rowDelimiter += '\\n';\n        }\n        this.options.rowDelimiter = [rowDelimiter];\n        this._.rowDelimiterLength = rowDelimiter.length;\n      }\n    }\n    if (!this._.commenting && char === this.options.escape) {\n      escapeIsQuote = this.options.escape === this.options.quote;\n      isEscape = this._.nextChar === this.options.escape;\n      isQuote = this._.nextChar === this.options.quote;\n      if (!(escapeIsQuote && (this._.field == null) && !this._.quoting) && (isEscape || isQuote)) {\n        i++;\n        char = this._.nextChar;\n        this._.nextChar = chars.charAt(i + 1);\n        if (this._.field == null) {\n          this._.field = '';\n        }\n        this._.field += char;\n        if (this.options.raw) {\n          this._.rawBuf += char;\n        }\n        i++;\n        continue;\n      }\n    }\n    if (!this._.commenting && char === this.options.quote) {\n      if (this._.quoting) {\n        areNextCharsRowDelimiters = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\n          return chars.substr(i + 1, rd.length) === rd;\n        });\n        areNextCharsDelimiter = chars.substr(i + 1, this.options.delimiter.length) === this.options.delimiter;\n        isNextCharAComment = this._.nextChar === this.options.comment;\n        if (this._.nextChar && !areNextCharsRowDelimiters && !areNextCharsDelimiter && !isNextCharAComment) {\n          if (this.options.relax) {\n            this._.quoting = false;\n            if (this._.field) {\n              this._.field = \"\" + this.options.quote + this._.field;\n            }\n          } else {\n            return Error(\"Invalid closing quote at line \" + (this.lines + 1) + \"; found \" + (JSON.stringify(this._.nextChar)) + \" instead of delimiter \" + (JSON.stringify(this.options.delimiter)));\n          }\n        } else {\n          this._.quoting = false;\n          this._.closingQuote = this.options.quote.length;\n          i++;\n          if (end && i === l) {\n            this._.line.push(auto_parse(this._.field || ''));\n            this._.field = null;\n          }\n          continue;\n        }\n      } else if (!this._.field) {\n        this._.quoting = true;\n        i++;\n        continue;\n      } else if ((this._.field != null) && !this.options.relax) {\n        return Error(\"Invalid opening quote at line \" + (this.lines + 1));\n      }\n    }\n    isRowDelimiter = this.options.rowDelimiter && this.options.rowDelimiter.some(function(rd) {\n      return chars.substr(i, rd.length) === rd;\n    });\n    if (isRowDelimiter || (end && i === l - 1)) {\n      this.lines++;\n    }\n    wasCommenting = false;\n    if (!this._.commenting && !this._.quoting && this.options.comment && chars.substr(i, this.options.comment.length) === this.options.comment) {\n      this._.commenting = true;\n    } else if (this._.commenting && isRowDelimiter) {\n      wasCommenting = true;\n      this._.commenting = false;\n    }\n    isDelimiter = chars.substr(i, this.options.delimiter.length) === this.options.delimiter;\n    if (!this._.commenting && !this._.quoting && (isDelimiter || isRowDelimiter)) {\n      if (isRowDelimiter) {\n        isRowDelimiterLength = this.options.rowDelimiter.filter(function(rd) {\n          return chars.substr(i, rd.length) === rd;\n        })[0].length;\n      }\n      if (isRowDelimiter && this._.line.length === 0 && (this._.field == null)) {\n        if (wasCommenting || this.options.skip_empty_lines) {\n          i += isRowDelimiterLength;\n          this._.nextChar = chars.charAt(i);\n          continue;\n        }\n      }\n      if (rtrim) {\n        if (!this._.closingQuote) {\n          this._.field = (ref1 = this._.field) != null ? ref1.trimRight() : void 0;\n        }\n      }\n      this._.line.push(auto_parse(this._.field || ''));\n      this._.closingQuote = 0;\n      this._.field = null;\n      if (isDelimiter) {\n        i += this.options.delimiter.length;\n        this._.nextChar = chars.charAt(i);\n        if (end && !this._.nextChar) {\n          isRowDelimiter = true;\n          this._.line.push('');\n        }\n      }\n      if (isRowDelimiter) {\n        err = this.__push(this._.line);\n        if (err) {\n          return err;\n        }\n        this._.line = [];\n        i += isRowDelimiterLength;\n        this._.nextChar = chars.charAt(i);\n        continue;\n      }\n    } else if (!this._.commenting && !this._.quoting && (char === ' ' || char === '\\t')) {\n      if (this._.field == null) {\n        this._.field = '';\n      }\n      if (!(ltrim && !this._.field)) {\n        this._.field += char;\n      }\n      i++;\n    } else if (!this._.commenting) {\n      if (this._.field == null) {\n        this._.field = '';\n      }\n      this._.field += char;\n      i++;\n    } else {\n      i++;\n    }\n    if (!this._.commenting && ((ref2 = this._.field) != null ? ref2.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Field exceeds max_limit_on_data_read setting (\" + this.options.max_limit_on_data_read + \") \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (!this._.commenting && ((ref3 = this._.line) != null ? ref3.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  if (end) {\n    if (this._.field != null) {\n      if (rtrim) {\n        if (!this._.closingQuote) {\n          this._.field = (ref4 = this._.field) != null ? ref4.trimRight() : void 0;\n        }\n      }\n      this._.line.push(auto_parse(this._.field || ''));\n      this._.field = null;\n    }\n    if (((ref5 = this._.field) != null ? ref5.length : void 0) > this.options.max_limit_on_data_read) {\n      return Error(\"Delimiter not found in the file \" + (JSON.stringify(this.options.delimiter)));\n    }\n    if (l === 0) {\n      this.lines++;\n    }\n    if (this._.line.length > this.options.max_limit_on_data_read) {\n      return Error(\"Row delimiter not found in the file \" + (JSON.stringify(this.options.rowDelimiter)));\n    }\n  }\n  this._.buf = chars.substr(i);\n  return null;\n};\n\nisObjLiteral = function(_obj) {\n  var _test;\n  _test = _obj;\n  if (typeof _obj !== 'object' || _obj === null || Array.isArray(_obj)) {\n    return false;\n  } else {\n    return (function() {\n      while (!false) {\n        if (Object.getPrototypeOf(_test = Object.getPrototypeOf(_test)) === null) {\n          break;\n        }\n      }\n      return Object.getPrototypeOf(_obj === _test);\n    })();\n  }\n};\n","// Generated by CoffeeScript 1.12.7\nvar StringDecoder, parse;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nparse = require('./index');\n\nmodule.exports = function(data, options) {\n  var decoder, err, parser, records;\n  if (options == null) {\n    options = {};\n  }\n  records = options.objname ? {} : [];\n  if (data instanceof Buffer) {\n    decoder = new StringDecoder();\n    data = decoder.write(data);\n  }\n  parser = new parse.Parser(options);\n  parser.push = function(record) {\n    if (options.objname) {\n      return records[record[0]] = record[1];\n    } else {\n      return records.push(record);\n    }\n  };\n  err = parser.__write(data, false);\n  if (err) {\n    throw err;\n  }\n  if (data instanceof Buffer) {\n    err = parser.__write(data.end(), true);\n    if (err) {\n      throw err;\n    }\n  }\n  parser._flush((function() {}));\n  return records;\n};\n","// Generated by CoffeeScript 1.12.7\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\nStringifier = function(opts) {\n  var base, base1, base10, base11, base12, base13, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  if (opts == null) {\n    opts = {};\n  }\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  stream.Transform.call(this, options);\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n  if ((base7 = this.options).columns == null) {\n    base7.columns = null;\n  }\n  if ((base8 = this.options).header == null) {\n    base8.header = false;\n  }\n  if ((base9 = this.options).formatters == null) {\n    base9.formatters = {};\n  }\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function(value) {\n      return '' + value.getTime();\n    };\n  }\n  if ((base11 = this.options.formatters).bool == null) {\n    base11.bool = function(value) {\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base12 = this.options.formatters).object == null) {\n    base12.object = function(value) {\n      return JSON.stringify(value);\n    };\n  }\n  if ((base13 = this.options).rowDelimiter == null) {\n    base13.rowDelimiter = '\\n';\n  }\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\nStringifier.prototype.headers = function() {\n  var k, label, labels;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  labels = this.options.columns;\n  if (typeof labels === 'object') {\n    labels = (function() {\n      var results;\n      results = [];\n      for (k in labels) {\n        label = labels[k];\n        results.push(label);\n      }\n      return results;\n    })();\n  }\n  if (this.options.eof) {\n    labels = this.stringify(labels) + this.options.rowDelimiter;\n  } else {\n    labels = this.stringify(labels);\n  }\n  return stream.Transform.prototype.write.call(this, labels);\n};\n\nStringifier.prototype.end = function(chunk, encoding, callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return stream.Transform.prototype.end.apply(this, arguments);\n};\n\nStringifier.prototype.write = function(chunk, encoding, callback) {\n  var base, e, preserve;\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  if (!preserve) {\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Object.keys(chunk);\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    if (this.options.eof) {\n      chunk = this.stringify(chunk) + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    chunk = \"\" + chunk;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  return stream.Transform.prototype.write.call(this, chunk, encoding, callback);\n};\n\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  this.push(chunk);\n  return callback();\n};\n\nStringifier.prototype.stringify = function(line) {\n  var _line, column, columns, containsEscape, containsLinebreak, containsQuote, containsdelimiter, delimiter, escape, field, i, j, l, newLine, quote, ref, ref1, regexp, shouldQuote, value;\n  if (typeof line !== 'object') {\n    return line;\n  }\n  columns = this.options.columns;\n  if (typeof columns === 'object' && columns !== null && !Array.isArray(columns)) {\n    columns = Object.keys(columns);\n  }\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(line)) {\n    _line = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        column = columns[i];\n        value = get(line, column);\n        _line[i] = (typeof value === 'undefined' || value === null) ? '' : value;\n      }\n    } else {\n      for (column in line) {\n        _line.push(line[column]);\n      }\n    }\n    line = _line;\n    _line = null;\n  } else if (columns) {\n    line.splice(columns.length);\n  }\n  if (Array.isArray(line)) {\n    newLine = '';\n    for (i = l = 0, ref1 = line.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {\n      field = line[i];\n      if (typeof field === 'string') {\n\n      } else if (typeof field === 'number') {\n        field = '' + field;\n      } else if (typeof field === 'boolean') {\n        field = this.options.formatters.bool(field);\n      } else if (field instanceof Date) {\n        field = this.options.formatters.date(field);\n      } else if (typeof field === 'object' && field !== null) {\n        field = this.options.formatters.object(field);\n      }\n      if (field) {\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsLinebreak = field.indexOf('\\r') >= 0 || field.indexOf('\\n') >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsLinebreak || this.options.quoted || (this.options.quotedString && typeof line[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newLine += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && line[i] === '' && this.options.quotedString)) {\n        newLine += quote + quote;\n      }\n      if (i !== line.length - 1) {\n        newLine += delimiter;\n      }\n    }\n    line = newLine;\n  }\n  return line;\n};\n","// Generated by CoffeeScript 1.12.7\nvar StringDecoder, stringify;\n\nStringDecoder = require('string_decoder').StringDecoder;\n\nstringify = require('./index');\n\nmodule.exports = function(records, options) {\n  var data, decoder, i, len, record, stringifier;\n  if (options == null) {\n    options = {};\n  }\n  data = [];\n  if (records instanceof Buffer) {\n    decoder = new StringDecoder();\n    records = decoder.write(records);\n  }\n  stringifier = new stringify.Stringifier(options);\n  stringifier.push = function(record) {\n    if (record) {\n      return data.push(record.toString());\n    }\n  };\n  for (i = 0, len = records.length; i < len; i++) {\n    record = records[i];\n    stringifier.write(record);\n  }\n  stringifier.end();\n  return data.join('');\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar objectCreate = Object.create || objectCreatePolyfill\nvar objectKeys = Object.keys || objectKeysPolyfill\nvar bind = Function.prototype.bind || functionBindPolyfill\n\nfunction EventEmitter() {\n  if (!this._events || !Object.prototype.hasOwnProperty.call(this, '_events')) {\n    this._events = objectCreate(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nvar hasDefineProperty;\ntry {\n  var o = {};\n  if (Object.defineProperty) Object.defineProperty(o, 'x', { value: 0 });\n  hasDefineProperty = o.x === 0;\n} catch (err) { hasDefineProperty = false }\nif (hasDefineProperty) {\n  Object.defineProperty(EventEmitter, 'defaultMaxListeners', {\n    enumerable: true,\n    get: function() {\n      return defaultMaxListeners;\n    },\n    set: function(arg) {\n      // check whether the input is a positive number (whose value is zero or\n      // greater and not a NaN).\n      if (typeof arg !== 'number' || arg < 0 || arg !== arg)\n        throw new TypeError('\"defaultMaxListeners\" must be a positive number');\n      defaultMaxListeners = arg;\n    }\n  });\n} else {\n  EventEmitter.defaultMaxListeners = defaultMaxListeners;\n}\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    if (arguments.length > 1)\n      er = arguments[1];\n    if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Unhandled \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n      // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n      // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = objectCreate(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n          listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n          prepend ? [listener, existing] : [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n            existing.length + ' \"' + String(type) + '\" listeners ' +\n            'added. Use emitter.setMaxListeners() to ' +\n            'increase limit.');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        if (typeof console === 'object' && console.warn) {\n          console.warn('%s: %s', w.name, w.message);\n        }\n      }\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    switch (arguments.length) {\n      case 0:\n        return this.listener.call(this.target);\n      case 1:\n        return this.listener.call(this.target, arguments[0]);\n      case 2:\n        return this.listener.call(this.target, arguments[0], arguments[1]);\n      case 3:\n        return this.listener.call(this.target, arguments[0], arguments[1],\n            arguments[2]);\n      default:\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i)\n          args[i] = arguments[i];\n        this.listener.apply(this.target, args);\n    }\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = bind.call(onceWrapper, state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = objectCreate(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else\n          spliceOne(list, position);\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = objectCreate(null);\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = objectCreate(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = objectKeys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = objectCreate(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (!events)\n    return [];\n\n  var evlistener = events[type];\n  if (!evlistener)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction objectCreatePolyfill(proto) {\n  var F = function() {};\n  F.prototype = proto;\n  return new F;\n}\nfunction objectKeysPolyfill(obj) {\n  var keys = [];\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k)) {\n    keys.push(k);\n  }\n  return k;\n}\nfunction functionBindPolyfill(context) {\n  var fn = this;\n  return function () {\n    return fn.apply(context, arguments);\n  };\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash core -o ./dist/lodash.core.js`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Error message constants. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_PARTIAL_FLAG = 32;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      stringTag = '[object String]';\n\n  /** Used to match HTML entities and HTML characters. */\n  var reUnescapedHtml = /[&<>\"']/g,\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    array.push.apply(array, values);\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return baseMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /** Used for built-in method references. */\n  var arrayProto = Array.prototype,\n      objectProto = Object.prototype;\n\n  /** Used to check objects for own properties. */\n  var hasOwnProperty = objectProto.hasOwnProperty;\n\n  /** Used to generate unique IDs. */\n  var idCounter = 0;\n\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n  var nativeObjectToString = objectProto.toString;\n\n  /** Used to restore the original `_` reference in `_.noConflict`. */\n  var oldDash = root._;\n\n  /** Built-in value references. */\n  var objectCreate = Object.create,\n      propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n  /* Built-in method references for those with the same name as other `lodash` methods. */\n  var nativeIsFinite = root.isFinite,\n      nativeKeys = overArg(Object.keys, Object),\n      nativeMax = Math.max;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` object which wraps `value` to enable implicit method\n   * chain sequences. Methods that operate on and return arrays, collections,\n   * and functions can be chained together. Methods that retrieve a single value\n   * or may return a primitive value will automatically end the chain sequence\n   * and return the unwrapped value. Otherwise, the value must be unwrapped\n   * with `_#value`.\n   *\n   * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n   * enabled using `_.chain`.\n   *\n   * The execution of chained methods is lazy, that is, it's deferred until\n   * `_#value` is implicitly or explicitly called.\n   *\n   * Lazy evaluation allows several methods to support shortcut fusion.\n   * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n   * the creation of intermediate arrays and can greatly reduce the number of\n   * iteratee executions. Sections of a chain sequence qualify for shortcut\n   * fusion if the section is applied to an array and iteratees accept only\n   * one argument. The heuristic for whether a section qualifies for shortcut\n   * fusion is subject to change.\n   *\n   * Chaining is supported in custom builds as long as the `_#value` method is\n   * directly or indirectly included in the build.\n   *\n   * In addition to lodash methods, wrappers have `Array` and `String` methods.\n   *\n   * The wrapper `Array` methods are:\n   * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n   *\n   * The wrapper `String` methods are:\n   * `replace` and `split`\n   *\n   * The wrapper methods that support shortcut fusion are:\n   * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n   * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n   * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n   *\n   * The chainable wrapper methods are:\n   * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n   * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n   * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n   * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n   * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n   * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n   * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n   * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n   * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n   * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n   * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n   * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n   * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n   * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n   * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n   * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n   * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n   * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n   * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n   * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n   * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n   * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n   * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n   * `zipObject`, `zipObjectDeep`, and `zipWith`\n   *\n   * The wrapper methods that are **not** chainable by default are:\n   * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n   * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n   * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n   * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n   * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n   * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n   * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n   * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n   * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n   * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n   * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n   * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n   * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n   * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n   * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n   * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n   * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n   * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n   * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n   * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n   * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n   * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n   * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n   * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n   * `upperFirst`, `value`, and `words`\n   *\n   * @name _\n   * @constructor\n   * @category Seq\n   * @param {*} value The value to wrap in a `lodash` instance.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * var wrapped = _([1, 2, 3]);\n   *\n   * // Returns an unwrapped value.\n   * wrapped.reduce(_.add);\n   * // => 6\n   *\n   * // Returns a wrapped value.\n   * var squares = wrapped.map(square);\n   *\n   * _.isArray(squares);\n   * // => false\n   *\n   * _.isArray(squares.value());\n   * // => true\n   */\n  function lodash(value) {\n    return value instanceof LodashWrapper\n      ? value\n      : new LodashWrapper(value);\n  }\n\n  /**\n   * The base implementation of `_.create` without support for assigning\n   * properties to the created object.\n   *\n   * @private\n   * @param {Object} proto The object to inherit from.\n   * @returns {Object} Returns the new object.\n   */\n  var baseCreate = (function() {\n    function object() {}\n    return function(proto) {\n      if (!isObject(proto)) {\n        return {};\n      }\n      if (objectCreate) {\n        return objectCreate(proto);\n      }\n      object.prototype = proto;\n      var result = new object;\n      object.prototype = undefined;\n      return result;\n    };\n  }());\n\n  /**\n   * The base constructor for creating `lodash` wrapper objects.\n   *\n   * @private\n   * @param {*} value The value to wrap.\n   * @param {boolean} [chainAll] Enable explicit method chain sequences.\n   */\n  function LodashWrapper(value, chainAll) {\n    this.__wrapped__ = value;\n    this.__actions__ = [];\n    this.__chain__ = !!chainAll;\n  }\n\n  LodashWrapper.prototype = baseCreate(lodash.prototype);\n  LodashWrapper.prototype.constructor = LodashWrapper;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns `value` to `key` of `object` if the existing value is not equivalent\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function assignValue(object, key, value) {\n    var objValue = object[key];\n    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n        (value === undefined && !(key in object))) {\n      baseAssignValue(object, key, value);\n    }\n  }\n\n  /**\n   * The base implementation of `assignValue` and `assignMergeValue` without\n   * value checks.\n   *\n   * @private\n   * @param {Object} object The object to modify.\n   * @param {string} key The key of the property to assign.\n   * @param {*} value The value to assign.\n   */\n  function baseAssignValue(object, key, value) {\n    object[key] = value;\n  }\n\n  /**\n   * The base implementation of `_.delay` and `_.defer` which accepts `args`\n   * to provide to `func`.\n   *\n   * @private\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {Array} args The arguments to provide to `func`.\n   * @returns {number|Object} Returns the timer id or timeout object.\n   */\n  function baseDelay(func, wait, args) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return setTimeout(function() { func.apply(undefined, args); }, wait);\n  }\n\n  /**\n   * The base implementation of `_.forEach` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   */\n  var baseEach = createBaseEach(baseForOwn);\n\n  /**\n   * The base implementation of `_.every` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`\n   */\n  function baseEvery(collection, predicate) {\n    var result = true;\n    baseEach(collection, function(value, index, collection) {\n      result = !!predicate(value, index, collection);\n      return result;\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of methods like `_.max` and `_.min` which accepts a\n   * `comparator` to determine the extremum value.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The iteratee invoked per iteration.\n   * @param {Function} comparator The comparator used to compare values.\n   * @returns {*} Returns the extremum value.\n   */\n  function baseExtremum(array, iteratee, comparator) {\n    var index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var value = array[index],\n          current = iteratee(value);\n\n      if (current != null && (computed === undefined\n            ? (current === current && !false)\n            : comparator(current, computed)\n          )) {\n        var computed = current,\n            result = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.filter` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function baseFilter(collection, predicate) {\n    var result = [];\n    baseEach(collection, function(value, index, collection) {\n      if (predicate(value, index, collection)) {\n        result.push(value);\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.flatten` with support for restricting flattening.\n   *\n   * @private\n   * @param {Array} array The array to flatten.\n   * @param {number} depth The maximum recursion depth.\n   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n   * @param {Array} [result=[]] The initial result value.\n   * @returns {Array} Returns the new flattened array.\n   */\n  function baseFlatten(array, depth, predicate, isStrict, result) {\n    var index = -1,\n        length = array.length;\n\n    predicate || (predicate = isFlattenable);\n    result || (result = []);\n\n    while (++index < length) {\n      var value = array[index];\n      if (depth > 0 && predicate(value)) {\n        if (depth > 1) {\n          // Recursively flatten arrays (susceptible to call stack limits).\n          baseFlatten(value, depth - 1, predicate, isStrict, result);\n        } else {\n          arrayPush(result, value);\n        }\n      } else if (!isStrict) {\n        result[result.length] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `baseForOwn` which iterates over `object`\n   * properties returned by `keysFunc` and invokes `iteratee` for each property.\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Function} keysFunc The function to get the keys of `object`.\n   * @returns {Object} Returns `object`.\n   */\n  var baseFor = createBaseFor();\n\n  /**\n   * The base implementation of `_.forOwn` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Object} object The object to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Object} Returns `object`.\n   */\n  function baseForOwn(object, iteratee) {\n    return object && baseFor(object, iteratee, keys);\n  }\n\n  /**\n   * The base implementation of `_.functions` which creates an array of\n   * `object` function property names filtered from `props`.\n   *\n   * @private\n   * @param {Object} object The object to inspect.\n   * @param {Array} props The property names to filter.\n   * @returns {Array} Returns the function names.\n   */\n  function baseFunctions(object, props) {\n    return baseFilter(props, function(key) {\n      return isFunction(object[key]);\n    });\n  }\n\n  /**\n   * The base implementation of `getTag` without fallbacks for buggy environments.\n   *\n   * @private\n   * @param {*} value The value to query.\n   * @returns {string} Returns the `toStringTag`.\n   */\n  function baseGetTag(value) {\n    return objectToString(value);\n  }\n\n  /**\n   * The base implementation of `_.gt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is greater than `other`,\n   *  else `false`.\n   */\n  function baseGt(value, other) {\n    return value > other;\n  }\n\n  /**\n   * The base implementation of `_.isArguments`.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   */\n  var baseIsArguments = noop;\n\n  /**\n   * The base implementation of `_.isDate` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   */\n  function baseIsDate(value) {\n    return isObjectLike(value) && baseGetTag(value) == dateTag;\n  }\n\n  /**\n   * The base implementation of `_.isEqual` which supports partial comparisons\n   * and tracks traversed objects.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @param {boolean} bitmask The bitmask flags.\n   *  1 - Unordered comparison\n   *  2 - Partial comparison\n   * @param {Function} [customizer] The function to customize comparisons.\n   * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   */\n  function baseIsEqual(value, other, bitmask, customizer, stack) {\n    if (value === other) {\n      return true;\n    }\n    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n      return value !== value && other !== other;\n    }\n    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n  }\n\n  /**\n   * A specialized version of `baseIsEqual` for arrays and objects which performs\n   * deep comparisons and tracks traversed objects enabling objects with circular\n   * references to be compared.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n    var objIsArr = isArray(object),\n        othIsArr = isArray(other),\n        objTag = objIsArr ? arrayTag : baseGetTag(object),\n        othTag = othIsArr ? arrayTag : baseGetTag(other);\n\n    objTag = objTag == argsTag ? objectTag : objTag;\n    othTag = othTag == argsTag ? objectTag : othTag;\n\n    var objIsObj = objTag == objectTag,\n        othIsObj = othTag == objectTag,\n        isSameTag = objTag == othTag;\n\n    stack || (stack = []);\n    var objStack = find(stack, function(entry) {\n      return entry[0] == object;\n    });\n    var othStack = find(stack, function(entry) {\n      return entry[0] == other;\n    });\n    if (objStack && othStack) {\n      return objStack[1] == other;\n    }\n    stack.push([object, other]);\n    stack.push([other, object]);\n    if (isSameTag && !objIsObj) {\n      var result = (objIsArr)\n        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      stack.pop();\n      return result;\n    }\n    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n      if (objIsWrapped || othIsWrapped) {\n        var objUnwrapped = objIsWrapped ? object.value() : object,\n            othUnwrapped = othIsWrapped ? other.value() : other;\n\n        var result = equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        stack.pop();\n        return result;\n      }\n    }\n    if (!isSameTag) {\n      return false;\n    }\n    var result = equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    stack.pop();\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.isRegExp` without Node.js optimizations.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   */\n  function baseIsRegExp(value) {\n    return isObjectLike(value) && baseGetTag(value) == regexpTag;\n  }\n\n  /**\n   * The base implementation of `_.iteratee`.\n   *\n   * @private\n   * @param {*} [value=_.identity] The value to convert to an iteratee.\n   * @returns {Function} Returns the iteratee.\n   */\n  function baseIteratee(func) {\n    if (typeof func == 'function') {\n      return func;\n    }\n    if (func == null) {\n      return identity;\n    }\n    return (typeof func == 'object' ? baseMatches : baseProperty)(func);\n  }\n\n  /**\n   * The base implementation of `_.lt` which doesn't coerce arguments.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if `value` is less than `other`,\n   *  else `false`.\n   */\n  function baseLt(value, other) {\n    return value < other;\n  }\n\n  /**\n   * The base implementation of `_.map` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function baseMap(collection, iteratee) {\n    var index = -1,\n        result = isArrayLike(collection) ? Array(collection.length) : [];\n\n    baseEach(collection, function(value, key, collection) {\n      result[++index] = iteratee(value, key, collection);\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.matches` which doesn't clone `source`.\n   *\n   * @private\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   */\n  function baseMatches(source) {\n    var props = nativeKeys(source);\n    return function(object) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length];\n        if (!(key in object &&\n              baseIsEqual(source[key], object[key], COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG)\n            )) {\n          return false;\n        }\n      }\n      return true;\n    };\n  }\n\n  /**\n   * The base implementation of `_.pick` without support for individual\n   * property identifiers.\n   *\n   * @private\n   * @param {Object} object The source object.\n   * @param {string[]} paths The property paths to pick.\n   * @returns {Object} Returns the new object.\n   */\n  function basePick(object, props) {\n    object = Object(object);\n    return reduce(props, function(result, key) {\n      if (key in object) {\n        result[key] = object[key];\n      }\n      return result;\n    }, {});\n  }\n\n  /**\n   * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @returns {Function} Returns the new function.\n   */\n  function baseRest(func, start) {\n    return setToString(overRest(func, start, identity), func + '');\n  }\n\n  /**\n   * The base implementation of `_.slice` without an iteratee call guard.\n   *\n   * @private\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function baseSlice(array, start, end) {\n    var index = -1,\n        length = array.length;\n\n    if (start < 0) {\n      start = -start > length ? 0 : (length + start);\n    }\n    end = end > length ? length : end;\n    if (end < 0) {\n      end += length;\n    }\n    length = start > end ? 0 : ((end - start) >>> 0);\n    start >>>= 0;\n\n    var result = Array(length);\n    while (++index < length) {\n      result[index] = array[index + start];\n    }\n    return result;\n  }\n\n  /**\n   * Copies the values of `source` to `array`.\n   *\n   * @private\n   * @param {Array} source The array to copy values from.\n   * @param {Array} [array=[]] The array to copy values to.\n   * @returns {Array} Returns `array`.\n   */\n  function copyArray(source) {\n    return baseSlice(source, 0, source.length);\n  }\n\n  /**\n   * The base implementation of `_.some` without support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function baseSome(collection, predicate) {\n    var result;\n\n    baseEach(collection, function(value, index, collection) {\n      result = predicate(value, index, collection);\n      return !result;\n    });\n    return !!result;\n  }\n\n  /**\n   * The base implementation of `wrapperValue` which returns the result of\n   * performing a sequence of actions on the unwrapped `value`, where each\n   * successive action is supplied the return value of the previous.\n   *\n   * @private\n   * @param {*} value The unwrapped value.\n   * @param {Array} actions Actions to perform to resolve the unwrapped value.\n   * @returns {*} Returns the resolved value.\n   */\n  function baseWrapperValue(value, actions) {\n    var result = value;\n    return reduce(actions, function(result, action) {\n      return action.func.apply(action.thisArg, arrayPush([result], action.args));\n    }, result);\n  }\n\n  /**\n   * Compares values to sort them in ascending order.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function compareAscending(value, other) {\n    if (value !== other) {\n      var valIsDefined = value !== undefined,\n          valIsNull = value === null,\n          valIsReflexive = value === value,\n          valIsSymbol = false;\n\n      var othIsDefined = other !== undefined,\n          othIsNull = other === null,\n          othIsReflexive = other === other,\n          othIsSymbol = false;\n\n      if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n          (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n          (valIsNull && othIsDefined && othIsReflexive) ||\n          (!valIsDefined && othIsReflexive) ||\n          !valIsReflexive) {\n        return 1;\n      }\n      if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n          (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n          (othIsNull && valIsDefined && valIsReflexive) ||\n          (!othIsDefined && valIsReflexive) ||\n          !othIsReflexive) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * Copies properties of `source` to `object`.\n   *\n   * @private\n   * @param {Object} source The object to copy properties from.\n   * @param {Array} props The property identifiers to copy.\n   * @param {Object} [object={}] The object to copy properties to.\n   * @param {Function} [customizer] The function to customize copied values.\n   * @returns {Object} Returns `object`.\n   */\n  function copyObject(source, props, object, customizer) {\n    var isNew = !object;\n    object || (object = {});\n\n    var index = -1,\n        length = props.length;\n\n    while (++index < length) {\n      var key = props[index];\n\n      var newValue = customizer\n        ? customizer(object[key], source[key], key, object, source)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = source[key];\n      }\n      if (isNew) {\n        baseAssignValue(object, key, newValue);\n      } else {\n        assignValue(object, key, newValue);\n      }\n    }\n    return object;\n  }\n\n  /**\n   * Creates a function like `_.assign`.\n   *\n   * @private\n   * @param {Function} assigner The function to assign values.\n   * @returns {Function} Returns the new assigner function.\n   */\n  function createAssigner(assigner) {\n    return baseRest(function(object, sources) {\n      var index = -1,\n          length = sources.length,\n          customizer = length > 1 ? sources[length - 1] : undefined;\n\n      customizer = (assigner.length > 3 && typeof customizer == 'function')\n        ? (length--, customizer)\n        : undefined;\n\n      object = Object(object);\n      while (++index < length) {\n        var source = sources[index];\n        if (source) {\n          assigner(object, source, index, customizer);\n        }\n      }\n      return object;\n    });\n  }\n\n  /**\n   * Creates a `baseEach` or `baseEachRight` function.\n   *\n   * @private\n   * @param {Function} eachFunc The function to iterate over a collection.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseEach(eachFunc, fromRight) {\n    return function(collection, iteratee) {\n      if (collection == null) {\n        return collection;\n      }\n      if (!isArrayLike(collection)) {\n        return eachFunc(collection, iteratee);\n      }\n      var length = collection.length,\n          index = fromRight ? length : -1,\n          iterable = Object(collection);\n\n      while ((fromRight ? index-- : ++index < length)) {\n        if (iteratee(iterable[index], index, iterable) === false) {\n          break;\n        }\n      }\n      return collection;\n    };\n  }\n\n  /**\n   * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n   *\n   * @private\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {Function} Returns the new base function.\n   */\n  function createBaseFor(fromRight) {\n    return function(object, iteratee, keysFunc) {\n      var index = -1,\n          iterable = Object(object),\n          props = keysFunc(object),\n          length = props.length;\n\n      while (length--) {\n        var key = props[fromRight ? length : ++index];\n        if (iteratee(iterable[key], key, iterable) === false) {\n          break;\n        }\n      }\n      return object;\n    };\n  }\n\n  /**\n   * Creates a function that produces an instance of `Ctor` regardless of\n   * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n   *\n   * @private\n   * @param {Function} Ctor The constructor to wrap.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createCtor(Ctor) {\n    return function() {\n      // Use a `switch` statement to work with class constructors. See\n      // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n      // for more details.\n      var args = arguments;\n      var thisBinding = baseCreate(Ctor.prototype),\n          result = Ctor.apply(thisBinding, args);\n\n      // Mimic the constructor's `return` behavior.\n      // See https://es5.github.io/#x13.2.2 for more details.\n      return isObject(result) ? result : thisBinding;\n    };\n  }\n\n  /**\n   * Creates a `_.find` or `_.findLast` function.\n   *\n   * @private\n   * @param {Function} findIndexFunc The function to find the collection index.\n   * @returns {Function} Returns the new find function.\n   */\n  function createFind(findIndexFunc) {\n    return function(collection, predicate, fromIndex) {\n      var iterable = Object(collection);\n      if (!isArrayLike(collection)) {\n        var iteratee = baseIteratee(predicate, 3);\n        collection = keys(collection);\n        predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n      }\n      var index = findIndexFunc(collection, predicate, fromIndex);\n      return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke it with the `this` binding\n   * of `thisArg` and `partials` prepended to the arguments it receives.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} partials The arguments to prepend to those provided to\n   *  the new function.\n   * @returns {Function} Returns the new wrapped function.\n   */\n  function createPartial(func, bitmask, thisArg, partials) {\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    var isBind = bitmask & WRAP_BIND_FLAG,\n        Ctor = createCtor(func);\n\n    function wrapper() {\n      var argsIndex = -1,\n          argsLength = arguments.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          args = Array(leftLength + argsLength),\n          fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n      while (++leftIndex < leftLength) {\n        args[leftIndex] = partials[leftIndex];\n      }\n      while (argsLength--) {\n        args[leftIndex++] = arguments[++argsIndex];\n      }\n      return fn.apply(isBind ? thisArg : this, args);\n    }\n    return wrapper;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for arrays with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Array} array The array to compare.\n   * @param {Array} other The other array to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `array` and `other` objects.\n   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n   */\n  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        arrLength = array.length,\n        othLength = other.length;\n\n    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n      return false;\n    }\n    var index = -1,\n        result = true,\n        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? [] : undefined;\n\n    // Ignore non-index properties.\n    while (++index < arrLength) {\n      var arrValue = array[index],\n          othValue = other[index];\n\n      var compared;\n      if (compared !== undefined) {\n        if (compared) {\n          continue;\n        }\n        result = false;\n        break;\n      }\n      // Recursively compare arrays (susceptible to call stack limits).\n      if (seen) {\n        if (!baseSome(other, function(othValue, othIndex) {\n              if (!indexOf(seen, othIndex) &&\n                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                return seen.push(othIndex);\n              }\n            })) {\n          result = false;\n          break;\n        }\n      } else if (!(\n            arrValue === othValue ||\n              equalFunc(arrValue, othValue, bitmask, customizer, stack)\n          )) {\n        result = false;\n        break;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for comparing objects of\n   * the same `toStringTag`.\n   *\n   * **Note:** This function only supports comparing values with tags of\n   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {string} tag The `toStringTag` of the objects to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n    switch (tag) {\n\n      case boolTag:\n      case dateTag:\n      case numberTag:\n        // Coerce booleans to `1` or `0` and dates to milliseconds.\n        // Invalid dates are coerced to `NaN`.\n        return eq(+object, +other);\n\n      case errorTag:\n        return object.name == other.name && object.message == other.message;\n\n      case regexpTag:\n      case stringTag:\n        // Coerce regexes to strings and treat strings, primitives and objects,\n        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n        // for more details.\n        return object == (other + '');\n\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `baseIsEqualDeep` for objects with support for\n   * partial deep comparisons.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n   * @param {Function} customizer The function to customize comparisons.\n   * @param {Function} equalFunc The function to determine equivalents of values.\n   * @param {Object} stack Tracks traversed `object` and `other` objects.\n   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n   */\n  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n        objProps = keys(object),\n        objLength = objProps.length,\n        othProps = keys(other),\n        othLength = othProps.length;\n\n    if (objLength != othLength && !isPartial) {\n      return false;\n    }\n    var index = objLength;\n    while (index--) {\n      var key = objProps[index];\n      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n        return false;\n      }\n    }\n    var result = true;\n\n    var skipCtor = isPartial;\n    while (++index < objLength) {\n      key = objProps[index];\n      var objValue = object[key],\n          othValue = other[key];\n\n      var compared;\n      // Recursively compare objects (susceptible to call stack limits).\n      if (!(compared === undefined\n            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n            : compared\n          )) {\n        result = false;\n        break;\n      }\n      skipCtor || (skipCtor = key == 'constructor');\n    }\n    if (result && !skipCtor) {\n      var objCtor = object.constructor,\n          othCtor = other.constructor;\n\n      // Non `Object` object instances with different constructors are not equal.\n      if (objCtor != othCtor &&\n          ('constructor' in object && 'constructor' in other) &&\n          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n            typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n        result = false;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `baseRest` which flattens the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @returns {Function} Returns the new function.\n   */\n  function flatRest(func) {\n    return setToString(overRest(func, undefined, flatten), func + '');\n  }\n\n  /**\n   * Checks if `value` is a flattenable `arguments` object or array.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n   */\n  function isFlattenable(value) {\n    return isArray(value) || isArguments(value);\n  }\n\n  /**\n   * Checks if `value` is a valid array-like index.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n   */\n  function isIndex(value, length) {\n    var type = typeof value;\n    length = length == null ? MAX_SAFE_INTEGER : length;\n\n    return !!length &&\n      (type == 'number' ||\n        (type != 'symbol' && reIsUint.test(value))) &&\n          (value > -1 && value % 1 == 0 && value < length);\n  }\n\n  /**\n   * Checks if the given arguments are from an iteratee call.\n   *\n   * @private\n   * @param {*} value The potential iteratee value argument.\n   * @param {*} index The potential iteratee index or key argument.\n   * @param {*} object The potential iteratee object argument.\n   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n   *  else `false`.\n   */\n  function isIterateeCall(value, index, object) {\n    if (!isObject(object)) {\n      return false;\n    }\n    var type = typeof index;\n    if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)\n        ) {\n      return eq(object[index], value);\n    }\n    return false;\n  }\n\n  /**\n   * This function is like\n   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * except that it includes inherited enumerable properties.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   */\n  function nativeKeysIn(object) {\n    var result = [];\n    if (object != null) {\n      for (var key in Object(object)) {\n        result.push(key);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `value` to a string using `Object.prototype.toString`.\n   *\n   * @private\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   */\n  function objectToString(value) {\n    return nativeObjectToString.call(value);\n  }\n\n  /**\n   * A specialized version of `baseRest` which transforms the rest array.\n   *\n   * @private\n   * @param {Function} func The function to apply a rest parameter to.\n   * @param {number} [start=func.length-1] The start position of the rest parameter.\n   * @param {Function} transform The rest array transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overRest(func, start, transform) {\n    start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n    return function() {\n      var args = arguments,\n          index = -1,\n          length = nativeMax(args.length - start, 0),\n          array = Array(length);\n\n      while (++index < length) {\n        array[index] = args[start + index];\n      }\n      index = -1;\n      var otherArgs = Array(start + 1);\n      while (++index < start) {\n        otherArgs[index] = args[index];\n      }\n      otherArgs[start] = transform(array);\n      return func.apply(this, otherArgs);\n    };\n  }\n\n  /**\n   * Sets the `toString` method of `func` to return `string`.\n   *\n   * @private\n   * @param {Function} func The function to modify.\n   * @param {Function} string The `toString` result.\n   * @returns {Function} Returns `func`.\n   */\n  var setToString = identity;\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates an array with all falsey values removed. The values `false`, `null`,\n   * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to compact.\n   * @returns {Array} Returns the new array of filtered values.\n   * @example\n   *\n   * _.compact([0, 1, false, 2, '', 3]);\n   * // => [1, 2, 3]\n   */\n  function compact(array) {\n    return baseFilter(array, Boolean);\n  }\n\n  /**\n   * Creates a new array concatenating `array` with any additional arrays\n   * and/or values.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} array The array to concatenate.\n   * @param {...*} [values] The values to concatenate.\n   * @returns {Array} Returns the new concatenated array.\n   * @example\n   *\n   * var array = [1];\n   * var other = _.concat(array, 2, [3], [[4]]);\n   *\n   * console.log(other);\n   * // => [1, 2, 3, [4]]\n   *\n   * console.log(array);\n   * // => [1]\n   */\n  function concat() {\n    var length = arguments.length;\n    if (!length) {\n      return [];\n    }\n    var args = Array(length - 1),\n        array = arguments[0],\n        index = length;\n\n    while (index--) {\n      args[index - 1] = arguments[index];\n    }\n    return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n  }\n\n  /**\n   * This method is like `_.find` except that it returns the index of the first\n   * element `predicate` returns truthy for instead of the element itself.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the found element, else `-1`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'active': false },\n   *   { 'user': 'fred',    'active': false },\n   *   { 'user': 'pebbles', 'active': true }\n   * ];\n   *\n   * _.findIndex(users, function(o) { return o.user == 'barney'; });\n   * // => 0\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.findIndex(users, { 'user': 'fred', 'active': false });\n   * // => 1\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.findIndex(users, ['active', false]);\n   * // => 0\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.findIndex(users, 'active');\n   * // => 2\n   */\n  function findIndex(array, predicate, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (!length) {\n      return -1;\n    }\n    var index = fromIndex == null ? 0 : toInteger(fromIndex);\n    if (index < 0) {\n      index = nativeMax(length + index, 0);\n    }\n    return baseFindIndex(array, baseIteratee(predicate, 3), index);\n  }\n\n  /**\n   * Flattens `array` a single level deep.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flatten([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, [3, [4]], 5]\n   */\n  function flatten(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, 1) : [];\n  }\n\n  /**\n   * Recursively flattens `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to flatten.\n   * @returns {Array} Returns the new flattened array.\n   * @example\n   *\n   * _.flattenDeep([1, [2, [3, [4]], 5]]);\n   * // => [1, 2, 3, 4, 5]\n   */\n  function flattenDeep(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? baseFlatten(array, INFINITY) : [];\n  }\n\n  /**\n   * Gets the first element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias first\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the first element of `array`.\n   * @example\n   *\n   * _.head([1, 2, 3]);\n   * // => 1\n   *\n   * _.head([]);\n   * // => undefined\n   */\n  function head(array) {\n    return (array && array.length) ? array[0] : undefined;\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `value` is found in `array`\n   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * for equality comparisons. If `fromIndex` is negative, it's used as the\n   * offset from the end of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   * @example\n   *\n   * _.indexOf([1, 2, 1, 2], 2);\n   * // => 1\n   *\n   * // Search from the `fromIndex`.\n   * _.indexOf([1, 2, 1, 2], 2, 2);\n   * // => 3\n   */\n  function indexOf(array, value, fromIndex) {\n    var length = array == null ? 0 : array.length;\n    if (typeof fromIndex == 'number') {\n      fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n    } else {\n      fromIndex = 0;\n    }\n    var index = (fromIndex || 0) - 1,\n        isReflexive = value === value;\n\n    while (++index < length) {\n      var other = array[index];\n      if ((isReflexive ? other === value : other !== other)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Gets the last element of `array`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Array\n   * @param {Array} array The array to query.\n   * @returns {*} Returns the last element of `array`.\n   * @example\n   *\n   * _.last([1, 2, 3]);\n   * // => 3\n   */\n  function last(array) {\n    var length = array == null ? 0 : array.length;\n    return length ? array[length - 1] : undefined;\n  }\n\n  /**\n   * Creates a slice of `array` from `start` up to, but not including, `end`.\n   *\n   * **Note:** This method is used instead of\n   * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n   * returned.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Array\n   * @param {Array} array The array to slice.\n   * @param {number} [start=0] The start position.\n   * @param {number} [end=array.length] The end position.\n   * @returns {Array} Returns the slice of `array`.\n   */\n  function slice(array, start, end) {\n    var length = array == null ? 0 : array.length;\n    start = start == null ? 0 : +start;\n    end = end === undefined ? length : +end;\n    return length ? baseSlice(array, start, end) : [];\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n   * chain sequences enabled. The result of such sequences must be unwrapped\n   * with `_#value`.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.3.0\n   * @category Seq\n   * @param {*} value The value to wrap.\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36 },\n   *   { 'user': 'fred',    'age': 40 },\n   *   { 'user': 'pebbles', 'age': 1 }\n   * ];\n   *\n   * var youngest = _\n   *   .chain(users)\n   *   .sortBy('age')\n   *   .map(function(o) {\n   *     return o.user + ' is ' + o.age;\n   *   })\n   *   .head()\n   *   .value();\n   * // => 'pebbles is 1'\n   */\n  function chain(value) {\n    var result = lodash(value);\n    result.__chain__ = true;\n    return result;\n  }\n\n  /**\n   * This method invokes `interceptor` and returns `value`. The interceptor\n   * is invoked with one argument; (value). The purpose of this method is to\n   * \"tap into\" a method chain sequence in order to modify intermediate results.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * _([1, 2, 3])\n   *  .tap(function(array) {\n   *    // Mutate input array.\n   *    array.pop();\n   *  })\n   *  .reverse()\n   *  .value();\n   * // => [2, 1]\n   */\n  function tap(value, interceptor) {\n    interceptor(value);\n    return value;\n  }\n\n  /**\n   * This method is like `_.tap` except that it returns the result of `interceptor`.\n   * The purpose of this method is to \"pass thru\" values replacing intermediate\n   * results in a method chain sequence.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Seq\n   * @param {*} value The value to provide to `interceptor`.\n   * @param {Function} interceptor The function to invoke.\n   * @returns {*} Returns the result of `interceptor`.\n   * @example\n   *\n   * _('  abc  ')\n   *  .chain()\n   *  .trim()\n   *  .thru(function(value) {\n   *    return [value];\n   *  })\n   *  .value();\n   * // => ['abc']\n   */\n  function thru(value, interceptor) {\n    return interceptor(value);\n  }\n\n  /**\n   * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n   *\n   * @name chain\n   * @memberOf _\n   * @since 0.1.0\n   * @category Seq\n   * @returns {Object} Returns the new `lodash` wrapper instance.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 }\n   * ];\n   *\n   * // A sequence without explicit chaining.\n   * _(users).head();\n   * // => { 'user': 'barney', 'age': 36 }\n   *\n   * // A sequence with explicit chaining.\n   * _(users)\n   *   .chain()\n   *   .head()\n   *   .pick('user')\n   *   .value();\n   * // => { 'user': 'barney' }\n   */\n  function wrapperChain() {\n    return chain(this);\n  }\n\n  /**\n   * Executes the chain sequence to resolve the unwrapped value.\n   *\n   * @name value\n   * @memberOf _\n   * @since 0.1.0\n   * @alias toJSON, valueOf\n   * @category Seq\n   * @returns {*} Returns the resolved unwrapped value.\n   * @example\n   *\n   * _([1, 2, 3]).value();\n   * // => [1, 2, 3]\n   */\n  function wrapperValue() {\n    return baseWrapperValue(this.__wrapped__, this.__actions__);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Checks if `predicate` returns truthy for **all** elements of `collection`.\n   * Iteration is stopped once `predicate` returns falsey. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * **Note:** This method returns `true` for\n   * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n   * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n   * elements of empty collections.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.every([true, 1, null, 'yes'], Boolean);\n   * // => false\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': false },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.every(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.every(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.every(users, 'active');\n   * // => false\n   */\n  function every(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseEvery(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning an array of all elements\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * **Note:** Unlike `_.remove`, this method returns a new array.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   * @see _.reject\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * _.filter(users, function(o) { return !o.active; });\n   * // => objects for ['fred']\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, { 'age': 36, 'active': true });\n   * // => objects for ['barney']\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, ['active', false]);\n   * // => objects for ['fred']\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.filter(users, 'active');\n   * // => objects for ['barney']\n   */\n  function filter(collection, predicate) {\n    return baseFilter(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Iterates over elements of `collection`, returning the first element\n   * `predicate` returns truthy for. The predicate is invoked with three\n   * arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param {number} [fromIndex=0] The index to search from.\n   * @returns {*} Returns the matched element, else `undefined`.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney',  'age': 36, 'active': true },\n   *   { 'user': 'fred',    'age': 40, 'active': false },\n   *   { 'user': 'pebbles', 'age': 1,  'active': true }\n   * ];\n   *\n   * _.find(users, function(o) { return o.age < 40; });\n   * // => object for 'barney'\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.find(users, { 'age': 1, 'active': true });\n   * // => object for 'pebbles'\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.find(users, ['active', false]);\n   * // => object for 'fred'\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.find(users, 'active');\n   * // => object for 'barney'\n   */\n  var find = createFind(findIndex);\n\n  /**\n   * Iterates over elements of `collection` and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, collection).\n   * Iteratee functions may exit iteration early by explicitly returning `false`.\n   *\n   * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n   * property are iterated like arrays. To avoid this behavior use `_.forIn`\n   * or `_.forOwn` for object iteration.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @alias each\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array|Object} Returns `collection`.\n   * @see _.forEachRight\n   * @example\n   *\n   * _.forEach([1, 2], function(value) {\n   *   console.log(value);\n   * });\n   * // => Logs `1` then `2`.\n   *\n   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n   *   console.log(key);\n   * });\n   * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n   */\n  function forEach(collection, iteratee) {\n    return baseEach(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Creates an array of values by running each element in `collection` thru\n   * `iteratee`. The iteratee is invoked with three arguments:\n   * (value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n   *\n   * The guarded methods are:\n   * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n   * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n   * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n   * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   * @example\n   *\n   * function square(n) {\n   *   return n * n;\n   * }\n   *\n   * _.map([4, 8], square);\n   * // => [16, 64]\n   *\n   * _.map({ 'a': 4, 'b': 8 }, square);\n   * // => [16, 64] (iteration order is not guaranteed)\n   *\n   * var users = [\n   *   { 'user': 'barney' },\n   *   { 'user': 'fred' }\n   * ];\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, 'user');\n   * // => ['barney', 'fred']\n   */\n  function map(collection, iteratee) {\n    return baseMap(collection, baseIteratee(iteratee));\n  }\n\n  /**\n   * Reduces `collection` to a value which is the accumulated result of running\n   * each element in `collection` thru `iteratee`, where each successive\n   * invocation is supplied the return value of the previous. If `accumulator`\n   * is not given, the first element of `collection` is used as the initial\n   * value. The iteratee is invoked with four arguments:\n   * (accumulator, value, index|key, collection).\n   *\n   * Many lodash methods are guarded to work as iteratees for methods like\n   * `_.reduce`, `_.reduceRight`, and `_.transform`.\n   *\n   * The guarded methods are:\n   * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n   * and `sortBy`\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @returns {*} Returns the accumulated value.\n   * @see _.reduceRight\n   * @example\n   *\n   * _.reduce([1, 2], function(sum, n) {\n   *   return sum + n;\n   * }, 0);\n   * // => 3\n   *\n   * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n   *   (result[value] || (result[value] = [])).push(key);\n   *   return result;\n   * }, {});\n   * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n   */\n  function reduce(collection, iteratee, accumulator) {\n    return baseReduce(collection, baseIteratee(iteratee), accumulator, arguments.length < 3, baseEach);\n  }\n\n  /**\n   * Gets the size of `collection` by returning its length for array-like\n   * values or the number of own enumerable string keyed properties for objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object|string} collection The collection to inspect.\n   * @returns {number} Returns the collection size.\n   * @example\n   *\n   * _.size([1, 2, 3]);\n   * // => 3\n   *\n   * _.size({ 'a': 1, 'b': 2 });\n   * // => 2\n   *\n   * _.size('pebbles');\n   * // => 7\n   */\n  function size(collection) {\n    if (collection == null) {\n      return 0;\n    }\n    collection = isArrayLike(collection) ? collection : nativeKeys(collection);\n    return collection.length;\n  }\n\n  /**\n   * Checks if `predicate` returns truthy for **any** element of `collection`.\n   * Iteration is stopped once `predicate` returns truthy. The predicate is\n   * invoked with three arguments: (value, index|key, collection).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} [predicate=_.identity] The function invoked per iteration.\n   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   * @example\n   *\n   * _.some([null, 0, 'yes', false], Boolean);\n   * // => true\n   *\n   * var users = [\n   *   { 'user': 'barney', 'active': true },\n   *   { 'user': 'fred',   'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.some(users, { 'user': 'barney', 'active': false });\n   * // => false\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.some(users, ['active', false]);\n   * // => true\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.some(users, 'active');\n   * // => true\n   */\n  function some(collection, predicate, guard) {\n    predicate = guard ? undefined : predicate;\n    return baseSome(collection, baseIteratee(predicate));\n  }\n\n  /**\n   * Creates an array of elements, sorted in ascending order by the results of\n   * running each element in a collection thru each iteratee. This method\n   * performs a stable sort, that is, it preserves the original sort order of\n   * equal elements. The iteratees are invoked with one argument: (value).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Collection\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {...(Function|Function[])} [iteratees=[_.identity]]\n   *  The iteratees to sort by.\n   * @returns {Array} Returns the new sorted array.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'fred',   'age': 48 },\n   *   { 'user': 'barney', 'age': 36 },\n   *   { 'user': 'fred',   'age': 40 },\n   *   { 'user': 'barney', 'age': 34 }\n   * ];\n   *\n   * _.sortBy(users, [function(o) { return o.user; }]);\n   * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n   *\n   * _.sortBy(users, ['user', 'age']);\n   * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n   */\n  function sortBy(collection, iteratee) {\n    var index = 0;\n    iteratee = baseIteratee(iteratee);\n\n    return baseMap(baseMap(collection, function(value, key, collection) {\n      return { 'value': value, 'index': index++, 'criteria': iteratee(value, key, collection) };\n    }).sort(function(object, other) {\n      return compareAscending(object.criteria, other.criteria) || (object.index - other.index);\n    }), baseProperty('value'));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a function that invokes `func`, with the `this` binding and arguments\n   * of the created function, while it's called less than `n` times. Subsequent\n   * calls to the created function return the result of the last `func` invocation.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {number} n The number of calls at which `func` is no longer invoked.\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * jQuery(element).on('click', _.before(5, addContactToList));\n   * // => Allows adding up to 4 contacts to the list.\n   */\n  function before(n, func) {\n    var result;\n    if (typeof func != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    n = toInteger(n);\n    return function() {\n      if (--n > 0) {\n        result = func.apply(this, arguments);\n      }\n      if (n <= 1) {\n        func = undefined;\n      }\n      return result;\n    };\n  }\n\n  /**\n   * Creates a function that invokes `func` with the `this` binding of `thisArg`\n   * and `partials` prepended to the arguments it receives.\n   *\n   * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n   * may be used as a placeholder for partially applied arguments.\n   *\n   * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n   * property of bound functions.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to bind.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {...*} [partials] The arguments to be partially applied.\n   * @returns {Function} Returns the new bound function.\n   * @example\n   *\n   * function greet(greeting, punctuation) {\n   *   return greeting + ' ' + this.user + punctuation;\n   * }\n   *\n   * var object = { 'user': 'fred' };\n   *\n   * var bound = _.bind(greet, object, 'hi');\n   * bound('!');\n   * // => 'hi fred!'\n   *\n   * // Bound with placeholders.\n   * var bound = _.bind(greet, object, _, '!');\n   * bound('hi');\n   * // => 'hi fred!'\n   */\n  var bind = baseRest(function(func, thisArg, partials) {\n    return createPartial(func, WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG, thisArg, partials);\n  });\n\n  /**\n   * Defers invoking the `func` until the current call stack has cleared. Any\n   * additional arguments are provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to defer.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.defer(function(text) {\n   *   console.log(text);\n   * }, 'deferred');\n   * // => Logs 'deferred' after one millisecond.\n   */\n  var defer = baseRest(function(func, args) {\n    return baseDelay(func, 1, args);\n  });\n\n  /**\n   * Invokes `func` after `wait` milliseconds. Any additional arguments are\n   * provided to `func` when it's invoked.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to delay.\n   * @param {number} wait The number of milliseconds to delay invocation.\n   * @param {...*} [args] The arguments to invoke `func` with.\n   * @returns {number} Returns the timer id.\n   * @example\n   *\n   * _.delay(function(text) {\n   *   console.log(text);\n   * }, 1000, 'later');\n   * // => Logs 'later' after one second.\n   */\n  var delay = baseRest(function(func, wait, args) {\n    return baseDelay(func, toNumber(wait) || 0, args);\n  });\n\n  /**\n   * Creates a function that negates the result of the predicate `func`. The\n   * `func` predicate is invoked with the `this` binding and arguments of the\n   * created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Function\n   * @param {Function} predicate The predicate to negate.\n   * @returns {Function} Returns the new negated function.\n   * @example\n   *\n   * function isEven(n) {\n   *   return n % 2 == 0;\n   * }\n   *\n   * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n   * // => [1, 3, 5]\n   */\n  function negate(predicate) {\n    if (typeof predicate != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return function() {\n      var args = arguments;\n      return !predicate.apply(this, args);\n    };\n  }\n\n  /**\n   * Creates a function that is restricted to invoking `func` once. Repeat calls\n   * to the function return the value of the first invocation. The `func` is\n   * invoked with the `this` binding and arguments of the created function.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Function\n   * @param {Function} func The function to restrict.\n   * @returns {Function} Returns the new restricted function.\n   * @example\n   *\n   * var initialize = _.once(createApplication);\n   * initialize();\n   * initialize();\n   * // => `createApplication` is invoked once\n   */\n  function once(func) {\n    return before(2, func);\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Creates a shallow clone of `value`.\n   *\n   * **Note:** This method is loosely based on the\n   * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n   * and supports cloning arrays, array buffers, booleans, date objects, maps,\n   * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n   * arrays. The own enumerable properties of `arguments` objects are cloned\n   * as plain objects. An empty object is returned for uncloneable values such\n   * as error objects, functions, DOM nodes, and WeakMaps.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to clone.\n   * @returns {*} Returns the cloned value.\n   * @see _.cloneDeep\n   * @example\n   *\n   * var objects = [{ 'a': 1 }, { 'b': 2 }];\n   *\n   * var shallow = _.clone(objects);\n   * console.log(shallow[0] === objects[0]);\n   * // => true\n   */\n  function clone(value) {\n    if (!isObject(value)) {\n      return value;\n    }\n    return isArray(value) ? copyArray(value) : copyObject(value, nativeKeys(value));\n  }\n\n  /**\n   * Performs a\n   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n   * comparison between two values to determine if they are equivalent.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.eq(object, object);\n   * // => true\n   *\n   * _.eq(object, other);\n   * // => false\n   *\n   * _.eq('a', 'a');\n   * // => true\n   *\n   * _.eq('a', Object('a'));\n   * // => false\n   *\n   * _.eq(NaN, NaN);\n   * // => true\n   */\n  function eq(value, other) {\n    return value === other || (value !== value && other !== other);\n  }\n\n  /**\n   * Checks if `value` is likely an `arguments` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n   *  else `false`.\n   * @example\n   *\n   * _.isArguments(function() { return arguments; }());\n   * // => true\n   *\n   * _.isArguments([1, 2, 3]);\n   * // => false\n   */\n  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n      !propertyIsEnumerable.call(value, 'callee');\n  };\n\n  /**\n   * Checks if `value` is classified as an `Array` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n   * @example\n   *\n   * _.isArray([1, 2, 3]);\n   * // => true\n   *\n   * _.isArray(document.body.children);\n   * // => false\n   *\n   * _.isArray('abc');\n   * // => false\n   *\n   * _.isArray(_.noop);\n   * // => false\n   */\n  var isArray = Array.isArray;\n\n  /**\n   * Checks if `value` is array-like. A value is considered array-like if it's\n   * not a function and has a `value.length` that's an integer greater than or\n   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n   * @example\n   *\n   * _.isArrayLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isArrayLike(document.body.children);\n   * // => true\n   *\n   * _.isArrayLike('abc');\n   * // => true\n   *\n   * _.isArrayLike(_.noop);\n   * // => false\n   */\n  function isArrayLike(value) {\n    return value != null && isLength(value.length) && !isFunction(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a boolean primitive or object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n   * @example\n   *\n   * _.isBoolean(false);\n   * // => true\n   *\n   * _.isBoolean(null);\n   * // => false\n   */\n  function isBoolean(value) {\n    return value === true || value === false ||\n      (isObjectLike(value) && baseGetTag(value) == boolTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Date` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n   * @example\n   *\n   * _.isDate(new Date);\n   * // => true\n   *\n   * _.isDate('Mon April 23 2012');\n   * // => false\n   */\n  var isDate = baseIsDate;\n\n  /**\n   * Checks if `value` is an empty object, collection, map, or set.\n   *\n   * Objects are considered empty if they have no own enumerable string keyed\n   * properties.\n   *\n   * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n   * jQuery-like collections are considered empty if they have a `length` of `0`.\n   * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n   * @example\n   *\n   * _.isEmpty(null);\n   * // => true\n   *\n   * _.isEmpty(true);\n   * // => true\n   *\n   * _.isEmpty(1);\n   * // => true\n   *\n   * _.isEmpty([1, 2, 3]);\n   * // => false\n   *\n   * _.isEmpty({ 'a': 1 });\n   * // => false\n   */\n  function isEmpty(value) {\n    if (isArrayLike(value) &&\n        (isArray(value) || isString(value) ||\n          isFunction(value.splice) || isArguments(value))) {\n      return !value.length;\n    }\n    return !nativeKeys(value).length;\n  }\n\n  /**\n   * Performs a deep comparison between two values to determine if they are\n   * equivalent.\n   *\n   * **Note:** This method supports comparing arrays, array buffers, booleans,\n   * date objects, error objects, maps, numbers, `Object` objects, regexes,\n   * sets, strings, symbols, and typed arrays. `Object` objects are compared\n   * by their own, not inherited, enumerable properties. Functions and DOM\n   * nodes are compared by strict equality, i.e. `===`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   * var other = { 'a': 1 };\n   *\n   * _.isEqual(object, other);\n   * // => true\n   *\n   * object === other;\n   * // => false\n   */\n  function isEqual(value, other) {\n    return baseIsEqual(value, other);\n  }\n\n  /**\n   * Checks if `value` is a finite primitive number.\n   *\n   * **Note:** This method is based on\n   * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n   * @example\n   *\n   * _.isFinite(3);\n   * // => true\n   *\n   * _.isFinite(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isFinite(Infinity);\n   * // => false\n   *\n   * _.isFinite('3');\n   * // => false\n   */\n  function isFinite(value) {\n    return typeof value == 'number' && nativeIsFinite(value);\n  }\n\n  /**\n   * Checks if `value` is classified as a `Function` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n   * @example\n   *\n   * _.isFunction(_);\n   * // => true\n   *\n   * _.isFunction(/abc/);\n   * // => false\n   */\n  function isFunction(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in Safari 9 which returns 'object' for typed arrays and other constructors.\n    var tag = baseGetTag(value);\n    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n  }\n\n  /**\n   * Checks if `value` is a valid array-like length.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n   * @example\n   *\n   * _.isLength(3);\n   * // => true\n   *\n   * _.isLength(Number.MIN_VALUE);\n   * // => false\n   *\n   * _.isLength(Infinity);\n   * // => false\n   *\n   * _.isLength('3');\n   * // => false\n   */\n  function isLength(value) {\n    return typeof value == 'number' &&\n      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n  }\n\n  /**\n   * Checks if `value` is the\n   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n   * @example\n   *\n   * _.isObject({});\n   * // => true\n   *\n   * _.isObject([1, 2, 3]);\n   * // => true\n   *\n   * _.isObject(_.noop);\n   * // => true\n   *\n   * _.isObject(null);\n   * // => false\n   */\n  function isObject(value) {\n    var type = typeof value;\n    return value != null && (type == 'object' || type == 'function');\n  }\n\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n  function isObjectLike(value) {\n    return value != null && typeof value == 'object';\n  }\n\n  /**\n   * Checks if `value` is `NaN`.\n   *\n   * **Note:** This method is based on\n   * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n   * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n   * `undefined` and other non-number values.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   * @example\n   *\n   * _.isNaN(NaN);\n   * // => true\n   *\n   * _.isNaN(new Number(NaN));\n   * // => true\n   *\n   * isNaN(undefined);\n   * // => true\n   *\n   * _.isNaN(undefined);\n   * // => false\n   */\n  function isNaN(value) {\n    // An `NaN` primitive is the only value that is not equal to itself.\n    // Perform the `toStringTag` check first to avoid errors with some\n    // ActiveX objects in IE.\n    return isNumber(value) && value != +value;\n  }\n\n  /**\n   * Checks if `value` is `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n   * @example\n   *\n   * _.isNull(null);\n   * // => true\n   *\n   * _.isNull(void 0);\n   * // => false\n   */\n  function isNull(value) {\n    return value === null;\n  }\n\n  /**\n   * Checks if `value` is classified as a `Number` primitive or object.\n   *\n   * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n   * classified as numbers, use the `_.isFinite` method.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n   * @example\n   *\n   * _.isNumber(3);\n   * // => true\n   *\n   * _.isNumber(Number.MIN_VALUE);\n   * // => true\n   *\n   * _.isNumber(Infinity);\n   * // => true\n   *\n   * _.isNumber('3');\n   * // => false\n   */\n  function isNumber(value) {\n    return typeof value == 'number' ||\n      (isObjectLike(value) && baseGetTag(value) == numberTag);\n  }\n\n  /**\n   * Checks if `value` is classified as a `RegExp` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.1.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n   * @example\n   *\n   * _.isRegExp(/abc/);\n   * // => true\n   *\n   * _.isRegExp('/abc/');\n   * // => false\n   */\n  var isRegExp = baseIsRegExp;\n\n  /**\n   * Checks if `value` is classified as a `String` primitive or object.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n   * @example\n   *\n   * _.isString('abc');\n   * // => true\n   *\n   * _.isString(1);\n   * // => false\n   */\n  function isString(value) {\n    return typeof value == 'string' ||\n      (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n  }\n\n  /**\n   * Checks if `value` is `undefined`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n   * @example\n   *\n   * _.isUndefined(void 0);\n   * // => true\n   *\n   * _.isUndefined(null);\n   * // => false\n   */\n  function isUndefined(value) {\n    return value === undefined;\n  }\n\n  /**\n   * Converts `value` to an array.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {Array} Returns the converted array.\n   * @example\n   *\n   * _.toArray({ 'a': 1, 'b': 2 });\n   * // => [1, 2]\n   *\n   * _.toArray('abc');\n   * // => ['a', 'b', 'c']\n   *\n   * _.toArray(1);\n   * // => []\n   *\n   * _.toArray(null);\n   * // => []\n   */\n  function toArray(value) {\n    if (!isArrayLike(value)) {\n      return values(value);\n    }\n    return value.length ? copyArray(value) : [];\n  }\n\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  var toInteger = Number;\n\n  /**\n   * Converts `value` to a number.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to process.\n   * @returns {number} Returns the number.\n   * @example\n   *\n   * _.toNumber(3.2);\n   * // => 3.2\n   *\n   * _.toNumber(Number.MIN_VALUE);\n   * // => 5e-324\n   *\n   * _.toNumber(Infinity);\n   * // => Infinity\n   *\n   * _.toNumber('3.2');\n   * // => 3.2\n   */\n  var toNumber = Number;\n\n  /**\n   * Converts `value` to a string. An empty string is returned for `null`\n   * and `undefined` values. The sign of `-0` is preserved.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {string} Returns the converted string.\n   * @example\n   *\n   * _.toString(null);\n   * // => ''\n   *\n   * _.toString(-0);\n   * // => '-0'\n   *\n   * _.toString([1, 2, 3]);\n   * // => '1,2,3'\n   */\n  function toString(value) {\n    if (typeof value == 'string') {\n      return value;\n    }\n    return value == null ? '' : (value + '');\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Assigns own enumerable string keyed properties of source objects to the\n   * destination object. Source objects are applied from left to right.\n   * Subsequent sources overwrite property assignments of previous sources.\n   *\n   * **Note:** This method mutates `object` and is loosely based on\n   * [`Object.assign`](https://mdn.io/Object/assign).\n   *\n   * @static\n   * @memberOf _\n   * @since 0.10.0\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assignIn\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assign({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var assign = createAssigner(function(object, source) {\n    copyObject(source, nativeKeys(source), object);\n  });\n\n  /**\n   * This method is like `_.assign` except that it iterates over own and\n   * inherited source properties.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @alias extend\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.assign\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * function Bar() {\n   *   this.c = 3;\n   * }\n   *\n   * Foo.prototype.b = 2;\n   * Bar.prototype.d = 4;\n   *\n   * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n   * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n   */\n  var assignIn = createAssigner(function(object, source) {\n    copyObject(source, nativeKeysIn(source), object);\n  });\n\n  /**\n   * Creates an object that inherits from the `prototype` object. If a\n   * `properties` object is given, its own enumerable string keyed properties\n   * are assigned to the created object.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Object\n   * @param {Object} prototype The object to inherit from.\n   * @param {Object} [properties] The properties to assign to the object.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * function Shape() {\n   *   this.x = 0;\n   *   this.y = 0;\n   * }\n   *\n   * function Circle() {\n   *   Shape.call(this);\n   * }\n   *\n   * Circle.prototype = _.create(Shape.prototype, {\n   *   'constructor': Circle\n   * });\n   *\n   * var circle = new Circle;\n   * circle instanceof Circle;\n   * // => true\n   *\n   * circle instanceof Shape;\n   * // => true\n   */\n  function create(prototype, properties) {\n    var result = baseCreate(prototype);\n    return properties == null ? result : assign(result, properties);\n  }\n\n  /**\n   * Assigns own and inherited enumerable string keyed properties of source\n   * objects to the destination object for all destination properties that\n   * resolve to `undefined`. Source objects are applied from left to right.\n   * Once a property is set, additional values of the same property are ignored.\n   *\n   * **Note:** This method mutates `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The destination object.\n   * @param {...Object} [sources] The source objects.\n   * @returns {Object} Returns `object`.\n   * @see _.defaultsDeep\n   * @example\n   *\n   * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n   * // => { 'a': 1, 'b': 2 }\n   */\n  var defaults = baseRest(function(object, sources) {\n    object = Object(object);\n\n    var index = -1;\n    var length = sources.length;\n    var guard = length > 2 ? sources[2] : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      length = 1;\n    }\n\n    while (++index < length) {\n      var source = sources[index];\n      var props = keysIn(source);\n      var propsIndex = -1;\n      var propsLength = props.length;\n\n      while (++propsIndex < propsLength) {\n        var key = props[propsIndex];\n        var value = object[key];\n\n        if (value === undefined ||\n            (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n          object[key] = source[key];\n        }\n      }\n    }\n\n    return object;\n  });\n\n  /**\n   * Checks if `path` is a direct property of `object`.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path to check.\n   * @returns {boolean} Returns `true` if `path` exists, else `false`.\n   * @example\n   *\n   * var object = { 'a': { 'b': 2 } };\n   * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n   *\n   * _.has(object, 'a');\n   * // => true\n   *\n   * _.has(object, 'a.b');\n   * // => true\n   *\n   * _.has(object, ['a', 'b']);\n   * // => true\n   *\n   * _.has(other, 'a');\n   * // => false\n   */\n  function has(object, path) {\n    return object != null && hasOwnProperty.call(object, path);\n  }\n\n  /**\n   * Creates an array of the own enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects. See the\n   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n   * for more details.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keys(new Foo);\n   * // => ['a', 'b'] (iteration order is not guaranteed)\n   *\n   * _.keys('hi');\n   * // => ['0', '1']\n   */\n  var keys = nativeKeys;\n\n  /**\n   * Creates an array of the own and inherited enumerable property names of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property names.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.keysIn(new Foo);\n   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n   */\n  var keysIn = nativeKeysIn;\n\n  /**\n   * Creates an object composed of the picked `object` properties.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The source object.\n   * @param {...(string|string[])} [paths] The property paths to pick.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * var object = { 'a': 1, 'b': '2', 'c': 3 };\n   *\n   * _.pick(object, ['a', 'c']);\n   * // => { 'a': 1, 'c': 3 }\n   */\n  var pick = flatRest(function(object, paths) {\n    return object == null ? {} : basePick(object, paths);\n  });\n\n  /**\n   * This method is like `_.get` except that if the resolved value is a\n   * function it's invoked with the `this` binding of its parent object and\n   * its result is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @param {Array|string} path The path of the property to resolve.\n   * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n   * @returns {*} Returns the resolved value.\n   * @example\n   *\n   * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n   *\n   * _.result(object, 'a[0].b.c1');\n   * // => 3\n   *\n   * _.result(object, 'a[0].b.c2');\n   * // => 4\n   *\n   * _.result(object, 'a[0].b.c3', 'default');\n   * // => 'default'\n   *\n   * _.result(object, 'a[0].b.c3', _.constant('default'));\n   * // => 'default'\n   */\n  function result(object, path, defaultValue) {\n    var value = object == null ? undefined : object[path];\n    if (value === undefined) {\n      value = defaultValue;\n    }\n    return isFunction(value) ? value.call(object) : value;\n  }\n\n  /**\n   * Creates an array of the own enumerable string keyed property values of `object`.\n   *\n   * **Note:** Non-object values are coerced to objects.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Object\n   * @param {Object} object The object to query.\n   * @returns {Array} Returns the array of property values.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   *   this.b = 2;\n   * }\n   *\n   * Foo.prototype.c = 3;\n   *\n   * _.values(new Foo);\n   * // => [1, 2] (iteration order is not guaranteed)\n   *\n   * _.values('hi');\n   * // => ['h', 'i']\n   */\n  function values(object) {\n    return object == null ? [] : baseValues(object, keys(object));\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n   * corresponding HTML entities.\n   *\n   * **Note:** No other characters are escaped. To escape additional\n   * characters use a third-party library like [_he_](https://mths.be/he).\n   *\n   * Though the \">\" character is escaped for symmetry, characters like\n   * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n   * unless they're part of a tag or unquoted attribute value. See\n   * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n   * (under \"semi-related fun fact\") for more details.\n   *\n   * When working with HTML you should always\n   * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n   * XSS vectors.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category String\n   * @param {string} [string=''] The string to escape.\n   * @returns {string} Returns the escaped string.\n   * @example\n   *\n   * _.escape('fred, barney, & pebbles');\n   * // => 'fred, barney, &amp; pebbles'\n   */\n  function escape(string) {\n    string = toString(string);\n    return (string && reHasUnescapedHtml.test(string))\n      ? string.replace(reUnescapedHtml, escapeHtmlChar)\n      : string;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * This method returns the first argument it receives.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {*} value Any value.\n   * @returns {*} Returns `value`.\n   * @example\n   *\n   * var object = { 'a': 1 };\n   *\n   * console.log(_.identity(object) === object);\n   * // => true\n   */\n  function identity(value) {\n    return value;\n  }\n\n  /**\n   * Creates a function that invokes `func` with the arguments of the created\n   * function. If `func` is a property name, the created function returns the\n   * property value for a given element. If `func` is an array or object, the\n   * created function returns `true` for elements that contain the equivalent\n   * source properties, otherwise it returns `false`.\n   *\n   * @static\n   * @since 4.0.0\n   * @memberOf _\n   * @category Util\n   * @param {*} [func=_.identity] The value to convert to a callback.\n   * @returns {Function} Returns the callback.\n   * @example\n   *\n   * var users = [\n   *   { 'user': 'barney', 'age': 36, 'active': true },\n   *   { 'user': 'fred',   'age': 40, 'active': false }\n   * ];\n   *\n   * // The `_.matches` iteratee shorthand.\n   * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n   * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n   *\n   * // The `_.matchesProperty` iteratee shorthand.\n   * _.filter(users, _.iteratee(['user', 'fred']));\n   * // => [{ 'user': 'fred', 'age': 40 }]\n   *\n   * // The `_.property` iteratee shorthand.\n   * _.map(users, _.iteratee('user'));\n   * // => ['barney', 'fred']\n   *\n   * // Create custom iteratee shorthands.\n   * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n   *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n   *     return func.test(string);\n   *   };\n   * });\n   *\n   * _.filter(['abc', 'def'], /ef/);\n   * // => ['def']\n   */\n  var iteratee = baseIteratee;\n\n  /**\n   * Creates a function that performs a partial deep comparison between a given\n   * object and `source`, returning `true` if the given object has equivalent\n   * property values, else `false`.\n   *\n   * **Note:** The created function is equivalent to `_.isMatch` with `source`\n   * partially applied.\n   *\n   * Partial comparisons will match empty array and empty object `source`\n   * values against any array or object value, respectively. See `_.isEqual`\n   * for a list of supported value comparisons.\n   *\n   * @static\n   * @memberOf _\n   * @since 3.0.0\n   * @category Util\n   * @param {Object} source The object of property values to match.\n   * @returns {Function} Returns the new spec function.\n   * @example\n   *\n   * var objects = [\n   *   { 'a': 1, 'b': 2, 'c': 3 },\n   *   { 'a': 4, 'b': 5, 'c': 6 }\n   * ];\n   *\n   * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n   * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n   */\n  function matches(source) {\n    return baseMatches(assign({}, source));\n  }\n\n  /**\n   * Adds all own enumerable string keyed function properties of a source\n   * object to the destination object. If `object` is a function, then methods\n   * are added to its prototype as well.\n   *\n   * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n   * avoid conflicts caused by modifying the original.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {Function|Object} [object=lodash] The destination object.\n   * @param {Object} source The object of functions to add.\n   * @param {Object} [options={}] The options object.\n   * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n   * @returns {Function|Object} Returns `object`.\n   * @example\n   *\n   * function vowels(string) {\n   *   return _.filter(string, function(v) {\n   *     return /[aeiou]/i.test(v);\n   *   });\n   * }\n   *\n   * _.mixin({ 'vowels': vowels });\n   * _.vowels('fred');\n   * // => ['e']\n   *\n   * _('fred').vowels().value();\n   * // => ['e']\n   *\n   * _.mixin({ 'vowels': vowels }, { 'chain': false });\n   * _('fred').vowels();\n   * // => ['e']\n   */\n  function mixin(object, source, options) {\n    var props = keys(source),\n        methodNames = baseFunctions(source, props);\n\n    if (options == null &&\n        !(isObject(source) && (methodNames.length || !props.length))) {\n      options = source;\n      source = object;\n      object = this;\n      methodNames = baseFunctions(source, keys(source));\n    }\n    var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n        isFunc = isFunction(object);\n\n    baseEach(methodNames, function(methodName) {\n      var func = source[methodName];\n      object[methodName] = func;\n      if (isFunc) {\n        object.prototype[methodName] = function() {\n          var chainAll = this.__chain__;\n          if (chain || chainAll) {\n            var result = object(this.__wrapped__),\n                actions = result.__actions__ = copyArray(this.__actions__);\n\n            actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n            result.__chain__ = chainAll;\n            return result;\n          }\n          return func.apply(object, arrayPush([this.value()], arguments));\n        };\n      }\n    });\n\n    return object;\n  }\n\n  /**\n   * Reverts the `_` variable to its previous value and returns a reference to\n   * the `lodash` function.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @returns {Function} Returns the `lodash` function.\n   * @example\n   *\n   * var lodash = _.noConflict();\n   */\n  function noConflict() {\n    if (root._ === this) {\n      root._ = oldDash;\n    }\n    return this;\n  }\n\n  /**\n   * This method returns `undefined`.\n   *\n   * @static\n   * @memberOf _\n   * @since 2.3.0\n   * @category Util\n   * @example\n   *\n   * _.times(2, _.noop);\n   * // => [undefined, undefined]\n   */\n  function noop() {\n    // No operation performed.\n  }\n\n  /**\n   * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Util\n   * @param {string} [prefix=''] The value to prefix the ID with.\n   * @returns {string} Returns the unique ID.\n   * @example\n   *\n   * _.uniqueId('contact_');\n   * // => 'contact_104'\n   *\n   * _.uniqueId();\n   * // => '105'\n   */\n  function uniqueId(prefix) {\n    var id = ++idCounter;\n    return toString(prefix) + id;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * Computes the maximum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the maximum value.\n   * @example\n   *\n   * _.max([4, 2, 8, 6]);\n   * // => 8\n   *\n   * _.max([]);\n   * // => undefined\n   */\n  function max(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseGt)\n      : undefined;\n  }\n\n  /**\n   * Computes the minimum value of `array`. If `array` is empty or falsey,\n   * `undefined` is returned.\n   *\n   * @static\n   * @since 0.1.0\n   * @memberOf _\n   * @category Math\n   * @param {Array} array The array to iterate over.\n   * @returns {*} Returns the minimum value.\n   * @example\n   *\n   * _.min([4, 2, 8, 6]);\n   * // => 2\n   *\n   * _.min([]);\n   * // => undefined\n   */\n  function min(array) {\n    return (array && array.length)\n      ? baseExtremum(array, identity, baseLt)\n      : undefined;\n  }\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return wrapped values in chain sequences.\n  lodash.assignIn = assignIn;\n  lodash.before = before;\n  lodash.bind = bind;\n  lodash.chain = chain;\n  lodash.compact = compact;\n  lodash.concat = concat;\n  lodash.create = create;\n  lodash.defaults = defaults;\n  lodash.defer = defer;\n  lodash.delay = delay;\n  lodash.filter = filter;\n  lodash.flatten = flatten;\n  lodash.flattenDeep = flattenDeep;\n  lodash.iteratee = iteratee;\n  lodash.keys = keys;\n  lodash.map = map;\n  lodash.matches = matches;\n  lodash.mixin = mixin;\n  lodash.negate = negate;\n  lodash.once = once;\n  lodash.pick = pick;\n  lodash.slice = slice;\n  lodash.sortBy = sortBy;\n  lodash.tap = tap;\n  lodash.thru = thru;\n  lodash.toArray = toArray;\n  lodash.values = values;\n\n  // Add aliases.\n  lodash.extend = assignIn;\n\n  // Add methods to `lodash.prototype`.\n  mixin(lodash, lodash);\n\n  /*------------------------------------------------------------------------*/\n\n  // Add methods that return unwrapped values in chain sequences.\n  lodash.clone = clone;\n  lodash.escape = escape;\n  lodash.every = every;\n  lodash.find = find;\n  lodash.forEach = forEach;\n  lodash.has = has;\n  lodash.head = head;\n  lodash.identity = identity;\n  lodash.indexOf = indexOf;\n  lodash.isArguments = isArguments;\n  lodash.isArray = isArray;\n  lodash.isBoolean = isBoolean;\n  lodash.isDate = isDate;\n  lodash.isEmpty = isEmpty;\n  lodash.isEqual = isEqual;\n  lodash.isFinite = isFinite;\n  lodash.isFunction = isFunction;\n  lodash.isNaN = isNaN;\n  lodash.isNull = isNull;\n  lodash.isNumber = isNumber;\n  lodash.isObject = isObject;\n  lodash.isRegExp = isRegExp;\n  lodash.isString = isString;\n  lodash.isUndefined = isUndefined;\n  lodash.last = last;\n  lodash.max = max;\n  lodash.min = min;\n  lodash.noConflict = noConflict;\n  lodash.noop = noop;\n  lodash.reduce = reduce;\n  lodash.result = result;\n  lodash.size = size;\n  lodash.some = some;\n  lodash.uniqueId = uniqueId;\n\n  // Add aliases.\n  lodash.each = forEach;\n  lodash.first = head;\n\n  mixin(lodash, (function() {\n    var source = {};\n    baseForOwn(lodash, function(func, methodName) {\n      if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n        source[methodName] = func;\n      }\n    });\n    return source;\n  }()), { 'chain': false });\n\n  /*------------------------------------------------------------------------*/\n\n  /**\n   * The semantic version number.\n   *\n   * @static\n   * @memberOf _\n   * @type {string}\n   */\n  lodash.VERSION = VERSION;\n\n  // Add `Array` methods to `lodash.prototype`.\n  baseEach(['pop', 'join', 'replace', 'reverse', 'split', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n    var func = (/^(?:replace|split)$/.test(methodName) ? String.prototype : arrayProto)[methodName],\n        chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n        retUnwrapped = /^(?:pop|join|replace|shift)$/.test(methodName);\n\n    lodash.prototype[methodName] = function() {\n      var args = arguments;\n      if (retUnwrapped && !this.__chain__) {\n        var value = this.value();\n        return func.apply(isArray(value) ? value : [], args);\n      }\n      return this[chainName](function(value) {\n        return func.apply(isArray(value) ? value : [], args);\n      });\n    };\n  });\n\n  // Add chain sequence methods to the `lodash` wrapper.\n  lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n  /*--------------------------------------------------------------------------*/\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = lodash;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return lodash;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = lodash)._ = lodash;\n    // Export for CommonJS support.\n    freeExports._ = lodash;\n  }\n  else {\n    // Export to the global object.\n    root._ = lodash;\n  }\n}.call(this));\n","module.exports = MultiStream\n\nvar inherits = require('inherits')\nvar stream = require('readable-stream')\n\ninherits(MultiStream, stream.Readable)\n\nfunction MultiStream (streams, opts) {\n  var self = this\n  if (!(self instanceof MultiStream)) return new MultiStream(streams, opts)\n  stream.Readable.call(self, opts)\n\n  self.destroyed = false\n\n  self._drained = false\n  self._forwarding = false\n  self._current = null\n  self._toStreams2 = (opts && opts.objectMode) ? toStreams2Obj : toStreams2Buf\n\n  if (typeof streams === 'function') {\n    self._queue = streams\n  } else {\n    self._queue = streams.map(self._toStreams2)\n    self._queue.forEach(function (stream) {\n      if (typeof stream !== 'function') self._attachErrorListener(stream)\n    })\n  }\n\n  self._next()\n}\n\nMultiStream.obj = function (streams) {\n  return new MultiStream(streams, { objectMode: true, highWaterMark: 16 })\n}\n\nMultiStream.prototype._read = function () {\n  this._drained = true\n  this._forward()\n}\n\nMultiStream.prototype._forward = function () {\n  if (this._forwarding || !this._drained || !this._current) return\n  this._forwarding = true\n\n  var chunk\n  while ((chunk = this._current.read()) !== null) {\n    this._drained = this.push(chunk)\n  }\n\n  this._forwarding = false\n}\n\nMultiStream.prototype.destroy = function (err) {\n  if (this.destroyed) return\n  this.destroyed = true\n\n  if (this._current && this._current.destroy) this._current.destroy()\n  if (typeof this._queue !== 'function') {\n    this._queue.forEach(function (stream) {\n      if (stream.destroy) stream.destroy()\n    })\n  }\n\n  if (err) this.emit('error', err)\n  this.emit('close')\n}\n\nMultiStream.prototype._next = function () {\n  var self = this\n  self._current = null\n\n  if (typeof self._queue === 'function') {\n    self._queue(function (err, stream) {\n      if (err) return self.destroy(err)\n      stream = self._toStreams2(stream)\n      self._attachErrorListener(stream)\n      self._gotNextStream(stream)\n    })\n  } else {\n    var stream = self._queue.shift()\n    if (typeof stream === 'function') {\n      stream = self._toStreams2(stream())\n      self._attachErrorListener(stream)\n    }\n    self._gotNextStream(stream)\n  }\n}\n\nMultiStream.prototype._gotNextStream = function (stream) {\n  var self = this\n\n  if (!stream) {\n    self.push(null)\n    self.destroy()\n    return\n  }\n\n  self._current = stream\n  self._forward()\n\n  stream.on('readable', onReadable)\n  stream.once('end', onEnd)\n  stream.once('close', onClose)\n\n  function onReadable () {\n    self._forward()\n  }\n\n  function onClose () {\n    if (!stream._readableState.ended) {\n      self.destroy()\n    }\n  }\n\n  function onEnd () {\n    self._current = null\n    stream.removeListener('readable', onReadable)\n    stream.removeListener('end', onEnd)\n    stream.removeListener('close', onClose)\n    self._next()\n  }\n}\n\nMultiStream.prototype._attachErrorListener = function (stream) {\n  var self = this\n  if (!stream) return\n\n  stream.once('error', onError)\n\n  function onError (err) {\n    stream.removeListener('error', onError)\n    self.destroy(err)\n  }\n}\n\nfunction toStreams2Obj (s) {\n  return toStreams2(s, {objectMode: true, highWaterMark: 16})\n}\n\nfunction toStreams2Buf (s) {\n  return toStreams2(s)\n}\n\nfunction toStreams2 (s, opts) {\n  if (!s || typeof s === 'function' || s._readableState) return s\n\n  var wrap = new stream.Readable(opts).wrap(s)\n  if (s.destroy) {\n    wrap.destroy = s.destroy.bind(s)\n  }\n  return wrap\n}\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._40 = 0;\n  this._65 = 0;\n  this._55 = null;\n  this._72 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._37 = null;\nPromise._87 = null;\nPromise._61 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._65 === 3) {\n    self = self._55;\n  }\n  if (Promise._37) {\n    Promise._37(self);\n  }\n  if (self._65 === 0) {\n    if (self._40 === 0) {\n      self._40 = 1;\n      self._72 = deferred;\n      return;\n    }\n    if (self._40 === 1) {\n      self._40 = 2;\n      self._72 = [self._72, deferred];\n      return;\n    }\n    self._72.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._65 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._65 === 1) {\n        resolve(deferred.promise, self._55);\n      } else {\n        reject(deferred.promise, self._55);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._55);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._65 = 3;\n      self._55 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._65 = 1;\n  self._55 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._65 = 2;\n  self._55 = newValue;\n  if (Promise._87) {\n    Promise._87(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._40 === 1) {\n    handle(self, self._72);\n    self._72 = null;\n  }\n  if (self._40 === 2) {\n    for (var i = 0; i < self._72.length; i++) {\n      handle(self, self._72[i]);\n    }\n    self._72 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._61);\n  p._65 = 1;\n  p._55 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._65 === 3) {\n            val = val._55;\n          }\n          if (val._65 === 1) return res(i, val._55);\n          if (val._65 === 2) reject(val._55);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","module.exports = require('./lib/_stream_duplex.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","module.exports = require('./readable').PassThrough\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_writable.js');\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",";(function (sax) { // wrapper for non-node envs\n  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }\n  sax.SAXParser = SAXParser\n  sax.SAXStream = SAXStream\n  sax.createStream = createStream\n\n  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.\n  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),\n  // since that's the earliest that a buffer overrun could occur.  This way, checks are\n  // as rare as required, but as often as necessary to ensure never crossing this bound.\n  // Furthermore, buffers are only tested at most once per write(), so passing a very\n  // large string into write() might have undesirable effects, but this is manageable by\n  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme\n  // edge case, result in creating at most one complete copy of the string passed in.\n  // Set to Infinity to have unlimited buffers.\n  sax.MAX_BUFFER_LENGTH = 64 * 1024\n\n  var buffers = [\n    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',\n    'procInstName', 'procInstBody', 'entity', 'attribName',\n    'attribValue', 'cdata', 'script'\n  ]\n\n  sax.EVENTS = [\n    'text',\n    'processinginstruction',\n    'sgmldeclaration',\n    'doctype',\n    'comment',\n    'opentagstart',\n    'attribute',\n    'opentag',\n    'closetag',\n    'opencdata',\n    'cdata',\n    'closecdata',\n    'error',\n    'end',\n    'ready',\n    'script',\n    'opennamespace',\n    'closenamespace'\n  ]\n\n  function SAXParser (strict, opt) {\n    if (!(this instanceof SAXParser)) {\n      return new SAXParser(strict, opt)\n    }\n\n    var parser = this\n    clearBuffers(parser)\n    parser.q = parser.c = ''\n    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH\n    parser.opt = opt || {}\n    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags\n    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'\n    parser.tags = []\n    parser.closed = parser.closedRoot = parser.sawRoot = false\n    parser.tag = parser.error = null\n    parser.strict = !!strict\n    parser.noscript = !!(strict || parser.opt.noscript)\n    parser.state = S.BEGIN\n    parser.strictEntities = parser.opt.strictEntities\n    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)\n    parser.attribList = []\n\n    // namespaces form a prototype chain.\n    // it always points at the current tag,\n    // which protos to its parent tag.\n    if (parser.opt.xmlns) {\n      parser.ns = Object.create(rootNS)\n    }\n\n    // mostly just for error reporting\n    parser.trackPosition = parser.opt.position !== false\n    if (parser.trackPosition) {\n      parser.position = parser.line = parser.column = 0\n    }\n    emit(parser, 'onready')\n  }\n\n  if (!Object.create) {\n    Object.create = function (o) {\n      function F () {}\n      F.prototype = o\n      var newf = new F()\n      return newf\n    }\n  }\n\n  if (!Object.keys) {\n    Object.keys = function (o) {\n      var a = []\n      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)\n      return a\n    }\n  }\n\n  function checkBufferLength (parser) {\n    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)\n    var maxActual = 0\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      var len = parser[buffers[i]].length\n      if (len > maxAllowed) {\n        // Text/cdata nodes can get big, and since they're buffered,\n        // we can get here under normal conditions.\n        // Avoid issues by emitting the text node now,\n        // so at least it won't get any bigger.\n        switch (buffers[i]) {\n          case 'textNode':\n            closeText(parser)\n            break\n\n          case 'cdata':\n            emitNode(parser, 'oncdata', parser.cdata)\n            parser.cdata = ''\n            break\n\n          case 'script':\n            emitNode(parser, 'onscript', parser.script)\n            parser.script = ''\n            break\n\n          default:\n            error(parser, 'Max buffer length exceeded: ' + buffers[i])\n        }\n      }\n      maxActual = Math.max(maxActual, len)\n    }\n    // schedule the next check for the earliest possible buffer overrun.\n    var m = sax.MAX_BUFFER_LENGTH - maxActual\n    parser.bufferCheckPosition = m + parser.position\n  }\n\n  function clearBuffers (parser) {\n    for (var i = 0, l = buffers.length; i < l; i++) {\n      parser[buffers[i]] = ''\n    }\n  }\n\n  function flushBuffers (parser) {\n    closeText(parser)\n    if (parser.cdata !== '') {\n      emitNode(parser, 'oncdata', parser.cdata)\n      parser.cdata = ''\n    }\n    if (parser.script !== '') {\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n  }\n\n  SAXParser.prototype = {\n    end: function () { end(this) },\n    write: write,\n    resume: function () { this.error = null; return this },\n    close: function () { return this.write(null) },\n    flush: function () { flushBuffers(this) }\n  }\n\n  var Stream\n  try {\n    Stream = require('stream').Stream\n  } catch (ex) {\n    Stream = function () {}\n  }\n\n  var streamWraps = sax.EVENTS.filter(function (ev) {\n    return ev !== 'error' && ev !== 'end'\n  })\n\n  function createStream (strict, opt) {\n    return new SAXStream(strict, opt)\n  }\n\n  function SAXStream (strict, opt) {\n    if (!(this instanceof SAXStream)) {\n      return new SAXStream(strict, opt)\n    }\n\n    Stream.apply(this)\n\n    this._parser = new SAXParser(strict, opt)\n    this.writable = true\n    this.readable = true\n\n    var me = this\n\n    this._parser.onend = function () {\n      me.emit('end')\n    }\n\n    this._parser.onerror = function (er) {\n      me.emit('error', er)\n\n      // if didn't throw, then means error was handled.\n      // go ahead and clear error, so we can write again.\n      me._parser.error = null\n    }\n\n    this._decoder = null\n\n    streamWraps.forEach(function (ev) {\n      Object.defineProperty(me, 'on' + ev, {\n        get: function () {\n          return me._parser['on' + ev]\n        },\n        set: function (h) {\n          if (!h) {\n            me.removeAllListeners(ev)\n            me._parser['on' + ev] = h\n            return h\n          }\n          me.on(ev, h)\n        },\n        enumerable: true,\n        configurable: false\n      })\n    })\n  }\n\n  SAXStream.prototype = Object.create(Stream.prototype, {\n    constructor: {\n      value: SAXStream\n    }\n  })\n\n  SAXStream.prototype.write = function (data) {\n    if (typeof Buffer === 'function' &&\n      typeof Buffer.isBuffer === 'function' &&\n      Buffer.isBuffer(data)) {\n      if (!this._decoder) {\n        var SD = require('string_decoder').StringDecoder\n        this._decoder = new SD('utf8')\n      }\n      data = this._decoder.write(data)\n    }\n\n    this._parser.write(data.toString())\n    this.emit('data', data)\n    return true\n  }\n\n  SAXStream.prototype.end = function (chunk) {\n    if (chunk && chunk.length) {\n      this.write(chunk)\n    }\n    this._parser.end()\n    return true\n  }\n\n  SAXStream.prototype.on = function (ev, handler) {\n    var me = this\n    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {\n      me._parser['on' + ev] = function () {\n        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)\n        args.splice(0, 0, ev)\n        me.emit.apply(me, args)\n      }\n    }\n\n    return Stream.prototype.on.call(me, ev, handler)\n  }\n\n  // this really needs to be replaced with character classes.\n  // XML allows all manner of ridiculous numbers and digits.\n  var CDATA = '[CDATA['\n  var DOCTYPE = 'DOCTYPE'\n  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'\n  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'\n  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }\n\n  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar\n  // This implementation works on strings, a single character at a time\n  // as such, it cannot ever support astral-plane characters (10000-EFFFF)\n  // without a significant breaking change to either this  parser, or the\n  // JavaScript language.  Implementation of an emoji-capable xml parser\n  // is left as an exercise for the reader.\n  var nameStart = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n\n  var nameBody = /[:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  var entityStart = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/\n  var entityBody = /[#:_A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\u00B7\\u0300-\\u036F\\u203F-\\u2040.\\d-]/\n\n  function isWhitespace (c) {\n    return c === ' ' || c === '\\n' || c === '\\r' || c === '\\t'\n  }\n\n  function isQuote (c) {\n    return c === '\"' || c === '\\''\n  }\n\n  function isAttribEnd (c) {\n    return c === '>' || isWhitespace(c)\n  }\n\n  function isMatch (regex, c) {\n    return regex.test(c)\n  }\n\n  function notMatch (regex, c) {\n    return !isMatch(regex, c)\n  }\n\n  var S = 0\n  sax.STATE = {\n    BEGIN: S++, // leading byte order mark or whitespace\n    BEGIN_WHITESPACE: S++, // leading whitespace\n    TEXT: S++, // general stuff\n    TEXT_ENTITY: S++, // &amp and such.\n    OPEN_WAKA: S++, // <\n    SGML_DECL: S++, // <!BLARG\n    SGML_DECL_QUOTED: S++, // <!BLARG foo \"bar\n    DOCTYPE: S++, // <!DOCTYPE\n    DOCTYPE_QUOTED: S++, // <!DOCTYPE \"//blah\n    DOCTYPE_DTD: S++, // <!DOCTYPE \"//blah\" [ ...\n    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE \"//blah\" [ \"foo\n    COMMENT_STARTING: S++, // <!-\n    COMMENT: S++, // <!--\n    COMMENT_ENDING: S++, // <!-- blah -\n    COMMENT_ENDED: S++, // <!-- blah --\n    CDATA: S++, // <![CDATA[ something\n    CDATA_ENDING: S++, // ]\n    CDATA_ENDING_2: S++, // ]]\n    PROC_INST: S++, // <?hi\n    PROC_INST_BODY: S++, // <?hi there\n    PROC_INST_ENDING: S++, // <?hi \"there\" ?\n    OPEN_TAG: S++, // <strong\n    OPEN_TAG_SLASH: S++, // <strong /\n    ATTRIB: S++, // <a\n    ATTRIB_NAME: S++, // <a foo\n    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _\n    ATTRIB_VALUE: S++, // <a foo=\n    ATTRIB_VALUE_QUOTED: S++, // <a foo=\"bar\n    ATTRIB_VALUE_CLOSED: S++, // <a foo=\"bar\"\n    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar\n    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar=\"&quot;\"\n    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot\n    CLOSE_TAG: S++, // </a\n    CLOSE_TAG_SAW_WHITE: S++, // </a   >\n    SCRIPT: S++, // <script> ...\n    SCRIPT_ENDING: S++ // <script> ... <\n  }\n\n  sax.XML_ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\"\n  }\n\n  sax.ENTITIES = {\n    'amp': '&',\n    'gt': '>',\n    'lt': '<',\n    'quot': '\"',\n    'apos': \"'\",\n    'AElig': 198,\n    'Aacute': 193,\n    'Acirc': 194,\n    'Agrave': 192,\n    'Aring': 197,\n    'Atilde': 195,\n    'Auml': 196,\n    'Ccedil': 199,\n    'ETH': 208,\n    'Eacute': 201,\n    'Ecirc': 202,\n    'Egrave': 200,\n    'Euml': 203,\n    'Iacute': 205,\n    'Icirc': 206,\n    'Igrave': 204,\n    'Iuml': 207,\n    'Ntilde': 209,\n    'Oacute': 211,\n    'Ocirc': 212,\n    'Ograve': 210,\n    'Oslash': 216,\n    'Otilde': 213,\n    'Ouml': 214,\n    'THORN': 222,\n    'Uacute': 218,\n    'Ucirc': 219,\n    'Ugrave': 217,\n    'Uuml': 220,\n    'Yacute': 221,\n    'aacute': 225,\n    'acirc': 226,\n    'aelig': 230,\n    'agrave': 224,\n    'aring': 229,\n    'atilde': 227,\n    'auml': 228,\n    'ccedil': 231,\n    'eacute': 233,\n    'ecirc': 234,\n    'egrave': 232,\n    'eth': 240,\n    'euml': 235,\n    'iacute': 237,\n    'icirc': 238,\n    'igrave': 236,\n    'iuml': 239,\n    'ntilde': 241,\n    'oacute': 243,\n    'ocirc': 244,\n    'ograve': 242,\n    'oslash': 248,\n    'otilde': 245,\n    'ouml': 246,\n    'szlig': 223,\n    'thorn': 254,\n    'uacute': 250,\n    'ucirc': 251,\n    'ugrave': 249,\n    'uuml': 252,\n    'yacute': 253,\n    'yuml': 255,\n    'copy': 169,\n    'reg': 174,\n    'nbsp': 160,\n    'iexcl': 161,\n    'cent': 162,\n    'pound': 163,\n    'curren': 164,\n    'yen': 165,\n    'brvbar': 166,\n    'sect': 167,\n    'uml': 168,\n    'ordf': 170,\n    'laquo': 171,\n    'not': 172,\n    'shy': 173,\n    'macr': 175,\n    'deg': 176,\n    'plusmn': 177,\n    'sup1': 185,\n    'sup2': 178,\n    'sup3': 179,\n    'acute': 180,\n    'micro': 181,\n    'para': 182,\n    'middot': 183,\n    'cedil': 184,\n    'ordm': 186,\n    'raquo': 187,\n    'frac14': 188,\n    'frac12': 189,\n    'frac34': 190,\n    'iquest': 191,\n    'times': 215,\n    'divide': 247,\n    'OElig': 338,\n    'oelig': 339,\n    'Scaron': 352,\n    'scaron': 353,\n    'Yuml': 376,\n    'fnof': 402,\n    'circ': 710,\n    'tilde': 732,\n    'Alpha': 913,\n    'Beta': 914,\n    'Gamma': 915,\n    'Delta': 916,\n    'Epsilon': 917,\n    'Zeta': 918,\n    'Eta': 919,\n    'Theta': 920,\n    'Iota': 921,\n    'Kappa': 922,\n    'Lambda': 923,\n    'Mu': 924,\n    'Nu': 925,\n    'Xi': 926,\n    'Omicron': 927,\n    'Pi': 928,\n    'Rho': 929,\n    'Sigma': 931,\n    'Tau': 932,\n    'Upsilon': 933,\n    'Phi': 934,\n    'Chi': 935,\n    'Psi': 936,\n    'Omega': 937,\n    'alpha': 945,\n    'beta': 946,\n    'gamma': 947,\n    'delta': 948,\n    'epsilon': 949,\n    'zeta': 950,\n    'eta': 951,\n    'theta': 952,\n    'iota': 953,\n    'kappa': 954,\n    'lambda': 955,\n    'mu': 956,\n    'nu': 957,\n    'xi': 958,\n    'omicron': 959,\n    'pi': 960,\n    'rho': 961,\n    'sigmaf': 962,\n    'sigma': 963,\n    'tau': 964,\n    'upsilon': 965,\n    'phi': 966,\n    'chi': 967,\n    'psi': 968,\n    'omega': 969,\n    'thetasym': 977,\n    'upsih': 978,\n    'piv': 982,\n    'ensp': 8194,\n    'emsp': 8195,\n    'thinsp': 8201,\n    'zwnj': 8204,\n    'zwj': 8205,\n    'lrm': 8206,\n    'rlm': 8207,\n    'ndash': 8211,\n    'mdash': 8212,\n    'lsquo': 8216,\n    'rsquo': 8217,\n    'sbquo': 8218,\n    'ldquo': 8220,\n    'rdquo': 8221,\n    'bdquo': 8222,\n    'dagger': 8224,\n    'Dagger': 8225,\n    'bull': 8226,\n    'hellip': 8230,\n    'permil': 8240,\n    'prime': 8242,\n    'Prime': 8243,\n    'lsaquo': 8249,\n    'rsaquo': 8250,\n    'oline': 8254,\n    'frasl': 8260,\n    'euro': 8364,\n    'image': 8465,\n    'weierp': 8472,\n    'real': 8476,\n    'trade': 8482,\n    'alefsym': 8501,\n    'larr': 8592,\n    'uarr': 8593,\n    'rarr': 8594,\n    'darr': 8595,\n    'harr': 8596,\n    'crarr': 8629,\n    'lArr': 8656,\n    'uArr': 8657,\n    'rArr': 8658,\n    'dArr': 8659,\n    'hArr': 8660,\n    'forall': 8704,\n    'part': 8706,\n    'exist': 8707,\n    'empty': 8709,\n    'nabla': 8711,\n    'isin': 8712,\n    'notin': 8713,\n    'ni': 8715,\n    'prod': 8719,\n    'sum': 8721,\n    'minus': 8722,\n    'lowast': 8727,\n    'radic': 8730,\n    'prop': 8733,\n    'infin': 8734,\n    'ang': 8736,\n    'and': 8743,\n    'or': 8744,\n    'cap': 8745,\n    'cup': 8746,\n    'int': 8747,\n    'there4': 8756,\n    'sim': 8764,\n    'cong': 8773,\n    'asymp': 8776,\n    'ne': 8800,\n    'equiv': 8801,\n    'le': 8804,\n    'ge': 8805,\n    'sub': 8834,\n    'sup': 8835,\n    'nsub': 8836,\n    'sube': 8838,\n    'supe': 8839,\n    'oplus': 8853,\n    'otimes': 8855,\n    'perp': 8869,\n    'sdot': 8901,\n    'lceil': 8968,\n    'rceil': 8969,\n    'lfloor': 8970,\n    'rfloor': 8971,\n    'lang': 9001,\n    'rang': 9002,\n    'loz': 9674,\n    'spades': 9824,\n    'clubs': 9827,\n    'hearts': 9829,\n    'diams': 9830\n  }\n\n  Object.keys(sax.ENTITIES).forEach(function (key) {\n    var e = sax.ENTITIES[key]\n    var s = typeof e === 'number' ? String.fromCharCode(e) : e\n    sax.ENTITIES[key] = s\n  })\n\n  for (var s in sax.STATE) {\n    sax.STATE[sax.STATE[s]] = s\n  }\n\n  // shorthand\n  S = sax.STATE\n\n  function emit (parser, event, data) {\n    parser[event] && parser[event](data)\n  }\n\n  function emitNode (parser, nodeType, data) {\n    if (parser.textNode) closeText(parser)\n    emit(parser, nodeType, data)\n  }\n\n  function closeText (parser) {\n    parser.textNode = textopts(parser.opt, parser.textNode)\n    if (parser.textNode) emit(parser, 'ontext', parser.textNode)\n    parser.textNode = ''\n  }\n\n  function textopts (opt, text) {\n    if (opt.trim) text = text.trim()\n    if (opt.normalize) text = text.replace(/\\s+/g, ' ')\n    return text\n  }\n\n  function error (parser, er) {\n    closeText(parser)\n    if (parser.trackPosition) {\n      er += '\\nLine: ' + parser.line +\n        '\\nColumn: ' + parser.column +\n        '\\nChar: ' + parser.c\n    }\n    er = new Error(er)\n    parser.error = er\n    emit(parser, 'onerror', er)\n    return parser\n  }\n\n  function end (parser) {\n    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')\n    if ((parser.state !== S.BEGIN) &&\n      (parser.state !== S.BEGIN_WHITESPACE) &&\n      (parser.state !== S.TEXT)) {\n      error(parser, 'Unexpected end')\n    }\n    closeText(parser)\n    parser.c = ''\n    parser.closed = true\n    emit(parser, 'onend')\n    SAXParser.call(parser, parser.strict, parser.opt)\n    return parser\n  }\n\n  function strictFail (parser, message) {\n    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {\n      throw new Error('bad call to strictFail')\n    }\n    if (parser.strict) {\n      error(parser, message)\n    }\n  }\n\n  function newTag (parser) {\n    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()\n    var parent = parser.tags[parser.tags.length - 1] || parser\n    var tag = parser.tag = { name: parser.tagName, attributes: {} }\n\n    // will be overridden if tag contails an xmlns=\"foo\" or xmlns:foo=\"bar\"\n    if (parser.opt.xmlns) {\n      tag.ns = parent.ns\n    }\n    parser.attribList.length = 0\n    emitNode(parser, 'onopentagstart', tag)\n  }\n\n  function qname (name, attribute) {\n    var i = name.indexOf(':')\n    var qualName = i < 0 ? [ '', name ] : name.split(':')\n    var prefix = qualName[0]\n    var local = qualName[1]\n\n    // <x \"xmlns\"=\"http://foo\">\n    if (attribute && name === 'xmlns') {\n      prefix = 'xmlns'\n      local = ''\n    }\n\n    return { prefix: prefix, local: local }\n  }\n\n  function attrib (parser) {\n    if (!parser.strict) {\n      parser.attribName = parser.attribName[parser.looseCase]()\n    }\n\n    if (parser.attribList.indexOf(parser.attribName) !== -1 ||\n      parser.tag.attributes.hasOwnProperty(parser.attribName)) {\n      parser.attribName = parser.attribValue = ''\n      return\n    }\n\n    if (parser.opt.xmlns) {\n      var qn = qname(parser.attribName, true)\n      var prefix = qn.prefix\n      var local = qn.local\n\n      if (prefix === 'xmlns') {\n        // namespace binding attribute. push the binding into scope\n        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {\n          strictFail(parser,\n            'xml: prefix must be bound to ' + XML_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {\n          strictFail(parser,\n            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\\n' +\n            'Actual: ' + parser.attribValue)\n        } else {\n          var tag = parser.tag\n          var parent = parser.tags[parser.tags.length - 1] || parser\n          if (tag.ns === parent.ns) {\n            tag.ns = Object.create(parent.ns)\n          }\n          tag.ns[local] = parser.attribValue\n        }\n      }\n\n      // defer onattribute events until all attributes have been seen\n      // so any new bindings can take effect. preserve attribute order\n      // so deferred events can be emitted in document order\n      parser.attribList.push([parser.attribName, parser.attribValue])\n    } else {\n      // in non-xmlns mode, we can emit the event right away\n      parser.tag.attributes[parser.attribName] = parser.attribValue\n      emitNode(parser, 'onattribute', {\n        name: parser.attribName,\n        value: parser.attribValue\n      })\n    }\n\n    parser.attribName = parser.attribValue = ''\n  }\n\n  function openTag (parser, selfClosing) {\n    if (parser.opt.xmlns) {\n      // emit namespace binding events\n      var tag = parser.tag\n\n      // add namespace info to tag\n      var qn = qname(parser.tagName)\n      tag.prefix = qn.prefix\n      tag.local = qn.local\n      tag.uri = tag.ns[qn.prefix] || ''\n\n      if (tag.prefix && !tag.uri) {\n        strictFail(parser, 'Unbound namespace prefix: ' +\n          JSON.stringify(parser.tagName))\n        tag.uri = qn.prefix\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (tag.ns && parent.ns !== tag.ns) {\n        Object.keys(tag.ns).forEach(function (p) {\n          emitNode(parser, 'onopennamespace', {\n            prefix: p,\n            uri: tag.ns[p]\n          })\n        })\n      }\n\n      // handle deferred onattribute events\n      // Note: do not apply default ns to attributes:\n      //   http://www.w3.org/TR/REC-xml-names/#defaulting\n      for (var i = 0, l = parser.attribList.length; i < l; i++) {\n        var nv = parser.attribList[i]\n        var name = nv[0]\n        var value = nv[1]\n        var qualName = qname(name, true)\n        var prefix = qualName.prefix\n        var local = qualName.local\n        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')\n        var a = {\n          name: name,\n          value: value,\n          prefix: prefix,\n          local: local,\n          uri: uri\n        }\n\n        // if there's any attributes with an undefined namespace,\n        // then fail on them now.\n        if (prefix && prefix !== 'xmlns' && !uri) {\n          strictFail(parser, 'Unbound namespace prefix: ' +\n            JSON.stringify(prefix))\n          a.uri = prefix\n        }\n        parser.tag.attributes[name] = a\n        emitNode(parser, 'onattribute', a)\n      }\n      parser.attribList.length = 0\n    }\n\n    parser.tag.isSelfClosing = !!selfClosing\n\n    // process the tag\n    parser.sawRoot = true\n    parser.tags.push(parser.tag)\n    emitNode(parser, 'onopentag', parser.tag)\n    if (!selfClosing) {\n      // special case for <script> in non-strict mode.\n      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {\n        parser.state = S.SCRIPT\n      } else {\n        parser.state = S.TEXT\n      }\n      parser.tag = null\n      parser.tagName = ''\n    }\n    parser.attribName = parser.attribValue = ''\n    parser.attribList.length = 0\n  }\n\n  function closeTag (parser) {\n    if (!parser.tagName) {\n      strictFail(parser, 'Weird empty close tag.')\n      parser.textNode += '</>'\n      parser.state = S.TEXT\n      return\n    }\n\n    if (parser.script) {\n      if (parser.tagName !== 'script') {\n        parser.script += '</' + parser.tagName + '>'\n        parser.tagName = ''\n        parser.state = S.SCRIPT\n        return\n      }\n      emitNode(parser, 'onscript', parser.script)\n      parser.script = ''\n    }\n\n    // first make sure that the closing tag actually exists.\n    // <a><b></c></b></a> will close everything, otherwise.\n    var t = parser.tags.length\n    var tagName = parser.tagName\n    if (!parser.strict) {\n      tagName = tagName[parser.looseCase]()\n    }\n    var closeTo = tagName\n    while (t--) {\n      var close = parser.tags[t]\n      if (close.name !== closeTo) {\n        // fail the first time in strict mode\n        strictFail(parser, 'Unexpected close tag')\n      } else {\n        break\n      }\n    }\n\n    // didn't find it.  we already failed for strict, so just abort.\n    if (t < 0) {\n      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)\n      parser.textNode += '</' + parser.tagName + '>'\n      parser.state = S.TEXT\n      return\n    }\n    parser.tagName = tagName\n    var s = parser.tags.length\n    while (s-- > t) {\n      var tag = parser.tag = parser.tags.pop()\n      parser.tagName = parser.tag.name\n      emitNode(parser, 'onclosetag', parser.tagName)\n\n      var x = {}\n      for (var i in tag.ns) {\n        x[i] = tag.ns[i]\n      }\n\n      var parent = parser.tags[parser.tags.length - 1] || parser\n      if (parser.opt.xmlns && tag.ns !== parent.ns) {\n        // remove namespace bindings introduced by tag\n        Object.keys(tag.ns).forEach(function (p) {\n          var n = tag.ns[p]\n          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })\n        })\n      }\n    }\n    if (t === 0) parser.closedRoot = true\n    parser.tagName = parser.attribValue = parser.attribName = ''\n    parser.attribList.length = 0\n    parser.state = S.TEXT\n  }\n\n  function parseEntity (parser) {\n    var entity = parser.entity\n    var entityLC = entity.toLowerCase()\n    var num\n    var numStr = ''\n\n    if (parser.ENTITIES[entity]) {\n      return parser.ENTITIES[entity]\n    }\n    if (parser.ENTITIES[entityLC]) {\n      return parser.ENTITIES[entityLC]\n    }\n    entity = entityLC\n    if (entity.charAt(0) === '#') {\n      if (entity.charAt(1) === 'x') {\n        entity = entity.slice(2)\n        num = parseInt(entity, 16)\n        numStr = num.toString(16)\n      } else {\n        entity = entity.slice(1)\n        num = parseInt(entity, 10)\n        numStr = num.toString(10)\n      }\n    }\n    entity = entity.replace(/^0+/, '')\n    if (isNaN(num) || numStr.toLowerCase() !== entity) {\n      strictFail(parser, 'Invalid character entity')\n      return '&' + parser.entity + ';'\n    }\n\n    return String.fromCodePoint(num)\n  }\n\n  function beginWhiteSpace (parser, c) {\n    if (c === '<') {\n      parser.state = S.OPEN_WAKA\n      parser.startTagPosition = parser.position\n    } else if (!isWhitespace(c)) {\n      // have to process this as a text node.\n      // weird, but happens.\n      strictFail(parser, 'Non-whitespace before first tag.')\n      parser.textNode = c\n      parser.state = S.TEXT\n    }\n  }\n\n  function charAt (chunk, i) {\n    var result = ''\n    if (i < chunk.length) {\n      result = chunk.charAt(i)\n    }\n    return result\n  }\n\n  function write (chunk) {\n    var parser = this\n    if (this.error) {\n      throw this.error\n    }\n    if (parser.closed) {\n      return error(parser,\n        'Cannot write after close. Assign an onready handler.')\n    }\n    if (chunk === null) {\n      return end(parser)\n    }\n    if (typeof chunk === 'object') {\n      chunk = chunk.toString()\n    }\n    var i = 0\n    var c = ''\n    while (true) {\n      c = charAt(chunk, i++)\n      parser.c = c\n\n      if (!c) {\n        break\n      }\n\n      if (parser.trackPosition) {\n        parser.position++\n        if (c === '\\n') {\n          parser.line++\n          parser.column = 0\n        } else {\n          parser.column++\n        }\n      }\n\n      switch (parser.state) {\n        case S.BEGIN:\n          parser.state = S.BEGIN_WHITESPACE\n          if (c === '\\uFEFF') {\n            continue\n          }\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.BEGIN_WHITESPACE:\n          beginWhiteSpace(parser, c)\n          continue\n\n        case S.TEXT:\n          if (parser.sawRoot && !parser.closedRoot) {\n            var starti = i - 1\n            while (c && c !== '<' && c !== '&') {\n              c = charAt(chunk, i++)\n              if (c && parser.trackPosition) {\n                parser.position++\n                if (c === '\\n') {\n                  parser.line++\n                  parser.column = 0\n                } else {\n                  parser.column++\n                }\n              }\n            }\n            parser.textNode += chunk.substring(starti, i - 1)\n          }\n          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {\n            parser.state = S.OPEN_WAKA\n            parser.startTagPosition = parser.position\n          } else {\n            if (!isWhitespace(c) && (!parser.sawRoot || parser.closedRoot)) {\n              strictFail(parser, 'Text data outside of root node.')\n            }\n            if (c === '&') {\n              parser.state = S.TEXT_ENTITY\n            } else {\n              parser.textNode += c\n            }\n          }\n          continue\n\n        case S.SCRIPT:\n          // only non-strict\n          if (c === '<') {\n            parser.state = S.SCRIPT_ENDING\n          } else {\n            parser.script += c\n          }\n          continue\n\n        case S.SCRIPT_ENDING:\n          if (c === '/') {\n            parser.state = S.CLOSE_TAG\n          } else {\n            parser.script += '<' + c\n            parser.state = S.SCRIPT\n          }\n          continue\n\n        case S.OPEN_WAKA:\n          // either a /, ?, !, or text is coming next.\n          if (c === '!') {\n            parser.state = S.SGML_DECL\n            parser.sgmlDecl = ''\n          } else if (isWhitespace(c)) {\n            // wait for it...\n          } else if (isMatch(nameStart, c)) {\n            parser.state = S.OPEN_TAG\n            parser.tagName = c\n          } else if (c === '/') {\n            parser.state = S.CLOSE_TAG\n            parser.tagName = ''\n          } else if (c === '?') {\n            parser.state = S.PROC_INST\n            parser.procInstName = parser.procInstBody = ''\n          } else {\n            strictFail(parser, 'Unencoded <')\n            // if there was some whitespace, then add that in.\n            if (parser.startTagPosition + 1 < parser.position) {\n              var pad = parser.position - parser.startTagPosition\n              c = new Array(pad).join(' ') + c\n            }\n            parser.textNode += '<' + c\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.SGML_DECL:\n          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {\n            emitNode(parser, 'onopencdata')\n            parser.state = S.CDATA\n            parser.sgmlDecl = ''\n            parser.cdata = ''\n          } else if (parser.sgmlDecl + c === '--') {\n            parser.state = S.COMMENT\n            parser.comment = ''\n            parser.sgmlDecl = ''\n          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {\n            parser.state = S.DOCTYPE\n            if (parser.doctype || parser.sawRoot) {\n              strictFail(parser,\n                'Inappropriately located doctype declaration')\n            }\n            parser.doctype = ''\n            parser.sgmlDecl = ''\n          } else if (c === '>') {\n            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)\n            parser.sgmlDecl = ''\n            parser.state = S.TEXT\n          } else if (isQuote(c)) {\n            parser.state = S.SGML_DECL_QUOTED\n            parser.sgmlDecl += c\n          } else {\n            parser.sgmlDecl += c\n          }\n          continue\n\n        case S.SGML_DECL_QUOTED:\n          if (c === parser.q) {\n            parser.state = S.SGML_DECL\n            parser.q = ''\n          }\n          parser.sgmlDecl += c\n          continue\n\n        case S.DOCTYPE:\n          if (c === '>') {\n            parser.state = S.TEXT\n            emitNode(parser, 'ondoctype', parser.doctype)\n            parser.doctype = true // just remember that we saw it.\n          } else {\n            parser.doctype += c\n            if (c === '[') {\n              parser.state = S.DOCTYPE_DTD\n            } else if (isQuote(c)) {\n              parser.state = S.DOCTYPE_QUOTED\n              parser.q = c\n            }\n          }\n          continue\n\n        case S.DOCTYPE_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.q = ''\n            parser.state = S.DOCTYPE\n          }\n          continue\n\n        case S.DOCTYPE_DTD:\n          parser.doctype += c\n          if (c === ']') {\n            parser.state = S.DOCTYPE\n          } else if (isQuote(c)) {\n            parser.state = S.DOCTYPE_DTD_QUOTED\n            parser.q = c\n          }\n          continue\n\n        case S.DOCTYPE_DTD_QUOTED:\n          parser.doctype += c\n          if (c === parser.q) {\n            parser.state = S.DOCTYPE_DTD\n            parser.q = ''\n          }\n          continue\n\n        case S.COMMENT:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDING\n          } else {\n            parser.comment += c\n          }\n          continue\n\n        case S.COMMENT_ENDING:\n          if (c === '-') {\n            parser.state = S.COMMENT_ENDED\n            parser.comment = textopts(parser.opt, parser.comment)\n            if (parser.comment) {\n              emitNode(parser, 'oncomment', parser.comment)\n            }\n            parser.comment = ''\n          } else {\n            parser.comment += '-' + c\n            parser.state = S.COMMENT\n          }\n          continue\n\n        case S.COMMENT_ENDED:\n          if (c !== '>') {\n            strictFail(parser, 'Malformed comment')\n            // allow <!-- blah -- bloo --> in non-strict mode,\n            // which is a comment of \" blah -- bloo \"\n            parser.comment += '--' + c\n            parser.state = S.COMMENT\n          } else {\n            parser.state = S.TEXT\n          }\n          continue\n\n        case S.CDATA:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING\n          } else {\n            parser.cdata += c\n          }\n          continue\n\n        case S.CDATA_ENDING:\n          if (c === ']') {\n            parser.state = S.CDATA_ENDING_2\n          } else {\n            parser.cdata += ']' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.CDATA_ENDING_2:\n          if (c === '>') {\n            if (parser.cdata) {\n              emitNode(parser, 'oncdata', parser.cdata)\n            }\n            emitNode(parser, 'onclosecdata')\n            parser.cdata = ''\n            parser.state = S.TEXT\n          } else if (c === ']') {\n            parser.cdata += ']'\n          } else {\n            parser.cdata += ']]' + c\n            parser.state = S.CDATA\n          }\n          continue\n\n        case S.PROC_INST:\n          if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else if (isWhitespace(c)) {\n            parser.state = S.PROC_INST_BODY\n          } else {\n            parser.procInstName += c\n          }\n          continue\n\n        case S.PROC_INST_BODY:\n          if (!parser.procInstBody && isWhitespace(c)) {\n            continue\n          } else if (c === '?') {\n            parser.state = S.PROC_INST_ENDING\n          } else {\n            parser.procInstBody += c\n          }\n          continue\n\n        case S.PROC_INST_ENDING:\n          if (c === '>') {\n            emitNode(parser, 'onprocessinginstruction', {\n              name: parser.procInstName,\n              body: parser.procInstBody\n            })\n            parser.procInstName = parser.procInstBody = ''\n            parser.state = S.TEXT\n          } else {\n            parser.procInstBody += '?' + c\n            parser.state = S.PROC_INST_BODY\n          }\n          continue\n\n        case S.OPEN_TAG:\n          if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else {\n            newTag(parser)\n            if (c === '>') {\n              openTag(parser)\n            } else if (c === '/') {\n              parser.state = S.OPEN_TAG_SLASH\n            } else {\n              if (!isWhitespace(c)) {\n                strictFail(parser, 'Invalid character in tag name')\n              }\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.OPEN_TAG_SLASH:\n          if (c === '>') {\n            openTag(parser, true)\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Forward-slash in opening tag not followed by >')\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.ATTRIB:\n          // haven't read the attribute name yet.\n          if (isWhitespace(c)) {\n            continue\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (c === '>') {\n            strictFail(parser, 'Attribute without value')\n            parser.attribValue = parser.attribName\n            attrib(parser)\n            openTag(parser)\n          } else if (isWhitespace(c)) {\n            parser.state = S.ATTRIB_NAME_SAW_WHITE\n          } else if (isMatch(nameBody, c)) {\n            parser.attribName += c\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_NAME_SAW_WHITE:\n          if (c === '=') {\n            parser.state = S.ATTRIB_VALUE\n          } else if (isWhitespace(c)) {\n            continue\n          } else {\n            strictFail(parser, 'Attribute without value')\n            parser.tag.attributes[parser.attribName] = ''\n            parser.attribValue = ''\n            emitNode(parser, 'onattribute', {\n              name: parser.attribName,\n              value: ''\n            })\n            parser.attribName = ''\n            if (c === '>') {\n              openTag(parser)\n            } else if (isMatch(nameStart, c)) {\n              parser.attribName = c\n              parser.state = S.ATTRIB_NAME\n            } else {\n              strictFail(parser, 'Invalid attribute name')\n              parser.state = S.ATTRIB\n            }\n          }\n          continue\n\n        case S.ATTRIB_VALUE:\n          if (isWhitespace(c)) {\n            continue\n          } else if (isQuote(c)) {\n            parser.q = c\n            parser.state = S.ATTRIB_VALUE_QUOTED\n          } else {\n            strictFail(parser, 'Unquoted attribute value')\n            parser.state = S.ATTRIB_VALUE_UNQUOTED\n            parser.attribValue = c\n          }\n          continue\n\n        case S.ATTRIB_VALUE_QUOTED:\n          if (c !== parser.q) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_Q\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          parser.q = ''\n          parser.state = S.ATTRIB_VALUE_CLOSED\n          continue\n\n        case S.ATTRIB_VALUE_CLOSED:\n          if (isWhitespace(c)) {\n            parser.state = S.ATTRIB\n          } else if (c === '>') {\n            openTag(parser)\n          } else if (c === '/') {\n            parser.state = S.OPEN_TAG_SLASH\n          } else if (isMatch(nameStart, c)) {\n            strictFail(parser, 'No whitespace between attributes')\n            parser.attribName = c\n            parser.attribValue = ''\n            parser.state = S.ATTRIB_NAME\n          } else {\n            strictFail(parser, 'Invalid attribute name')\n          }\n          continue\n\n        case S.ATTRIB_VALUE_UNQUOTED:\n          if (!isAttribEnd(c)) {\n            if (c === '&') {\n              parser.state = S.ATTRIB_VALUE_ENTITY_U\n            } else {\n              parser.attribValue += c\n            }\n            continue\n          }\n          attrib(parser)\n          if (c === '>') {\n            openTag(parser)\n          } else {\n            parser.state = S.ATTRIB\n          }\n          continue\n\n        case S.CLOSE_TAG:\n          if (!parser.tagName) {\n            if (isWhitespace(c)) {\n              continue\n            } else if (notMatch(nameStart, c)) {\n              if (parser.script) {\n                parser.script += '</' + c\n                parser.state = S.SCRIPT\n              } else {\n                strictFail(parser, 'Invalid tagname in closing tag.')\n              }\n            } else {\n              parser.tagName = c\n            }\n          } else if (c === '>') {\n            closeTag(parser)\n          } else if (isMatch(nameBody, c)) {\n            parser.tagName += c\n          } else if (parser.script) {\n            parser.script += '</' + parser.tagName\n            parser.tagName = ''\n            parser.state = S.SCRIPT\n          } else {\n            if (!isWhitespace(c)) {\n              strictFail(parser, 'Invalid tagname in closing tag')\n            }\n            parser.state = S.CLOSE_TAG_SAW_WHITE\n          }\n          continue\n\n        case S.CLOSE_TAG_SAW_WHITE:\n          if (isWhitespace(c)) {\n            continue\n          }\n          if (c === '>') {\n            closeTag(parser)\n          } else {\n            strictFail(parser, 'Invalid characters in closing tag')\n          }\n          continue\n\n        case S.TEXT_ENTITY:\n        case S.ATTRIB_VALUE_ENTITY_Q:\n        case S.ATTRIB_VALUE_ENTITY_U:\n          var returnState\n          var buffer\n          switch (parser.state) {\n            case S.TEXT_ENTITY:\n              returnState = S.TEXT\n              buffer = 'textNode'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_Q:\n              returnState = S.ATTRIB_VALUE_QUOTED\n              buffer = 'attribValue'\n              break\n\n            case S.ATTRIB_VALUE_ENTITY_U:\n              returnState = S.ATTRIB_VALUE_UNQUOTED\n              buffer = 'attribValue'\n              break\n          }\n\n          if (c === ';') {\n            parser[buffer] += parseEntity(parser)\n            parser.entity = ''\n            parser.state = returnState\n          } else if (isMatch(parser.entity.length ? entityBody : entityStart, c)) {\n            parser.entity += c\n          } else {\n            strictFail(parser, 'Invalid character in entity name')\n            parser[buffer] += '&' + parser.entity + c\n            parser.entity = ''\n            parser.state = returnState\n          }\n\n          continue\n\n        default:\n          throw new Error(parser, 'Unknown state: ' + parser.state)\n      }\n    } // while\n\n    if (parser.position >= parser.bufferCheckPosition) {\n      checkBufferLength(parser)\n    }\n    return parser\n  }\n\n  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */\n  /* istanbul ignore next */\n  if (!String.fromCodePoint) {\n    (function () {\n      var stringFromCharCode = String.fromCharCode\n      var floor = Math.floor\n      var fromCodePoint = function () {\n        var MAX_SIZE = 0x4000\n        var codeUnits = []\n        var highSurrogate\n        var lowSurrogate\n        var index = -1\n        var length = arguments.length\n        if (!length) {\n          return ''\n        }\n        var result = ''\n        while (++index < length) {\n          var codePoint = Number(arguments[index])\n          if (\n            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n            codePoint < 0 || // not a valid Unicode code point\n            codePoint > 0x10FFFF || // not a valid Unicode code point\n            floor(codePoint) !== codePoint // not an integer\n          ) {\n            throw RangeError('Invalid code point: ' + codePoint)\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n            codeUnits.push(codePoint)\n          } else { // Astral code point; split in surrogate halves\n            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n            codePoint -= 0x10000\n            highSurrogate = (codePoint >> 10) + 0xD800\n            lowSurrogate = (codePoint % 0x400) + 0xDC00\n            codeUnits.push(highSurrogate, lowSurrogate)\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n            result += stringFromCharCode.apply(null, codeUnits)\n            codeUnits.length = 0\n          }\n        }\n        return result\n      }\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(String, 'fromCodePoint', {\n          value: fromCodePoint,\n          configurable: true,\n          writable: true\n        })\n      } else {\n        String.fromCodePoint = fromCodePoint\n      }\n    }())\n  }\n})(typeof exports === 'undefined' ? this.sax = {} : exports)\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  exports.stripBOM = function(str) {\n    if (str[0] === '\\uFEFF') {\n      return str.substring(1);\n    } else {\n      return str;\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, escapeCDATA, requiresCDATA, wrapCDATA,\n    hasProp = {}.hasOwnProperty;\n\n  builder = require('xmlbuilder');\n\n  defaults = require('./defaults').defaults;\n\n  requiresCDATA = function(entry) {\n    return typeof entry === \"string\" && (entry.indexOf('&') >= 0 || entry.indexOf('>') >= 0 || entry.indexOf('<') >= 0);\n  };\n\n  wrapCDATA = function(entry) {\n    return \"<![CDATA[\" + (escapeCDATA(entry)) + \"]]>\";\n  };\n\n  escapeCDATA = function(entry) {\n    return entry.replace(']]>', ']]]]><![CDATA[>');\n  };\n\n  exports.Builder = (function() {\n    function Builder(opts) {\n      var key, ref, value;\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n    }\n\n    Builder.prototype.buildObject = function(rootObj) {\n      var attrkey, charkey, render, rootElement, rootName;\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      if ((Object.keys(rootObj).length === 1) && (this.options.rootName === defaults['0.2'].rootName)) {\n        rootName = Object.keys(rootObj)[0];\n        rootObj = rootObj[rootName];\n      } else {\n        rootName = this.options.rootName;\n      }\n      render = (function(_this) {\n        return function(element, obj) {\n          var attr, child, entry, index, key, value;\n          if (typeof obj !== 'object') {\n            if (_this.options.cdata && requiresCDATA(obj)) {\n              element.raw(wrapCDATA(obj));\n            } else {\n              element.txt(obj);\n            }\n          } else if (Array.isArray(obj)) {\n            for (index in obj) {\n              if (!hasProp.call(obj, index)) continue;\n              child = obj[index];\n              for (key in child) {\n                entry = child[key];\n                element = render(element.ele(key), entry).up();\n              }\n            }\n          } else {\n            for (key in obj) {\n              if (!hasProp.call(obj, key)) continue;\n              child = obj[key];\n              if (key === attrkey) {\n                if (typeof child === \"object\") {\n                  for (attr in child) {\n                    value = child[attr];\n                    element = element.att(attr, value);\n                  }\n                }\n              } else if (key === charkey) {\n                if (_this.options.cdata && requiresCDATA(child)) {\n                  element = element.raw(wrapCDATA(child));\n                } else {\n                  element = element.txt(child);\n                }\n              } else if (Array.isArray(child)) {\n                for (index in child) {\n                  if (!hasProp.call(child, index)) continue;\n                  entry = child[index];\n                  if (typeof entry === 'string') {\n                    if (_this.options.cdata && requiresCDATA(entry)) {\n                      element = element.ele(key).raw(wrapCDATA(entry)).up();\n                    } else {\n                      element = element.ele(key, entry).up();\n                    }\n                  } else {\n                    element = render(element.ele(key), entry).up();\n                  }\n                }\n              } else if (typeof child === \"object\") {\n                element = render(element.ele(key), child).up();\n              } else {\n                if (typeof child === 'string' && _this.options.cdata && requiresCDATA(child)) {\n                  element = element.ele(key).raw(wrapCDATA(child)).up();\n                } else {\n                  if (child == null) {\n                    child = '';\n                  }\n                  element = element.ele(key, child.toString()).up();\n                }\n              }\n            }\n          }\n          return element;\n        };\n      })(this);\n      rootElement = builder.create(rootName, this.options.xmldec, this.options.doctype, {\n        headless: this.options.headless,\n        allowSurrogateChars: this.options.allowSurrogateChars\n      });\n      return render(rootElement, rootObj).end(this.options.renderOpts);\n    };\n\n    return Builder;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  exports.defaults = {\n    \"0.1\": {\n      explicitCharkey: false,\n      trim: true,\n      normalize: true,\n      normalizeTags: false,\n      attrkey: \"@\",\n      charkey: \"#\",\n      explicitArray: false,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: false,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      childkey: '@@',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      emptyTag: ''\n    },\n    \"0.2\": {\n      explicitCharkey: false,\n      trim: false,\n      normalize: false,\n      normalizeTags: false,\n      attrkey: \"$\",\n      charkey: \"_\",\n      explicitArray: true,\n      ignoreAttrs: false,\n      mergeAttrs: false,\n      explicitRoot: true,\n      validator: null,\n      xmlns: false,\n      explicitChildren: false,\n      preserveChildrenOrder: false,\n      childkey: '$$',\n      charsAsChildren: false,\n      includeWhiteChars: false,\n      async: false,\n      strict: true,\n      attrNameProcessors: null,\n      attrValueProcessors: null,\n      tagNameProcessors: null,\n      valueProcessors: null,\n      rootName: 'root',\n      xmldec: {\n        'version': '1.0',\n        'encoding': 'UTF-8',\n        'standalone': true\n      },\n      doctype: null,\n      renderOpts: {\n        'pretty': true,\n        'indent': '  ',\n        'newline': '\\n'\n      },\n      headless: false,\n      chunkSize: 10000,\n      emptyTag: '',\n      cdata: false\n    }\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var bom, defaults, events, isEmpty, processItem, processors, sax, setImmediate,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  sax = require('sax');\n\n  events = require('events');\n\n  bom = require('./bom');\n\n  processors = require('./processors');\n\n  setImmediate = require('timers').setImmediate;\n\n  defaults = require('./defaults').defaults;\n\n  isEmpty = function(thing) {\n    return typeof thing === \"object\" && (thing != null) && Object.keys(thing).length === 0;\n  };\n\n  processItem = function(processors, item, key) {\n    var i, len, process;\n    for (i = 0, len = processors.length; i < len; i++) {\n      process = processors[i];\n      item = process(item, key);\n    }\n    return item;\n  };\n\n  exports.Parser = (function(superClass) {\n    extend(Parser, superClass);\n\n    function Parser(opts) {\n      this.parseString = bind(this.parseString, this);\n      this.reset = bind(this.reset, this);\n      this.assignOrPush = bind(this.assignOrPush, this);\n      this.processAsync = bind(this.processAsync, this);\n      var key, ref, value;\n      if (!(this instanceof exports.Parser)) {\n        return new exports.Parser(opts);\n      }\n      this.options = {};\n      ref = defaults[\"0.2\"];\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this.options[key] = value;\n      }\n      for (key in opts) {\n        if (!hasProp.call(opts, key)) continue;\n        value = opts[key];\n        this.options[key] = value;\n      }\n      if (this.options.xmlns) {\n        this.options.xmlnskey = this.options.attrkey + \"ns\";\n      }\n      if (this.options.normalizeTags) {\n        if (!this.options.tagNameProcessors) {\n          this.options.tagNameProcessors = [];\n        }\n        this.options.tagNameProcessors.unshift(processors.normalize);\n      }\n      this.reset();\n    }\n\n    Parser.prototype.processAsync = function() {\n      var chunk, err;\n      try {\n        if (this.remaining.length <= this.options.chunkSize) {\n          chunk = this.remaining;\n          this.remaining = '';\n          this.saxParser = this.saxParser.write(chunk);\n          return this.saxParser.close();\n        } else {\n          chunk = this.remaining.substr(0, this.options.chunkSize);\n          this.remaining = this.remaining.substr(this.options.chunkSize, this.remaining.length);\n          this.saxParser = this.saxParser.write(chunk);\n          return setImmediate(this.processAsync);\n        }\n      } catch (error1) {\n        err = error1;\n        if (!this.saxParser.errThrown) {\n          this.saxParser.errThrown = true;\n          return this.emit(err);\n        }\n      }\n    };\n\n    Parser.prototype.assignOrPush = function(obj, key, newValue) {\n      if (!(key in obj)) {\n        if (!this.options.explicitArray) {\n          return obj[key] = newValue;\n        } else {\n          return obj[key] = [newValue];\n        }\n      } else {\n        if (!(obj[key] instanceof Array)) {\n          obj[key] = [obj[key]];\n        }\n        return obj[key].push(newValue);\n      }\n    };\n\n    Parser.prototype.reset = function() {\n      var attrkey, charkey, ontext, stack;\n      this.removeAllListeners();\n      this.saxParser = sax.parser(this.options.strict, {\n        trim: false,\n        normalize: false,\n        xmlns: this.options.xmlns\n      });\n      this.saxParser.errThrown = false;\n      this.saxParser.onerror = (function(_this) {\n        return function(error) {\n          _this.saxParser.resume();\n          if (!_this.saxParser.errThrown) {\n            _this.saxParser.errThrown = true;\n            return _this.emit(\"error\", error);\n          }\n        };\n      })(this);\n      this.saxParser.onend = (function(_this) {\n        return function() {\n          if (!_this.saxParser.ended) {\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      this.saxParser.ended = false;\n      this.EXPLICIT_CHARKEY = this.options.explicitCharkey;\n      this.resultObject = null;\n      stack = [];\n      attrkey = this.options.attrkey;\n      charkey = this.options.charkey;\n      this.saxParser.onopentag = (function(_this) {\n        return function(node) {\n          var key, newValue, obj, processedKey, ref;\n          obj = {};\n          obj[charkey] = \"\";\n          if (!_this.options.ignoreAttrs) {\n            ref = node.attributes;\n            for (key in ref) {\n              if (!hasProp.call(ref, key)) continue;\n              if (!(attrkey in obj) && !_this.options.mergeAttrs) {\n                obj[attrkey] = {};\n              }\n              newValue = _this.options.attrValueProcessors ? processItem(_this.options.attrValueProcessors, node.attributes[key], key) : node.attributes[key];\n              processedKey = _this.options.attrNameProcessors ? processItem(_this.options.attrNameProcessors, key) : key;\n              if (_this.options.mergeAttrs) {\n                _this.assignOrPush(obj, processedKey, newValue);\n              } else {\n                obj[attrkey][processedKey] = newValue;\n              }\n            }\n          }\n          obj[\"#name\"] = _this.options.tagNameProcessors ? processItem(_this.options.tagNameProcessors, node.name) : node.name;\n          if (_this.options.xmlns) {\n            obj[_this.options.xmlnskey] = {\n              uri: node.uri,\n              local: node.local\n            };\n          }\n          return stack.push(obj);\n        };\n      })(this);\n      this.saxParser.onclosetag = (function(_this) {\n        return function() {\n          var cdata, emptyStr, key, node, nodeName, obj, objClone, old, s, xpath;\n          obj = stack.pop();\n          nodeName = obj[\"#name\"];\n          if (!_this.options.explicitChildren || !_this.options.preserveChildrenOrder) {\n            delete obj[\"#name\"];\n          }\n          if (obj.cdata === true) {\n            cdata = obj.cdata;\n            delete obj.cdata;\n          }\n          s = stack[stack.length - 1];\n          if (obj[charkey].match(/^\\s*$/) && !cdata) {\n            emptyStr = obj[charkey];\n            delete obj[charkey];\n          } else {\n            if (_this.options.trim) {\n              obj[charkey] = obj[charkey].trim();\n            }\n            if (_this.options.normalize) {\n              obj[charkey] = obj[charkey].replace(/\\s{2,}/g, \" \").trim();\n            }\n            obj[charkey] = _this.options.valueProcessors ? processItem(_this.options.valueProcessors, obj[charkey], nodeName) : obj[charkey];\n            if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n              obj = obj[charkey];\n            }\n          }\n          if (isEmpty(obj)) {\n            obj = _this.options.emptyTag !== '' ? _this.options.emptyTag : emptyStr;\n          }\n          if (_this.options.validator != null) {\n            xpath = \"/\" + ((function() {\n              var i, len, results;\n              results = [];\n              for (i = 0, len = stack.length; i < len; i++) {\n                node = stack[i];\n                results.push(node[\"#name\"]);\n              }\n              return results;\n            })()).concat(nodeName).join(\"/\");\n            (function() {\n              var err;\n              try {\n                return obj = _this.options.validator(xpath, s && s[nodeName], obj);\n              } catch (error1) {\n                err = error1;\n                return _this.emit(\"error\", err);\n              }\n            })();\n          }\n          if (_this.options.explicitChildren && !_this.options.mergeAttrs && typeof obj === 'object') {\n            if (!_this.options.preserveChildrenOrder) {\n              node = {};\n              if (_this.options.attrkey in obj) {\n                node[_this.options.attrkey] = obj[_this.options.attrkey];\n                delete obj[_this.options.attrkey];\n              }\n              if (!_this.options.charsAsChildren && _this.options.charkey in obj) {\n                node[_this.options.charkey] = obj[_this.options.charkey];\n                delete obj[_this.options.charkey];\n              }\n              if (Object.getOwnPropertyNames(obj).length > 0) {\n                node[_this.options.childkey] = obj;\n              }\n              obj = node;\n            } else if (s) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              objClone = {};\n              for (key in obj) {\n                if (!hasProp.call(obj, key)) continue;\n                objClone[key] = obj[key];\n              }\n              s[_this.options.childkey].push(objClone);\n              delete obj[\"#name\"];\n              if (Object.keys(obj).length === 1 && charkey in obj && !_this.EXPLICIT_CHARKEY) {\n                obj = obj[charkey];\n              }\n            }\n          }\n          if (stack.length > 0) {\n            return _this.assignOrPush(s, nodeName, obj);\n          } else {\n            if (_this.options.explicitRoot) {\n              old = obj;\n              obj = {};\n              obj[nodeName] = old;\n            }\n            _this.resultObject = obj;\n            _this.saxParser.ended = true;\n            return _this.emit(\"end\", _this.resultObject);\n          }\n        };\n      })(this);\n      ontext = (function(_this) {\n        return function(text) {\n          var charChild, s;\n          s = stack[stack.length - 1];\n          if (s) {\n            s[charkey] += text;\n            if (_this.options.explicitChildren && _this.options.preserveChildrenOrder && _this.options.charsAsChildren && (_this.options.includeWhiteChars || text.replace(/\\\\n/g, '').trim() !== '')) {\n              s[_this.options.childkey] = s[_this.options.childkey] || [];\n              charChild = {\n                '#name': '__text__'\n              };\n              charChild[charkey] = text;\n              if (_this.options.normalize) {\n                charChild[charkey] = charChild[charkey].replace(/\\s{2,}/g, \" \").trim();\n              }\n              s[_this.options.childkey].push(charChild);\n            }\n            return s;\n          }\n        };\n      })(this);\n      this.saxParser.ontext = ontext;\n      return this.saxParser.oncdata = (function(_this) {\n        return function(text) {\n          var s;\n          s = ontext(text);\n          if (s) {\n            return s.cdata = true;\n          }\n        };\n      })(this);\n    };\n\n    Parser.prototype.parseString = function(str, cb) {\n      var err;\n      if ((cb != null) && typeof cb === \"function\") {\n        this.on(\"end\", function(result) {\n          this.reset();\n          return cb(null, result);\n        });\n        this.on(\"error\", function(err) {\n          this.reset();\n          return cb(err);\n        });\n      }\n      try {\n        str = str.toString();\n        if (str.trim() === '') {\n          this.emit(\"end\", null);\n          return true;\n        }\n        str = bom.stripBOM(str);\n        if (this.options.async) {\n          this.remaining = str;\n          setImmediate(this.processAsync);\n          return this.saxParser;\n        }\n        return this.saxParser.write(str).close();\n      } catch (error1) {\n        err = error1;\n        if (!(this.saxParser.errThrown || this.saxParser.ended)) {\n          this.emit('error', err);\n          return this.saxParser.errThrown = true;\n        } else if (this.saxParser.ended) {\n          throw err;\n        }\n      }\n    };\n\n    return Parser;\n\n  })(events.EventEmitter);\n\n  exports.parseString = function(str, a, b) {\n    var cb, options, parser;\n    if (b != null) {\n      if (typeof b === 'function') {\n        cb = b;\n      }\n      if (typeof a === 'object') {\n        options = a;\n      }\n    } else {\n      if (typeof a === 'function') {\n        cb = a;\n      }\n      options = {};\n    }\n    parser = new exports.Parser(options);\n    return parser.parseString(str, cb);\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var prefixMatch;\n\n  prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n  exports.normalize = function(str) {\n    return str.toLowerCase();\n  };\n\n  exports.firstCharLowerCase = function(str) {\n    return str.charAt(0).toLowerCase() + str.slice(1);\n  };\n\n  exports.stripPrefix = function(str) {\n    return str.replace(prefixMatch, '');\n  };\n\n  exports.parseNumbers = function(str) {\n    if (!isNaN(str)) {\n      str = str % 1 === 0 ? parseInt(str, 10) : parseFloat(str);\n    }\n    return str;\n  };\n\n  exports.parseBooleans = function(str) {\n    if (/^(?:true|false)$/i.test(str)) {\n      str = str.toLowerCase() === 'true';\n    }\n    return str;\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  \"use strict\";\n  var builder, defaults, parser, processors,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  defaults = require('./defaults');\n\n  builder = require('./builder');\n\n  parser = require('./parser');\n\n  processors = require('./processors');\n\n  exports.defaults = defaults.defaults;\n\n  exports.processors = processors;\n\n  exports.ValidationError = (function(superClass) {\n    extend(ValidationError, superClass);\n\n    function ValidationError(message) {\n      this.message = message;\n    }\n\n    return ValidationError;\n\n  })(Error);\n\n  exports.Builder = builder.Builder;\n\n  exports.Parser = parser.Parser;\n\n  exports.parseString = parser.parseString;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute;\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.options = parent.options;\n      this.stringify = parent.stringify;\n      if (name == null) {\n        throw new Error(\"Missing attribute name of element \" + parent.name);\n      }\n      if (value == null) {\n        throw new Error(\"Missing attribute value for attribute \" + name + \" of element \" + parent.name);\n      }\n      this.name = this.stringify.attName(name);\n      this.value = this.stringify.attValue(value);\n    }\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.set(options).attribute(this);\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text\");\n      }\n      this.text = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.set(options).cdata(this);\n    };\n\n    return XMLCData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLComment, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text\");\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.set(options).comment(this);\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.eleName(name);\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdElement(this);\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing entity name\");\n      }\n      if (value == null) {\n        throw new Error(\"Missing entity value\");\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.eleName(name);\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity\");\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity\");\n        }\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity\");\n        }\n      }\n    }\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdEntity(this);\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing notation name\");\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity\");\n      }\n      this.name = this.stringify.eleName(name);\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdNotation(this);\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.set(options).declaration(this);\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var ref, ref1;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref = pubID, pubID = ref.pubID, sysID = ref.sysID;\n      }\n      if (sysID == null) {\n        ref1 = [pubID, sysID], sysID = ref1[0], pubID = ref1[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.set(options).docType(this);\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLNode = require('./XMLNode');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n      this.isDocument = true;\n    }\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer.set(writerOptions);\n      }\n      return writer.document(this);\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.set(options).document(this);\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject;\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter(options);\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter(writerOptions);\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node\");\n      }\n      this.openCurrent();\n      name = name.valueOf();\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.dtdElement.apply(this, arguments);\n      } else {\n        return this.node(name, attributes, text);\n      }\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode\");\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.currentNode.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.currentLevel + 1));\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.currentLevel + 1));\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node instanceof XMLElement) {\n          this.root = node;\n        }\n        this.onData(this.writer.openNode(node, this.currentLevel));\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      if (!node.isClosed) {\n        this.onData(this.writer.closeNode(node, this.currentLevel));\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode instanceof XMLDocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLAttribute, XMLElement, XMLNode, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction;\n\n  XMLNode = require('./XMLNode');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name\");\n      }\n      this.name = this.stringify.eleName(name);\n      this.attributes = {};\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.isDocument) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n      }\n    }\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attributes = {};\n      ref1 = this.attributes;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attributes[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (!this.options.skipNullAttributes || (value != null)) {\n          this.attributes[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, i, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name\");\n      }\n      name = name.valueOf();\n      if (Array.isArray(name)) {\n        for (i = 0, len = name.length; i < len; i++) {\n          attName = name[i];\n          delete this.attributes[attName];\n        }\n      } else {\n        delete this.attributes[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.set(options).element(this);\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLElement, XMLNode, XMLProcessingInstruction, XMLRaw, XMLText, isEmpty, isFunction, isObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isEmpty = ref.isEmpty;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.children = [];\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n      }\n    }\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref1, val;\n      lastChild = null;\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      if (name != null) {\n        name = name.valueOf();\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if ((isObject(val)) && (isEmpty(val))) {\n            val = null;\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            lastChild = this.element(key);\n            lastChild.element(val);\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name);\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level\");\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref1;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element\");\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref1 = [])), ref1;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref1;\n      if (name != null) {\n        name = name.valueOf();\n      }\n      attributes || (attributes = {});\n      attributes = attributes.valueOf();\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = target.valueOf();\n      }\n      if (value != null) {\n        value = value.valueOf();\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children[0] instanceof XMLDeclaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.doctype = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref1, ref2;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref1 = doc.children;\n      for (i = j = 0, len = ref1.length; j < len; i = ++j) {\n        child = ref1[i];\n        if (child instanceof XMLDocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref2 = doc.children;\n      for (i = k = 0, len1 = ref2.length; k < len1; i = ++k) {\n        child = ref2[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.isDocument) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node\");\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node\");\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      return this.doctype(pubID, sysID);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target\");\n      }\n      this.target = this.stringify.insTarget(target);\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.set(options).processingInstruction(this);\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text\");\n      }\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.set(options).raw(this);\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNode, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text\");\n      }\n      this.value = this.stringify.eleText(text);\n    }\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.set(options).text(this);\n    };\n\n    return XMLText;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLWriterBase,\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, ref1, ref2, ref3, ref4, ref5, ref6, value;\n      options || (options = {});\n      this.pretty = options.pretty || false;\n      this.allowEmpty = (ref = options.allowEmpty) != null ? ref : false;\n      if (this.pretty) {\n        this.indent = (ref1 = options.indent) != null ? ref1 : '  ';\n        this.newline = (ref2 = options.newline) != null ? ref2 : '\\n';\n        this.offset = (ref3 = options.offset) != null ? ref3 : 0;\n        this.dontprettytextnodes = (ref4 = options.dontprettytextnodes) != null ? ref4 : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = (ref5 = options.spacebeforeslash) != null ? ref5 : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref6 = options.writer || {};\n      for (key in ref6) {\n        if (!hasProp.call(ref6, key)) continue;\n        value = ref6[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.set = function(options) {\n      var key, ref, value;\n      options || (options = {});\n      if (\"pretty\" in options) {\n        this.pretty = options.pretty;\n      }\n      if (\"allowEmpty\" in options) {\n        this.allowEmpty = options.allowEmpty;\n      }\n      if (this.pretty) {\n        this.indent = \"indent\" in options ? options.indent : '  ';\n        this.newline = \"newline\" in options ? options.newline : '\\n';\n        this.offset = \"offset\" in options ? options.offset : 0;\n        this.dontprettytextnodes = \"dontprettytextnodes\" in options ? options.dontprettytextnodes : 0;\n      } else {\n        this.indent = '';\n        this.newline = '';\n        this.offset = 0;\n        this.dontprettytextnodes = 0;\n      }\n      this.spacebeforeslash = \"spacebeforeslash\" in options ? options.spacebeforeslash : '';\n      if (this.spacebeforeslash === true) {\n        this.spacebeforeslash = ' ';\n      }\n      this.newlinedefault = this.newline;\n      this.prettydefault = this.pretty;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n      return this;\n    };\n\n    XMLWriterBase.prototype.space = function(level) {\n      var indent;\n      if (this.pretty) {\n        indent = (level || 0) + this.offset + 1;\n        if (indent > 0) {\n          return new Array(indent).join(this.indent);\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    };\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.doctype(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n}).call(this);\n"]}